{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\pages\\\\charts\\\\Apex\\\\MultipleYaxisChart.tsx\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\n// components\nimport Loader from '../../../components/Loader';\nimport { BasicPortlet } from '../../../components/Portlet'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MultipleYaxisChart = _ref => {\n  let {\n    multiYaxisChartData,\n    showLoader\n  } = _ref;\n  const options = {\n    chart: {\n      height: 380,\n      type: 'line',\n      stacked: false,\n      toolbar: {\n        show: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      width: [0, 0, 3]\n    },\n    xaxis: {\n      categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016]\n    },\n    colors: ['#3bafda', '#ebf2f6', '#f672a7'],\n    yaxis: [{\n      axisTicks: {\n        show: true\n      },\n      axisBorder: {\n        show: true,\n        color: '#675db7'\n      },\n      labels: {\n        style: {\n          colors: ['#675db7']\n        }\n      },\n      title: {\n        text: 'Income (thousand crores)'\n      }\n    }, {\n      axisTicks: {\n        show: true\n      },\n      axisBorder: {\n        show: true,\n        color: '#23b397'\n      },\n      labels: {\n        style: {\n          colors: ['#23b397']\n        },\n        offsetX: 10\n      },\n      title: {\n        text: 'Operating Cashflow (thousand crores)'\n      }\n    }, {\n      opposite: true,\n      axisTicks: {\n        show: true\n      },\n      axisBorder: {\n        show: true,\n        color: '#e36498'\n      },\n      labels: {\n        style: {\n          colors: ['#e36498']\n        }\n      },\n      title: {\n        text: 'Revenue (thousand crores)'\n      }\n    }],\n    tooltip: {\n      followCursor: true,\n      y: {\n        formatter: function (y) {\n          if (typeof y !== 'undefined') {\n            return y + ' thousand crores';\n          }\n\n          return y;\n        }\n      }\n    },\n    grid: {\n      borderColor: '#f1f3fa',\n      padding: {\n        bottom: 10\n      }\n    },\n    legend: {\n      offsetY: 7\n    },\n    responsive: [{\n      breakpoint: 600,\n      options: {\n        yaxis: {\n          show: false\n        },\n        legend: {\n          show: false\n        }\n      }\n    }]\n  };\n  const series = [{\n    name: 'Income',\n    type: 'column',\n    data: multiYaxisChartData.data1 || []\n  }, {\n    name: 'Cashflow',\n    type: 'column',\n    data: multiYaxisChartData.data2 || []\n  }, {\n    name: 'Revenue',\n    type: 'line',\n    data: multiYaxisChartData.data3 || []\n  }];\n  return /*#__PURE__*/_jsxDEV(BasicPortlet, {\n    cardTitle: \"Multiple Y-Axis Chart\",\n    titleClass: \"header-title mb-0\",\n    children: showLoader ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 380,\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: series,\n      height: 380,\n      className: \"apex-charts\",\n      dir: \"ltr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MultipleYaxisChart;\nexport default MultipleYaxisChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleYaxisChart\");","map":{"version":3,"sources":["C:/proyecto/practica/src/pages/charts/Apex/MultipleYaxisChart.tsx"],"names":["React","Chart","Loader","BasicPortlet","MultipleYaxisChart","multiYaxisChartData","showLoader","options","chart","height","type","stacked","toolbar","show","dataLabels","enabled","stroke","width","xaxis","categories","colors","yaxis","axisTicks","axisBorder","color","labels","style","title","text","offsetX","opposite","tooltip","followCursor","y","formatter","grid","borderColor","padding","bottom","legend","offsetY","responsive","breakpoint","series","name","data","data1","data2","data3","position"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../../components/Loader';\nimport { BasicPortlet } from '../../../components/Portlet';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface MultipleYaxisChartProps {\n    multiYaxisChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst MultipleYaxisChart = ({ multiYaxisChartData, showLoader }: MultipleYaxisChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'line',\n            stacked: false,\n            toolbar: {\n                show: false,\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            width: [0, 0, 3],\n        },\n        xaxis: {\n            categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016],\n        },\n        colors: ['#3bafda', '#ebf2f6', '#f672a7'],\n        yaxis: [\n            {\n                axisTicks: {\n                    show: true,\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#675db7',\n                },\n                labels: {\n                    style: {\n                        colors: ['#675db7'],\n                    },\n                },\n                title: {\n                    text: 'Income (thousand crores)',\n                },\n            },\n\n            {\n                axisTicks: {\n                    show: true,\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#23b397',\n                },\n                labels: {\n                    style: {\n                        colors: ['#23b397'],\n                    },\n                    offsetX: 10,\n                },\n                title: {\n                    text: 'Operating Cashflow (thousand crores)',\n                },\n            },\n            {\n                opposite: true,\n                axisTicks: {\n                    show: true,\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#e36498',\n                },\n                labels: {\n                    style: {\n                        colors: ['#e36498'],\n                    },\n                },\n                title: {\n                    text: 'Revenue (thousand crores)',\n                },\n            },\n        ],\n        tooltip: {\n            followCursor: true,\n            y: {\n                formatter: function (y) {\n                    if (typeof y !== 'undefined') {\n                        return y + ' thousand crores';\n                    }\n                    return y;\n                },\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n            padding: {\n                bottom: 10,\n            },\n        },\n        legend: {\n            offsetY: 7,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    yaxis: {\n                        show: false,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = [\n        {\n            name: 'Income',\n            type: 'column',\n            data: multiYaxisChartData.data1 || [],\n        },\n        {\n            name: 'Cashflow',\n            type: 'column',\n            data: multiYaxisChartData.data2 || [],\n        },\n        {\n            name: 'Revenue',\n            type: 'line',\n            data: multiYaxisChartData.data3 || [],\n        },\n    ];\n\n    return (\n        <BasicPortlet cardTitle=\"Multiple Y-Axis Chart\" titleClass=\"header-title mb-0\">\n            {showLoader ? (\n                <div style={{ height: 380, position: 'relative' }}>\n                    <Loader />\n                </div>\n            ) : (\n                <Chart options={options} series={series} height={380} className=\"apex-charts\" dir=\"ltr\" />\n            )}\n        </BasicPortlet>\n    );\n};\n\nexport default MultipleYaxisChart;\n"]},"metadata":{},"sourceType":"module"}