{"ast":null,"code":"// app constants\nimport { SideBarTypes, LayoutWidth } from '../constants';\n\nconst getLayoutConfigs = layoutWidth => {\n  // add property to change in particular layoutWidth\n  let config = {\n    leftSideBarType: SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT\n  };\n\n  switch (layoutWidth) {\n    case LayoutWidth.LAYOUT_WIDTH_FLUID:\n      config.leftSideBarType = SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT;\n      break;\n\n    case LayoutWidth.LAYOUT_WIDTH_BOXED:\n      config.leftSideBarType = SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED;\n      break;\n\n    default:\n      return config;\n  }\n\n  return config;\n};\n/**\n * Changes the body attribute\n */\n\n\nconst changeBodyAttribute = (attribute, value) => {\n  if (document.body) document.body.setAttribute(attribute, value);\n};\n\nexport { getLayoutConfigs, changeBodyAttribute };","map":{"version":3,"sources":["C:/proyecto/practica/src/utils/layout.ts"],"names":["SideBarTypes","LayoutWidth","getLayoutConfigs","layoutWidth","config","leftSideBarType","LEFT_SIDEBAR_TYPE_DEFAULT","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_TYPE_CONDENSED","changeBodyAttribute","attribute","value","document","body","setAttribute"],"mappings":"AAAA;AACA,SAASA,YAAT,EAAuBC,WAAvB,QAA0C,cAA1C;;AASA,MAAMC,gBAAgB,GAAIC,WAAD,IAA0C;AAC/D;AACA,MAAIC,MAAmB,GAAG;AACtBC,IAAAA,eAAe,EAAEL,YAAY,CAACM;AADR,GAA1B;;AAIA,UAAQH,WAAR;AACI,SAAKF,WAAW,CAACM,kBAAjB;AACIH,MAAAA,MAAM,CAACC,eAAP,GAAyBL,YAAY,CAACM,yBAAtC;AACA;;AACJ,SAAKL,WAAW,CAACO,kBAAjB;AACIJ,MAAAA,MAAM,CAACC,eAAP,GAAyBL,YAAY,CAACS,2BAAtC;AACA;;AACJ;AACI,aAAOL,MAAP;AARR;;AAUA,SAAOA,MAAP;AACH,CAjBD;AAmBA;AACA;AACA;;;AACA,MAAMM,mBAAmB,GAAG,CAACC,SAAD,EAAoBC,KAApB,KAA4C;AACpE,MAAIC,QAAQ,CAACC,IAAb,EAAmBD,QAAQ,CAACC,IAAT,CAAcC,YAAd,CAA2BJ,SAA3B,EAAsCC,KAAtC;AACtB,CAFD;;AAIA,SAASV,gBAAT,EAA2BQ,mBAA3B","sourcesContent":["// app constants\nimport { SideBarTypes, LayoutWidth } from '../constants';\n\ninterface ConfigTypes {\n    leftSideBarType:\n        | SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT\n        | SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED\n        | SideBarTypes.LEFT_SIDEBAR_TYPE_COMPACT;\n}\n\nconst getLayoutConfigs = (layoutWidth: string | boolean | null) => {\n    // add property to change in particular layoutWidth\n    let config: ConfigTypes = {\n        leftSideBarType: SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT,\n    };\n\n    switch (layoutWidth) {\n        case LayoutWidth.LAYOUT_WIDTH_FLUID:\n            config.leftSideBarType = SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT;\n            break;\n        case LayoutWidth.LAYOUT_WIDTH_BOXED:\n            config.leftSideBarType = SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED;\n            break;\n        default:\n            return config;\n    }\n    return config;\n};\n\n/**\n * Changes the body attribute\n */\nconst changeBodyAttribute = (attribute: string, value: string): void => {\n    if (document.body) document.body.setAttribute(attribute, value);\n};\n\nexport { getLayoutConfigs, changeBodyAttribute };\n"]},"metadata":{},"sourceType":"module"}