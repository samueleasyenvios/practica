{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\pages\\\\maps\\\\GoogleMaps.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { Map, Marker, GoogleApiWrapper, InfoWindow, Polygon, Polyline } from 'google-maps-react'; // components\n\nimport PageTitle from '../../components/PageTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicMap = _ref => {\n  let {\n    google\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mb-3\",\n        children: \"Basic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"gmaps-basic\",\n        style: {\n          position: 'relative'\n        },\n        className: \"gmaps\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          google: google,\n          initialCenter: {\n            lat: 21.569874,\n            lng: 71.5893798\n          },\n          zoom: 14,\n          style: {\n            width: '100%',\n            height: '100%',\n            position: 'relative'\n          },\n          zoomControlOptions: {\n            position: google.maps.ControlPosition.LEFT_TOP\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BasicMap;\n\nconst WithMarkers = _ref2 => {\n  let {\n    google\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mb-3\",\n        children: \"Markers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gmaps\",\n        style: {\n          position: 'relative',\n          overflow: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          google: google,\n          zoom: 18,\n          initialCenter: {\n            lat: 21.569874,\n            lng: 71.5893798\n          },\n          style: {\n            width: '100%',\n            height: '100%',\n            position: 'relative'\n          },\n          zoomControlOptions: {\n            position: google.maps.ControlPosition.LEFT_TOP\n          },\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            name: \"SOMA\",\n            position: {\n              lat: 21.56956,\n              lng: 71.5892598\n            },\n            title: \"The marker`s title will appear as a tooltip.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            name: \"Dolores park\",\n            position: {\n              lat: 21.56969,\n              lng: 71.5893798\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = WithMarkers;\n\nconst LightStyledMap = _ref3 => {\n  let {\n    google\n  } = _ref3;\n  const mapStyles = [{\n    featureType: 'water',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#e9e9e9'\n    }, {\n      lightness: 17\n    }]\n  }, {\n    featureType: 'landscape',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#f5f5f5'\n    }, {\n      lightness: 20\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'geometry.fill',\n    stylers: [{\n      color: '#ffffff'\n    }, {\n      lightness: 17\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'geometry.stroke',\n    stylers: [{\n      color: '#ffffff'\n    }, {\n      lightness: 29\n    }, {\n      weight: 0.2\n    }]\n  }, {\n    featureType: 'road.arterial',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#ffffff'\n    }, {\n      lightness: 18\n    }]\n  }, {\n    featureType: 'road.local',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#ffffff'\n    }, {\n      lightness: 16\n    }]\n  }, {\n    featureType: 'poi',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#f5f5f5'\n    }, {\n      lightness: 21\n    }]\n  }, {\n    featureType: 'poi.park',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#dedede'\n    }, {\n      lightness: 21\n    }]\n  }, {\n    elementType: 'labels.text.stroke',\n    stylers: [{\n      visibility: 'on'\n    }, {\n      color: '#ffffff'\n    }, {\n      lightness: 16\n    }]\n  }, {\n    elementType: 'labels.text.fill',\n    stylers: [{\n      saturation: 36\n    }, {\n      color: '#333333'\n    }, {\n      lightness: 40\n    }]\n  }, {\n    elementType: 'labels.icon',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'transit',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#f2f2f2'\n    }, {\n      lightness: 19\n    }]\n  }, {\n    featureType: 'administrative',\n    elementType: 'geometry.fill',\n    stylers: [{\n      color: '#fefefe'\n    }, {\n      lightness: 20\n    }]\n  }, {\n    featureType: 'administrative',\n    elementType: 'geometry.stroke',\n    stylers: [{\n      color: '#fefefe'\n    }, {\n      lightness: 17\n    }, {\n      weight: 1.2\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mb-3\",\n        children: \"Ultra Light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ultra-light\",\n        className: \"gmaps\",\n        style: {\n          position: 'relative',\n          overflow: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          google: google,\n          zoom: 14,\n          initialCenter: {\n            lat: 40.7295174,\n            lng: -73.9986496\n          },\n          style: {\n            width: '100%',\n            height: '100%',\n            position: 'relative'\n          },\n          styles: mapStyles,\n          zoomControlOptions: {\n            position: google.maps.ControlPosition.LEFT_TOP\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = LightStyledMap;\n\nconst DarkStyledMap = _ref4 => {\n  let {\n    google\n  } = _ref4;\n  const mapStyles = [{\n    featureType: 'all',\n    elementType: 'labels',\n    stylers: [{\n      visibility: 'on'\n    }]\n  }, {\n    featureType: 'all',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      saturation: 36\n    }, {\n      color: '#000000'\n    }, {\n      lightness: 40\n    }]\n  }, {\n    featureType: 'all',\n    elementType: 'labels.text.stroke',\n    stylers: [{\n      visibility: 'on'\n    }, {\n      color: '#000000'\n    }, {\n      lightness: 16\n    }]\n  }, {\n    featureType: 'all',\n    elementType: 'labels.icon',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'administrative',\n    elementType: 'geometry.fill',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 20\n    }]\n  }, {\n    featureType: 'administrative',\n    elementType: 'geometry.stroke',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 17\n    }, {\n      weight: 1.2\n    }]\n  }, {\n    featureType: 'administrative.country',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#e5c163'\n    }]\n  }, {\n    featureType: 'administrative.locality',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#c4c4c4'\n    }]\n  }, {\n    featureType: 'administrative.neighborhood',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#e5c163'\n    }]\n  }, {\n    featureType: 'landscape',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 20\n    }]\n  }, {\n    featureType: 'poi',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 21\n    }, {\n      visibility: 'on'\n    }]\n  }, {\n    featureType: 'poi.business',\n    elementType: 'geometry',\n    stylers: [{\n      visibility: 'on'\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'geometry.fill',\n    stylers: [{\n      color: '#e5c163'\n    }, {\n      lightness: '0'\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'geometry.stroke',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#ffffff'\n    }]\n  }, {\n    featureType: 'road.highway',\n    elementType: 'labels.text.stroke',\n    stylers: [{\n      color: '#e5c163'\n    }]\n  }, {\n    featureType: 'road.arterial',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 18\n    }]\n  }, {\n    featureType: 'road.arterial',\n    elementType: 'geometry.fill',\n    stylers: [{\n      color: '#575757'\n    }]\n  }, {\n    featureType: 'road.arterial',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#ffffff'\n    }]\n  }, {\n    featureType: 'road.arterial',\n    elementType: 'labels.text.stroke',\n    stylers: [{\n      color: '#2c2c2c'\n    }]\n  }, {\n    featureType: 'road.local',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 16\n    }]\n  }, {\n    featureType: 'road.local',\n    elementType: 'labels.text.fill',\n    stylers: [{\n      color: '#999999'\n    }]\n  }, {\n    featureType: 'transit',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 19\n    }]\n  }, {\n    featureType: 'water',\n    elementType: 'geometry',\n    stylers: [{\n      color: '#000000'\n    }, {\n      lightness: 17\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mb-3\",\n        children: \"Dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dark\",\n        className: \"gmaps\",\n        style: {\n          position: 'relative',\n          overflow: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          google: google,\n          zoom: 14,\n          initialCenter: {\n            lat: 40.7295174,\n            lng: -73.9986496\n          },\n          style: {\n            width: '100%',\n            height: '100%',\n            position: 'relative'\n          },\n          styles: mapStyles,\n          zoomControlOptions: {\n            position: google.maps.ControlPosition.LEFT_TOP\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = DarkStyledMap;\n\nconst WithPolygons = _ref5 => {\n  let {\n    google\n  } = _ref5;\n  const polygon = [{\n    lat: -12.040397656836609,\n    lng: -77.03373871559225\n  }, {\n    lat: -12.040248585302038,\n    lng: -77.03993927003302\n  }, {\n    lat: -12.050047116528843,\n    lng: -77.02448169303511\n  }, {\n    lat: -12.044804866577001,\n    lng: -77.02154422636042\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mb-3\",\n        children: \"Polygons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"gmaps-polygons\",\n        className: \"gmaps\",\n        style: {\n          position: 'relative',\n          overflow: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          google: google,\n          initialCenter: {\n            lat: -12.043333,\n            lng: -77.028333\n          },\n          style: {\n            width: '100%',\n            height: '100%',\n            position: 'relative'\n          },\n          zoom: 14,\n          zoomControlOptions: {\n            position: google.maps.ControlPosition.LEFT_TOP\n          },\n          children: /*#__PURE__*/_jsxDEV(Polygon, {\n            fillColor: \"#BBD8E9\",\n            fillOpacity: 0.6,\n            paths: polygon,\n            strokeColor: \"#BBD8E9\",\n            strokeOpacity: 1,\n            strokeWeight: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 9\n  }, this);\n};\n\n_c5 = WithPolygons;\n\nconst WithPolyline = _ref6 => {\n  let {\n    google\n  } = _ref6;\n  const polyline = [{\n    lat: -12.040397656836609,\n    lng: -77.03373871559225\n  }, {\n    lat: -12.048138585302038,\n    lng: -77.03593927003302\n  }, {\n    lat: -12.044804866577001,\n    lng: -77.02454422636042\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mb-3\",\n        children: \"Polyline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"gmaps-polygons\",\n        className: \"gmaps\",\n        style: {\n          position: 'relative',\n          overflow: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          google: google,\n          initialCenter: {\n            lat: -12.043333,\n            lng: -77.028333\n          },\n          style: {\n            width: '100%',\n            height: '100%',\n            position: 'relative'\n          },\n          zoom: 14,\n          zoomControlOptions: {\n            position: google.maps.ControlPosition.LEFT_TOP\n          },\n          children: /*#__PURE__*/_jsxDEV(Polyline, {\n            fillColor: \"#BBD8E9\",\n            fillOpacity: 0.6,\n            path: polyline,\n            strokeColor: \"#BBD8E9\",\n            strokeOpacity: 1,\n            strokeWeight: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 9\n  }, this);\n};\n\n_c6 = WithPolyline;\n\nconst StreetViewMap = _ref7 => {\n  _s();\n\n  let {\n    google\n  } = _ref7;\n  let mapRef = useRef();\n  /**\n   * Activate the street view\n   */\n\n  const activateStreetView = position => {\n    if (mapRef) {\n      const mapObj = mapRef.map.getStreetView();\n      mapObj.setPov({\n        heading: 34,\n        pitch: 10\n      });\n      mapObj.setPosition(position);\n      mapObj.setVisible(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mb-3\",\n        children: \"Street View Panoramas Google Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"panorama\",\n        className: \"gmaps\",\n        style: {\n          position: 'relative',\n          overflow: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          google: google,\n          ref: map => mapRef = map,\n          zoom: 14,\n          initialCenter: {\n            lat: 40.7295174,\n            lng: -73.9986496\n          },\n          style: {\n            width: '100%',\n            height: '100%',\n            position: 'relative'\n          },\n          onReady: () => {\n            activateStreetView({\n              lat: 40.7295174,\n              lng: -73.9986496\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StreetViewMap, \"knJOrGRGKtLtwOLEtO4T1MW7LH8=\");\n\n_c7 = StreetViewMap;\n\nconst ClickableMarkers = _ref8 => {\n  _s2();\n\n  let {\n    google\n  } = _ref8;\n  const [activeMarker, setActiveMarker] = useState({});\n  const [selectedPlace, setSelectedPlace] = useState({});\n  const [showingInfoWindow, setShowingInfoWindow] = useState(false);\n\n  const onInfoWindowClose = () => {\n    setActiveMarker(null);\n    setShowingInfoWindow(false);\n  }; // handles operation on marker click\n\n\n  const onBasicMarkerClick = () => {\n    alert('You clicked in this marker');\n  }; // handles operation on marker click\n\n\n  const onMarkerClick = (props, marker, e) => {\n    setActiveMarker(marker);\n    setSelectedPlace(props);\n    setShowingInfoWindow(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mb-3\",\n        children: \"Clickable Markers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gmaps\",\n        style: {\n          position: 'relative',\n          overflow: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          google: google,\n          zoom: 18,\n          initialCenter: {\n            lat: 21.569874,\n            lng: 71.5893798\n          },\n          style: {\n            width: '100%',\n            height: '100%',\n            position: 'relative'\n          },\n          zoomControlOptions: {\n            position: google.maps.ControlPosition.LEFT_TOP\n          },\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            title: 'This is sweet home.',\n            name: 'Home sweet home!',\n            onClick: onBasicMarkerClick,\n            position: {\n              lat: 21.56956,\n              lng: 71.5892598\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            name: \"Current location\",\n            title: 'Marker with InfoWindow',\n            onClick: onMarkerClick,\n            position: {\n              lat: 21.56969,\n              lng: 71.5893798\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InfoWindow, {\n            marker: activeMarker,\n            onClose: onInfoWindowClose,\n            visible: showingInfoWindow,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: selectedPlace.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 435,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(ClickableMarkers, \"Iin4AJ4cD6ZImillkZ3dAA4EqaA=\");\n\n_c8 = ClickableMarkers;\n\nconst GoogleMaps = _ref9 => {\n  let {\n    google\n  } = _ref9;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      breadCrumbItems: [{\n        label: 'Maps',\n        path: '/ui/googlemaps'\n      }, {\n        label: 'Google Maps',\n        path: '/ui/googlemaps',\n        active: true\n      }],\n      title: 'Google Maps'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(BasicMap, {\n          google: google\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(WithMarkers, {\n          google: google\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(LightStyledMap, {\n          google: google\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(DarkStyledMap, {\n          google: google\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(WithPolyline, {\n          google: google\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(WithPolygons, {\n          google: google\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(StreetViewMap, {\n          google: google\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(ClickableMarkers, {\n          google: google\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 477,\n    columnNumber: 9\n  }, this);\n};\n\n_c9 = GoogleMaps;\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDsucrEdmswqYrw0f6ej3bf4M4suDeRgNA'\n})(GoogleMaps);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"BasicMap\");\n$RefreshReg$(_c2, \"WithMarkers\");\n$RefreshReg$(_c3, \"LightStyledMap\");\n$RefreshReg$(_c4, \"DarkStyledMap\");\n$RefreshReg$(_c5, \"WithPolygons\");\n$RefreshReg$(_c6, \"WithPolyline\");\n$RefreshReg$(_c7, \"StreetViewMap\");\n$RefreshReg$(_c8, \"ClickableMarkers\");\n$RefreshReg$(_c9, \"GoogleMaps\");","map":{"version":3,"sources":["C:/proyecto/practica/src/pages/maps/GoogleMaps.tsx"],"names":["React","useRef","useState","Row","Col","Card","Map","Marker","GoogleApiWrapper","InfoWindow","Polygon","Polyline","PageTitle","BasicMap","google","position","lat","lng","width","height","maps","ControlPosition","LEFT_TOP","WithMarkers","overflow","LightStyledMap","mapStyles","featureType","elementType","stylers","color","lightness","weight","visibility","saturation","DarkStyledMap","WithPolygons","polygon","WithPolyline","polyline","StreetViewMap","mapRef","activateStreetView","mapObj","map","getStreetView","setPov","heading","pitch","setPosition","setVisible","ClickableMarkers","activeMarker","setActiveMarker","selectedPlace","setSelectedPlace","showingInfoWindow","setShowingInfoWindow","onInfoWindowClose","onBasicMarkerClick","alert","onMarkerClick","props","marker","e","name","GoogleMaps","label","path","active","apiKey"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { Map, Marker, GoogleApiWrapper, InfoWindow, Polygon, Polyline } from 'google-maps-react';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\ninterface MapContainerProps {\n    google: any;\n}\n\nconst BasicMap = ({ google }: MapContainerProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Basic</h4>\n\n                {/* basic map */}\n                <div id=\"gmaps-basic\" style={{ position: 'relative' }} className=\"gmaps\">\n                    <Map\n                        google={google}\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                        zoom={14}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        zoomControlOptions={{\n                            position: google.maps.ControlPosition.LEFT_TOP,\n                        }}\n                    ></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst WithMarkers = ({ google }: MapContainerProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Markers</h4>\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={google}\n                        zoom={18}\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        zoomControlOptions={{\n                            position: google.maps.ControlPosition.LEFT_TOP,\n                        }}\n                    >\n                        <Marker\n                            name=\"SOMA\"\n                            position={{ lat: 21.56956, lng: 71.5892598 }}\n                            title=\"The marker`s title will appear as a tooltip.\"\n                        />\n\n                        <Marker name=\"Dolores park\" position={{ lat: 21.56969, lng: 71.5893798 }} />\n                    </Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst LightStyledMap = ({ google }: MapContainerProps) => {\n    const mapStyles = [\n        {\n            featureType: 'water',\n            elementType: 'geometry',\n            stylers: [{ color: '#e9e9e9' }, { lightness: 17 }],\n        },\n        {\n            featureType: 'landscape',\n            elementType: 'geometry',\n            stylers: [{ color: '#f5f5f5' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#ffffff' }, { lightness: 17 }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#ffffff' }, { lightness: 29 }, { weight: 0.2 }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'geometry',\n            stylers: [{ color: '#ffffff' }, { lightness: 18 }],\n        },\n        {\n            featureType: 'road.local',\n            elementType: 'geometry',\n            stylers: [{ color: '#ffffff' }, { lightness: 16 }],\n        },\n        {\n            featureType: 'poi',\n            elementType: 'geometry',\n            stylers: [{ color: '#f5f5f5' }, { lightness: 21 }],\n        },\n        {\n            featureType: 'poi.park',\n            elementType: 'geometry',\n            stylers: [{ color: '#dedede' }, { lightness: 21 }],\n        },\n        {\n            elementType: 'labels.text.stroke',\n            stylers: [{ visibility: 'on' }, { color: '#ffffff' }, { lightness: 16 }],\n        },\n        {\n            elementType: 'labels.text.fill',\n            stylers: [{ saturation: 36 }, { color: '#333333' }, { lightness: 40 }],\n        },\n        { elementType: 'labels.icon', stylers: [{ visibility: 'off' }] },\n        {\n            featureType: 'transit',\n            elementType: 'geometry',\n            stylers: [{ color: '#f2f2f2' }, { lightness: 19 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#fefefe' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#fefefe' }, { lightness: 17 }, { weight: 1.2 }],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Ultra Light</h4>\n\n                <div id=\"ultra-light\" className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={google}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        styles={mapStyles}\n                        zoomControlOptions={{\n                            position: google.maps.ControlPosition.LEFT_TOP,\n                        }}\n                    ></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DarkStyledMap = ({ google }: MapContainerProps) => {\n    const mapStyles = [\n        {\n            featureType: 'all',\n            elementType: 'labels',\n            stylers: [{ visibility: 'on' }],\n        },\n        {\n            featureType: 'all',\n            elementType: 'labels.text.fill',\n            stylers: [{ saturation: 36 }, { color: '#000000' }, { lightness: 40 }],\n        },\n        {\n            featureType: 'all',\n            elementType: 'labels.text.stroke',\n            stylers: [{ visibility: 'on' }, { color: '#000000' }, { lightness: 16 }],\n        },\n        {\n            featureType: 'all',\n            elementType: 'labels.icon',\n            stylers: [{ visibility: 'off' }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#000000' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#000000' }, { lightness: 17 }, { weight: 1.2 }],\n        },\n        {\n            featureType: 'administrative.country',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#e5c163' }],\n        },\n        {\n            featureType: 'administrative.locality',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#c4c4c4' }],\n        },\n        {\n            featureType: 'administrative.neighborhood',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#e5c163' }],\n        },\n        {\n            featureType: 'landscape',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'poi',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 21 }, { visibility: 'on' }],\n        },\n        {\n            featureType: 'poi.business',\n            elementType: 'geometry',\n            stylers: [{ visibility: 'on' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#e5c163' }, { lightness: '0' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.stroke',\n            stylers: [{ visibility: 'off' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#ffffff' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'labels.text.stroke',\n            stylers: [{ color: '#e5c163' }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 18 }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#575757' }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#ffffff' }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'labels.text.stroke',\n            stylers: [{ color: '#2c2c2c' }],\n        },\n        {\n            featureType: 'road.local',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 16 }],\n        },\n        {\n            featureType: 'road.local',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#999999' }],\n        },\n        {\n            featureType: 'transit',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 19 }],\n        },\n        {\n            featureType: 'water',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 17 }],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Dark</h4>\n\n                <div id=\"dark\" className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={google}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        styles={mapStyles}\n                        zoomControlOptions={{\n                            position: google.maps.ControlPosition.LEFT_TOP,\n                        }}\n                    ></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst WithPolygons = ({ google }: MapContainerProps) => {\n    const polygon = [\n        { lat: -12.040397656836609, lng: -77.03373871559225 },\n        { lat: -12.040248585302038, lng: -77.03993927003302 },\n        { lat: -12.050047116528843, lng: -77.02448169303511 },\n        { lat: -12.044804866577001, lng: -77.02154422636042 },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Polygons</h4>\n\n                <div id=\"gmaps-polygons\" className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={google}\n                        initialCenter={{ lat: -12.043333, lng: -77.028333 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        zoom={14}\n                        zoomControlOptions={{\n                            position: google.maps.ControlPosition.LEFT_TOP,\n                        }}\n                    >\n                        <Polygon\n                            fillColor=\"#BBD8E9\"\n                            fillOpacity={0.6}\n                            paths={polygon}\n                            strokeColor=\"#BBD8E9\"\n                            strokeOpacity={1}\n                            strokeWeight={3}\n                        />\n                    </Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst WithPolyline = ({ google }: MapContainerProps) => {\n    const polyline = [\n        { lat: -12.040397656836609, lng: -77.03373871559225 },\n        { lat: -12.048138585302038, lng: -77.03593927003302 },\n        { lat: -12.044804866577001, lng: -77.02454422636042 },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Polyline</h4>\n\n                <div id=\"gmaps-polygons\" className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={google}\n                        initialCenter={{ lat: -12.043333, lng: -77.028333 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        zoom={14}\n                        zoomControlOptions={{\n                            position: google.maps.ControlPosition.LEFT_TOP,\n                        }}\n                    >\n                        <Polyline\n                            fillColor=\"#BBD8E9\"\n                            fillOpacity={0.6}\n                            path={polyline}\n                            strokeColor=\"#BBD8E9\"\n                            strokeOpacity={1}\n                            strokeWeight={3}\n                        />\n                    </Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst StreetViewMap = ({ google }: MapContainerProps) => {\n    let mapRef: any = useRef();\n\n    /**\n     * Activate the street view\n     */\n    const activateStreetView = (position: { lat: number; lng: number }) => {\n        if (mapRef) {\n            const mapObj = mapRef.map.getStreetView();\n            mapObj.setPov({ heading: 34, pitch: 10 });\n            mapObj.setPosition(position);\n            mapObj.setVisible(true);\n        }\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Street View Panoramas Google Map</h4>\n\n                <div id=\"panorama\" className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={google}\n                        ref={(map: any) => (mapRef = map)}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        onReady={() => {\n                            activateStreetView({ lat: 40.7295174, lng: -73.9986496 });\n                        }}\n                    ></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst ClickableMarkers = ({ google }: MapContainerProps) => {\n    const [activeMarker, setActiveMarker] = useState<any>({});\n    const [selectedPlace, setSelectedPlace] = useState<any>({});\n    const [showingInfoWindow, setShowingInfoWindow] = useState<boolean>(false);\n\n    const onInfoWindowClose = () => {\n        setActiveMarker(null);\n        setShowingInfoWindow(false);\n    };\n\n    // handles operation on marker click\n    const onBasicMarkerClick = () => {\n        alert('You clicked in this marker');\n    };\n\n    // handles operation on marker click\n    const onMarkerClick = (props: any, marker: any, e: any) => {\n        setActiveMarker(marker);\n        setSelectedPlace(props);\n        setShowingInfoWindow(true);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Clickable Markers</h4>\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={google}\n                        zoom={18}\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        zoomControlOptions={{\n                            position: google.maps.ControlPosition.LEFT_TOP,\n                        }}\n                    >\n                        {/* basic marker */}\n                        <Marker\n                            title={'This is sweet home.'}\n                            name={'Home sweet home!'}\n                            onClick={onBasicMarkerClick}\n                            position={{ lat: 21.56956, lng: 71.5892598 }}\n                        />\n\n                        {/* clickable marker */}\n                        <Marker\n                            name=\"Current location\"\n                            title={'Marker with InfoWindow'}\n                            onClick={onMarkerClick}\n                            position={{ lat: 21.56969, lng: 71.5893798 }}\n                        />\n                        <InfoWindow marker={activeMarker} onClose={onInfoWindowClose} visible={showingInfoWindow}>\n                            <div>\n                                <p>{selectedPlace.name}</p>\n                            </div>\n                        </InfoWindow>\n                    </Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst GoogleMaps = ({ google }: MapContainerProps) => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Maps', path: '/ui/googlemaps' },\n                    { label: 'Google Maps', path: '/ui/googlemaps', active: true },\n                ]}\n                title={'Google Maps'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <BasicMap google={google} />\n                </Col>\n\n                <Col lg={6}>\n                    <WithMarkers google={google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <LightStyledMap google={google} />\n                </Col>\n                <Col lg={6}>\n                    <DarkStyledMap google={google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <WithPolyline google={google} />\n                </Col>\n                <Col lg={6}>\n                    <WithPolygons google={google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <StreetViewMap google={google} />\n                </Col>\n                <Col lg={6}>\n                    <ClickableMarkers google={google} />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyDsucrEdmswqYrw0f6ej3bf4M4suDeRgNA',\n})(GoogleMaps);\n"]},"metadata":{},"sourceType":"module"}