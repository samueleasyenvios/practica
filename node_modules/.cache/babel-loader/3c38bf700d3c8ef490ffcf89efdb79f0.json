{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\pages\\\\icons\\\\RemixIcons\\\\index.tsx\";\nimport React from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames'; // component\n\nimport PageTitle from '../../../components/PageTitle'; // icon data\n\nimport { REMIX_ICONS_LIST } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RemixIcons = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      breadCrumbItems: [{\n        label: 'Icons',\n        path: '/ui/icons/remix'\n      }, {\n        label: 'Remix Icons',\n        path: '/ui/icons/remix',\n        active: true\n      }],\n      title: 'Remix Icons'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        children: (REMIX_ICONS_LIST || []).map((category, index) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: Object.keys(category)[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 37\n              }, this), Object.keys(category).includes('Editor') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-title-desc mb-2\",\n                  children: [\"Use \", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: \"<i className=\\\"ri-bold\\\"></i>\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"badge bg-success\",\n                    children: \"v 2.4.1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 33,\n                    columnNumber: 49\n                  }, this), \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"icons-list-demo\",\n                  children: (Object.keys(category[Object.keys(category)[0]]) || []).map((icon, index) => {\n                    return /*#__PURE__*/_jsxDEV(Col, {\n                      sm: 6,\n                      lg: 4,\n                      xl: 3,\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: classNames('ri-' + icon)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 40,\n                        columnNumber: 65\n                      }, this), \" ri-\", icon]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 39,\n                      columnNumber: 61\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-title-desc mb-2\",\n                  children: [\"Use \", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: \"<i className=\\\"ri-home-line\\\"></i>\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 53\n                  }, this), \" or\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: \"<i className=\\\"ri-home-fill\\\"></i>\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 49\n                  }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"badge bg-success\",\n                    children: \"v 2.4.1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 49\n                  }, this), \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"icons-list-demo\",\n                  children: (Object.keys(category[Object.keys(category)[0]]) || []).map((icon, index) => {\n                    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        sm: 6,\n                        lg: 4,\n                        xl: 3,\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: classNames('ri-' + icon + '-line')\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 61,\n                          columnNumber: 69\n                        }, this), ' ', \"ri-\", icon, \"-line\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 60,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        sm: 6,\n                        lg: 4,\n                        xl: 3,\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: classNames('ri-' + icon + '-fill')\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 67,\n                          columnNumber: 69\n                        }, this), ' ', \"ri-\", icon, \"-fill\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 66,\n                        columnNumber: 65\n                      }, this)]\n                    }, icon + index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 61\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = RemixIcons;\nexport default RemixIcons;\n\nvar _c;\n\n$RefreshReg$(_c, \"RemixIcons\");","map":{"version":3,"sources":["C:/proyecto/practica/src/pages/icons/RemixIcons/index.tsx"],"names":["React","Card","Col","Row","classNames","PageTitle","REMIX_ICONS_LIST","RemixIcons","label","path","active","map","category","index","Object","keys","includes","icon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// component\nimport PageTitle from '../../../components/PageTitle';\n\n// icon data\nimport { REMIX_ICONS_LIST } from './data';\n\nconst RemixIcons = () => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Icons', path: '/ui/icons/remix' },\n                    { label: 'Remix Icons', path: '/ui/icons/remix', active: true },\n                ]}\n                title={'Remix Icons'}\n            />\n\n            <Row>\n                <Col xs={12}>\n                    {(REMIX_ICONS_LIST || []).map((category, index) => {\n                        return (\n                            <Card key={index}>\n                                <Card.Body>\n                                    <h4 className=\"card-title\">{Object.keys(category)[0]}</h4>\n                                    {Object.keys(category).includes('Editor') ? (\n                                        <>\n                                            <p className=\"card-title-desc mb-2\">\n                                                Use <code>&lt;i className=\"ri-bold\"&gt;&lt;/i&gt;</code>\n                                                <span className=\"badge bg-success\">v 2.4.1</span>.\n                                            </p>\n                                            <Row className=\"icons-list-demo\">\n                                                {(Object.keys(category[Object.keys(category)[0]]) || []).map(\n                                                    (icon, index) => {\n                                                        return (\n                                                            <Col key={index} sm={6} lg={4} xl={3}>\n                                                                <i className={classNames('ri-' + icon)}></i> ri-\n                                                                {icon}\n                                                            </Col>\n                                                        );\n                                                    }\n                                                )}\n                                            </Row>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <p className=\"card-title-desc mb-2\">\n                                                Use <code>&lt;i className=\"ri-home-line\"&gt;&lt;/i&gt;</code> or{' '}\n                                                <code>&lt;i className=\"ri-home-fill\"&gt;&lt;/i&gt;</code>{' '}\n                                                <span className=\"badge bg-success\">v 2.4.1</span>.\n                                            </p>\n                                            <Row className=\"icons-list-demo\">\n                                                {(Object.keys(category[Object.keys(category)[0]]) || []).map(\n                                                    (icon, index) => {\n                                                        return (\n                                                            <React.Fragment key={icon + index}>\n                                                                <Col sm={6} lg={4} xl={3}>\n                                                                    <i\n                                                                        className={classNames('ri-' + icon + '-line')}\n                                                                    ></i>{' '}\n                                                                    ri-{icon}-line\n                                                                </Col>\n                                                                <Col sm={6} lg={4} xl={3}>\n                                                                    <i\n                                                                        className={classNames('ri-' + icon + '-fill')}\n                                                                    ></i>{' '}\n                                                                    ri-{icon}-fill\n                                                                </Col>\n                                                            </React.Fragment>\n                                                        );\n                                                    }\n                                                )}\n                                            </Row>\n                                        </>\n                                    )}\n                                </Card.Body>\n                            </Card>\n                        );\n                    })}\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default RemixIcons;\n"]},"metadata":{},"sourceType":"module"}