{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SimpleMdeReact = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _easymde = _interopRequireDefault(require(\"easymde\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar _id = 0;\n\nvar generateId = function generateId() {\n  return \"simplemde-editor-\".concat(++_id);\n};\n\nvar useHandleEditorInstanceLifecycle = function useHandleEditorInstanceLifecycle(_ref) {\n  var options = _ref.options,\n      id = _ref.id,\n      currentValueRef = _ref.currentValueRef,\n      textRef = _ref.textRef;\n\n  var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      editor = _useState2[0],\n      setEditor = _useState2[1];\n\n  var imageUploadCallback = (0, _react.useCallback)(function (file, onSuccess, onError) {\n    var imageUpload = options === null || options === void 0 ? void 0 : options.imageUploadFunction;\n\n    if (imageUpload) {\n      var _onSuccess = function _onSuccess(url) {\n        onSuccess(url);\n      };\n\n      imageUpload(file, _onSuccess, onError);\n    }\n  }, [options === null || options === void 0 ? void 0 : options.imageUploadFunction]);\n  var editorRef = (0, _react.useRef)(editor);\n  editorRef.current = editor;\n  (0, _react.useEffect)(function () {\n    var editor;\n\n    if (textRef) {\n      var initialOptions = {\n        element: textRef,\n        initialValue: currentValueRef.current\n      };\n      var imageUploadFunction = (options === null || options === void 0 ? void 0 : options.imageUploadFunction) ? imageUploadCallback : undefined;\n      editor = new _easymde.default(Object.assign({}, initialOptions, options, {\n        imageUploadFunction: imageUploadFunction\n      }));\n      setEditor(editor);\n    }\n\n    return function () {\n      var _editor, _editor2;\n\n      (_editor = editor) === null || _editor === void 0 ? void 0 : _editor.toTextArea(); // @ts-expect-error\n\n      (_editor2 = editor) === null || _editor2 === void 0 ? void 0 : _editor2.cleanup();\n    };\n  }, [textRef, currentValueRef, id, imageUploadCallback, options]);\n  var codemirror = (0, _react.useMemo)(function () {\n    return editor === null || editor === void 0 ? void 0 : editor.codemirror;\n  }, [editor === null || editor === void 0 ? void 0 : editor.codemirror]);\n  return {\n    editor: editor,\n    codemirror: codemirror\n  };\n};\n\nvar SimpleMdeReact = /*#__PURE__*/_react.default.forwardRef(function (props, _ref8) {\n  var events = props.events,\n      value = props.value,\n      options = props.options,\n      children = props.children,\n      extraKeys = props.extraKeys,\n      getLineAndCursor = props.getLineAndCursor,\n      getMdeInstance = props.getMdeInstance,\n      getCodemirrorInstance = props.getCodemirrorInstance,\n      onChange = props.onChange,\n      anId = props.id,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"events\", \"value\", \"options\", \"children\", \"extraKeys\", \"getLineAndCursor\", \"getMdeInstance\", \"getCodemirrorInstance\", \"onChange\", \"id\"]);\n  var id = (0, _react.useMemo)(function () {\n    return anId !== null && anId !== void 0 ? anId : generateId();\n  }, [anId]);\n  var elementWrapperRef = (0, _react.useRef)(null);\n  var nonEventChangeRef = (0, _react.useRef)(true); // This is to not pass value as a dependency e.g. to keep event handlers referentially\n  // stable and do not `off` and `on` on each value change\n  // plus to avoid unnecessary EasyEde editor recreation on each value change while still, if it has to be remounted\n  // due to options and other deps change, to preserve that last value and not the default one from the first render.\n\n  var currentValueRef = (0, _react.useRef)(value);\n  currentValueRef.current = value;\n\n  var _useState3 = (0, _react.useState)(null),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      textRef = _useState4[0],\n      setTextRef = _useState4[1];\n\n  var _useHandleEditorInsta = useHandleEditorInstanceLifecycle({\n    options: options,\n    id: id,\n    currentValueRef: currentValueRef,\n    textRef: textRef\n  }),\n      editor = _useHandleEditorInsta.editor,\n      codemirror = _useHandleEditorInsta.codemirror;\n\n  (0, _react.useEffect)(function () {\n    // If change comes from the event we don't need to update `SimpleMDE` value as it already has it\n    // Otherwise we shall set it as it comes from `props` set from the outside. E.g. by some reset button and whatnot\n    if (nonEventChangeRef.current) {\n      editor === null || editor === void 0 ? void 0 : editor.value(value !== null && value !== void 0 ? value : \"\");\n    }\n\n    nonEventChangeRef.current = true;\n  }, [editor, value]);\n  var onCodemirrorChangeHandler = (0, _react.useCallback)(function () {\n    if ((editor === null || editor === void 0 ? void 0 : editor.value()) !== currentValueRef.current) {\n      var _editor$value;\n\n      nonEventChangeRef.current = false;\n      onChange === null || onChange === void 0 ? void 0 : onChange((_editor$value = editor === null || editor === void 0 ? void 0 : editor.value()) !== null && _editor$value !== void 0 ? _editor$value : \"\");\n    }\n  }, [editor, onChange]);\n  (0, _react.useEffect)(function () {\n    // For some reason it doesn't work out of the box, this makes sure it's working correctly\n    if (options === null || options === void 0 ? void 0 : options.autofocus) {\n      codemirror === null || codemirror === void 0 ? void 0 : codemirror.focus();\n      codemirror === null || codemirror === void 0 ? void 0 : codemirror.setCursor(codemirror === null || codemirror === void 0 ? void 0 : codemirror.lineCount(), 0);\n    }\n  }, [codemirror, options === null || options === void 0 ? void 0 : options.autofocus]);\n  var getCursorCallback = (0, _react.useCallback)(function () {\n    // https://codemirror.net/doc/manual.html#api_selection\n    codemirror && (getLineAndCursor === null || getLineAndCursor === void 0 ? void 0 : getLineAndCursor(codemirror.getDoc().getCursor()));\n  }, [codemirror, getLineAndCursor]);\n  (0, _react.useEffect)(function () {\n    getCursorCallback();\n  }, [getCursorCallback]);\n  (0, _react.useEffect)(function () {\n    editor && (getMdeInstance === null || getMdeInstance === void 0 ? void 0 : getMdeInstance(editor));\n  }, [editor, getMdeInstance]);\n  (0, _react.useEffect)(function () {\n    codemirror && (getCodemirrorInstance === null || getCodemirrorInstance === void 0 ? void 0 : getCodemirrorInstance(codemirror));\n  }, [codemirror, getCodemirrorInstance, getMdeInstance]);\n  (0, _react.useEffect)(function () {\n    // https://codemirror.net/doc/manual.html#option_extraKeys\n    if (extraKeys && codemirror) {\n      codemirror.setOption(\"extraKeys\", Object.assign({}, extraKeys, codemirror.getOption(\"extraKeys\")));\n    }\n  }, [codemirror, extraKeys]);\n  (0, _react.useEffect)(function () {\n    var _elementWrapperRef$cu;\n\n    var toolbarNode = (_elementWrapperRef$cu = elementWrapperRef.current) === null || _elementWrapperRef$cu === void 0 ? void 0 : _elementWrapperRef$cu.getElementsByClassName(\"editor-toolbarNode\")[0];\n\n    var handler = function handler() {\n      return codemirror && onCodemirrorChangeHandler();\n    };\n\n    toolbarNode === null || toolbarNode === void 0 ? void 0 : toolbarNode.addEventListener(\"click\", handler);\n    return function () {\n      toolbarNode === null || toolbarNode === void 0 ? void 0 : toolbarNode.removeEventListener(\"click\", handler);\n    };\n  }, [codemirror, onCodemirrorChangeHandler]);\n  (0, _react.useEffect)(function () {\n    codemirror === null || codemirror === void 0 ? void 0 : codemirror.on(\"change\", onCodemirrorChangeHandler);\n    codemirror === null || codemirror === void 0 ? void 0 : codemirror.on(\"cursorActivity\", getCursorCallback);\n    return function () {\n      codemirror === null || codemirror === void 0 ? void 0 : codemirror.off(\"change\", onCodemirrorChangeHandler);\n      codemirror === null || codemirror === void 0 ? void 0 : codemirror.off(\"cursorActivity\", getCursorCallback);\n    };\n  }, [codemirror, getCursorCallback, onCodemirrorChangeHandler]);\n  var prevEvents = (0, _react.useRef)(events);\n  (0, _react.useEffect)(function () {\n    var isNotFirstEffectRun = events !== prevEvents.current;\n    isNotFirstEffectRun && prevEvents.current && Object.entries(prevEvents.current).forEach(function (_ref2) {\n      var _ref3 = (0, _slicedToArray2.default)(_ref2, 2),\n          event = _ref3[0],\n          handler = _ref3[1];\n\n      handler && (codemirror === null || codemirror === void 0 ? void 0 : codemirror.off(event, handler));\n    });\n    events && Object.entries(events).forEach(function (_ref4) {\n      var _ref5 = (0, _slicedToArray2.default)(_ref4, 2),\n          event = _ref5[0],\n          handler = _ref5[1];\n\n      handler && (codemirror === null || codemirror === void 0 ? void 0 : codemirror.on(event, handler));\n    });\n    prevEvents.current = events;\n    return function () {\n      events && Object.entries(events).forEach(function (_ref6) {\n        var _ref7 = (0, _slicedToArray2.default)(_ref6, 2),\n            event = _ref7[0],\n            handler = _ref7[1];\n\n        handler && (codemirror === null || codemirror === void 0 ? void 0 : codemirror.off(event, handler));\n      });\n    };\n  }, [codemirror, events]);\n  return /*#__PURE__*/_react.default.createElement(\"div\", Object.assign({\n    id: \"\".concat(id, \"-wrapper\")\n  }, rest, {\n    ref: function ref(aRef) {\n      if (typeof _ref8 === \"function\") {\n        _ref8(aRef);\n      } else if (_ref8) {\n        _ref8.current = aRef;\n      }\n\n      elementWrapperRef.current = aRef;\n    }\n  }), /*#__PURE__*/_react.default.createElement(\"textarea\", {\n    id: id,\n    ref: setTextRef,\n    style: {\n      display: \"none\"\n    }\n  }));\n});\n\nexports.SimpleMdeReact = SimpleMdeReact;\nSimpleMdeReact.displayName = \"SimpleMdeReact\";\nvar _default = SimpleMdeReact;\nexports.default = _default;","map":{"version":3,"sources":["../src/SimpleMdeReact.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport SimpleMDE, { Options } from \"easymde\";\n\nimport type {\n  Doc,\n  Editor,\n  EditorChange,\n  EditorChangeCancellable,\n  EditorChangeLinkedList,\n  EditorSelectionChange,\n  KeyMap,\n  LineHandle,\n  Position,\n} from \"codemirror\";\n\nlet _id = 0;\n\nconst generateId = () => `simplemde-editor-${++_id}`;\n\nexport type DOMEvent =\n  | \"mousedown\"\n  | \"dblclick\"\n  | \"touchstart\"\n  | \"contextmenu\"\n  | \"keydown\"\n  | \"keypress\"\n  | \"keyup\"\n  | \"cut\"\n  | \"copy\"\n  | \"paste\"\n  | \"dragstart\"\n  | \"dragenter\"\n  | \"dragover\"\n  | \"dragleave\"\n  | \"drop\";\n\nexport type CopyEvents = {\n  [TKey in string &\n    DOMEvent &\n    keyof DocumentAndElementEventHandlersEventMap as `${TKey}`]?: (\n    instance: Editor,\n    event: DocumentAndElementEventHandlersEventMap[TKey]\n  ) => void;\n};\n\nexport type GlobalEvents = {\n  [TKey in string &\n    DOMEvent &\n    keyof GlobalEventHandlersEventMap as `${TKey}`]?: (\n    instance: Editor,\n    event: GlobalEventHandlersEventMap[TKey]\n  ) => void;\n};\n\nexport type DefaultEvent = (instance: Editor, ...args: any[]) => void;\n\nexport type IndexEventsSignature = {\n  [key: string]: DefaultEvent | undefined;\n};\n\nexport interface SimpleMdeToCodemirrorEvents\n  extends CopyEvents,\n    GlobalEvents,\n    IndexEventsSignature {\n  change?: (instance: Editor, changeObj: EditorChangeLinkedList) => void;\n  changes?: (instance: Editor, changes: EditorChangeLinkedList[]) => void;\n  beforeChange?: (instance: Editor, changeObj: EditorChangeCancellable) => void;\n  cursorActivity?: (instance: Editor) => void;\n  keyHandled?: (instance: Editor, name: string, event: KeyboardEvent) => void;\n  inputRead?: (instance: Editor, changeObj: EditorChange) => void;\n  electricInput?: (instance: Editor, line: number) => void;\n  beforeSelectionChange?: (\n    instance: Editor,\n    obj: EditorSelectionChange\n  ) => void;\n  viewportChange?: (instance: Editor, from: number, to: number) => void;\n  swapDoc?: (instance: Editor, oldDoc: Doc) => void;\n  gutterClick?: (\n    instance: Editor,\n    line: number,\n    gutter: string,\n    clickEvent: MouseEvent\n  ) => void;\n  gutterContextMenu?: (\n    instance: Editor,\n    line: number,\n    gutter: string,\n    contextMenu: MouseEvent\n  ) => void;\n  focus?: (instance: Editor, event: FocusEvent) => void;\n  blur?: (instance: Editor, event: FocusEvent) => void;\n  scroll?: (instance: Editor) => void;\n  refresh?: (instance: Editor) => void;\n  optionChange?: (instance: Editor, option: string) => void;\n  scrollCursorIntoView?: (instance: Editor, event: Event) => void;\n  update?: (instance: Editor) => void;\n  renderLine?: (\n    instance: Editor,\n    line: LineHandle,\n    element: HTMLElement\n  ) => void;\n  overwriteToggle?: (instance: Editor, overwrite: boolean) => void;\n}\n\nexport type GetMdeInstance = (instance: SimpleMDE) => void;\nexport type GetCodemirrorInstance = (instance: Editor) => void;\nexport type GetLineAndCursor = (instance: Position) => void;\n\nexport interface SimpleMDEReactProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\"> {\n  id?: string;\n  onChange?: (value: string) => void;\n  value?: string;\n  extraKeys?: KeyMap;\n  options?: SimpleMDE.Options;\n  events?: SimpleMdeToCodemirrorEvents;\n  getMdeInstance?: GetMdeInstance;\n  getCodemirrorInstance?: GetCodemirrorInstance;\n  getLineAndCursor?: GetLineAndCursor;\n}\n\nconst useHandleEditorInstanceLifecycle = ({\n  options,\n  id,\n  currentValueRef,\n  textRef,\n}: {\n  options?: Options;\n  id: string;\n  currentValueRef: React.MutableRefObject<string | undefined>;\n  textRef: HTMLTextAreaElement | null;\n}) => {\n  const [editor, setEditor] = useState<SimpleMDE | null>(null);\n\n  const imageUploadCallback = useCallback(\n    (\n      file: File,\n      onSuccess: (url: string) => void,\n      onError: (error: string) => void\n    ) => {\n      const imageUpload = options?.imageUploadFunction;\n      if (imageUpload) {\n        const _onSuccess = (url: string) => {\n          onSuccess(url);\n        };\n        imageUpload(file, _onSuccess, onError);\n      }\n    },\n    [options?.imageUploadFunction]\n  );\n\n  const editorRef = useRef(editor);\n  editorRef.current = editor;\n\n  useEffect(() => {\n    let editor: SimpleMDE\n    if (textRef) {\n      const initialOptions = {\n        element: textRef,\n        initialValue: currentValueRef.current,\n      }\n      const imageUploadFunction = options?.imageUploadFunction\n        ? imageUploadCallback\n        : undefined\n      editor = new SimpleMDE(\n        Object.assign({}, initialOptions, options, {\n          imageUploadFunction,\n        })\n      )\n      setEditor(editor)\n    }\n    return () => {\n      editor?.toTextArea()\n      // @ts-expect-error\n      editor?.cleanup()\n    }\n  }, [textRef, currentValueRef, id, imageUploadCallback, options]);\n\n  const codemirror = useMemo(() => {\n    return editor?.codemirror;\n  }, [editor?.codemirror]) as Editor | undefined;\n  return { editor, codemirror };\n};\n\nexport const SimpleMdeReact = React.forwardRef<\n  HTMLDivElement,\n  SimpleMDEReactProps\n>((props, ref) => {\n  const {\n    events,\n    value,\n    options,\n    children,\n    extraKeys,\n    getLineAndCursor,\n    getMdeInstance,\n    getCodemirrorInstance,\n    onChange,\n    id: anId,\n    ...rest\n  } = props;\n\n  const id = useMemo(() => anId ?? generateId(), [anId]);\n\n  const elementWrapperRef = useRef<HTMLDivElement | null>(null);\n  const nonEventChangeRef = useRef<boolean>(true);\n\n  // This is to not pass value as a dependency e.g. to keep event handlers referentially\n  // stable and do not `off` and `on` on each value change\n  // plus to avoid unnecessary EasyEde editor recreation on each value change while still, if it has to be remounted\n  // due to options and other deps change, to preserve that last value and not the default one from the first render.\n  const currentValueRef = useRef(value);\n  currentValueRef.current = value;\n\n  const [textRef, setTextRef] = useState<HTMLTextAreaElement | null>(null)\n  const { editor, codemirror } = useHandleEditorInstanceLifecycle({\n    options,\n    id,\n    currentValueRef,\n    textRef,\n  });\n\n  useEffect(() => {\n    // If change comes from the event we don't need to update `SimpleMDE` value as it already has it\n    // Otherwise we shall set it as it comes from `props` set from the outside. E.g. by some reset button and whatnot\n    if (nonEventChangeRef.current) {\n      editor?.value(value ?? \"\");\n    }\n    nonEventChangeRef.current = true;\n  }, [editor, value]);\n\n  const onCodemirrorChangeHandler = useCallback(() => {\n    if (editor?.value() !== currentValueRef.current) {\n      nonEventChangeRef.current = false;\n      onChange?.(editor?.value() ?? \"\");\n    }\n  }, [editor, onChange]);\n\n  useEffect(() => {\n    // For some reason it doesn't work out of the box, this makes sure it's working correctly\n    if (options?.autofocus) {\n      codemirror?.focus();\n      codemirror?.setCursor(codemirror?.lineCount(), 0);\n    }\n  }, [codemirror, options?.autofocus]);\n\n  const getCursorCallback = useCallback(() => {\n    // https://codemirror.net/doc/manual.html#api_selection\n    codemirror && getLineAndCursor?.(codemirror.getDoc().getCursor());\n  }, [codemirror, getLineAndCursor]);\n\n  useEffect(() => {\n    getCursorCallback();\n  }, [getCursorCallback]);\n\n  useEffect(() => {\n    editor && getMdeInstance?.(editor);\n  }, [editor, getMdeInstance]);\n\n  useEffect(() => {\n    codemirror && getCodemirrorInstance?.(codemirror);\n  }, [codemirror, getCodemirrorInstance, getMdeInstance]);\n\n  useEffect(() => {\n    // https://codemirror.net/doc/manual.html#option_extraKeys\n    if (extraKeys && codemirror) {\n      codemirror.setOption(\n        \"extraKeys\",\n        Object.assign({}, extraKeys, codemirror.getOption(\"extraKeys\"))\n      );\n    }\n  }, [codemirror, extraKeys]);\n\n  useEffect(() => {\n    const toolbarNode = elementWrapperRef.current?.getElementsByClassName(\n      \"editor-toolbarNode\"\n    )[0];\n    const handler = () => codemirror && onCodemirrorChangeHandler();\n    toolbarNode?.addEventListener(\"click\", handler);\n\n    return () => {\n      toolbarNode?.removeEventListener(\"click\", handler);\n    };\n  }, [codemirror, onCodemirrorChangeHandler]);\n\n  useEffect(() => {\n    codemirror?.on(\"change\", onCodemirrorChangeHandler);\n    codemirror?.on(\"cursorActivity\", getCursorCallback);\n    return () => {\n      codemirror?.off(\"change\", onCodemirrorChangeHandler);\n      codemirror?.off(\"cursorActivity\", getCursorCallback);\n    };\n  }, [codemirror, getCursorCallback, onCodemirrorChangeHandler]);\n\n  const prevEvents = useRef(events);\n\n  useEffect(() => {\n    const isNotFirstEffectRun = events !== prevEvents.current;\n    isNotFirstEffectRun &&\n      prevEvents.current &&\n      Object.entries(prevEvents.current).forEach(([event, handler]) => {\n        handler && codemirror?.off(event, handler);\n      });\n\n    events &&\n      Object.entries(events).forEach(([event, handler]) => {\n        handler && codemirror?.on(event, handler);\n      });\n    prevEvents.current = events;\n    return () => {\n      events &&\n        Object.entries(events).forEach(([event, handler]) => {\n          handler && codemirror?.off(event, handler);\n        });\n    };\n  }, [codemirror, events]);\n\n  return (\n    <div\n      id={`${id}-wrapper`}\n      {...rest}\n      ref={(aRef) => {\n        if (typeof ref === \"function\") {\n          ref(aRef);\n        } else if (ref) {\n          ref.current = aRef;\n        }\n        elementWrapperRef.current = aRef;\n      }}\n    >\n      <textarea id={id} ref={setTextRef} style={{ display: \"none\" }} />\n    </div>\n  );\n});\n\nSimpleMdeReact.displayName = \"SimpleMdeReact\";\n\nexport default SimpleMdeReact;\n"]},"metadata":{},"sourceType":"script"}