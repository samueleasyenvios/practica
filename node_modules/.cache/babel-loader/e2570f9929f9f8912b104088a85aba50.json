{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\components\\\\topbar\\\\AppsDropdown\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\nimport classNames from 'classnames'; // utils\n\nimport { splitArray } from '../../../utils/'; // apps icon\n\nimport slackIcon from './icons/slack.png';\nimport bitbucketIcon from './icons/bitbucket.png';\nimport dribbbleIcon from './icons/dribbble.png';\nimport dropboxIcon from './icons/dropbox.png';\nimport githubIcon from './icons/github.png';\nimport gSuiteIcon from './icons/g-suite.png'; // get the apps\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Apps = [{\n  name: 'GitHub',\n  icon: githubIcon,\n  redirectTo: '#'\n}, {\n  name: 'Dribbble',\n  icon: dribbbleIcon,\n  redirectTo: '#'\n}, {\n  name: 'Slack',\n  icon: slackIcon,\n  redirectTo: '#'\n}, {\n  name: 'G Suite',\n  icon: gSuiteIcon,\n  redirectTo: '#'\n}, {\n  name: 'Bitbucket',\n  icon: bitbucketIcon,\n  redirectTo: '#'\n}, {\n  name: 'Dropbox',\n  icon: dropboxIcon,\n  redirectTo: '#'\n}];\n\nconst AppsDropdown = () => {\n  _s();\n\n  const apps = Apps || [];\n  const chunk_size = 3;\n  const appsChunks = splitArray(apps, chunk_size);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  /*\n   * toggle apps-dropdown\n   */\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    show: dropdownOpen,\n    onToggle: toggleDropdown,\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      id: \"dropdown-apps\",\n      as: \"a\",\n      onClick: toggleDropdown,\n      className: classNames('nav-link', 'waves-effect', 'waves-light', {\n        show: dropdownOpen\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fe-grid noti-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      className: \"dropdown-lg dropdown-menu-end p-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2\",\n        onClick: toggleDropdown,\n        children: (appsChunks || []).map((chunk, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row g-0\",\n          children: (chunk || []).map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"dropdown-icon-item\",\n              to: item.redirectTo,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.icon,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this))\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppsDropdown, \"z5Nkh6K+y+CV4vT0AOyJ2ID9tJg=\");\n\n_c = AppsDropdown;\nexport default AppsDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppsDropdown\");","map":{"version":3,"sources":["C:/proyecto/practica/src/components/topbar/AppsDropdown/index.tsx"],"names":["React","useState","Link","Dropdown","classNames","splitArray","slackIcon","bitbucketIcon","dribbbleIcon","dropboxIcon","githubIcon","gSuiteIcon","Apps","name","icon","redirectTo","AppsDropdown","apps","chunk_size","appsChunks","dropdownOpen","setDropdownOpen","toggleDropdown","show","map","chunk","idx","item","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// utils\nimport { splitArray } from '../../../utils/';\n\n// apps icon\nimport slackIcon from './icons/slack.png';\nimport bitbucketIcon from './icons/bitbucket.png';\nimport dribbbleIcon from './icons/dribbble.png';\nimport dropboxIcon from './icons/dropbox.png';\nimport githubIcon from './icons/github.png';\nimport gSuiteIcon from './icons/g-suite.png';\n\n// get the apps\nconst Apps = [\n    {\n        name: 'GitHub',\n        icon: githubIcon,\n        redirectTo: '#',\n    },\n    {\n        name: 'Dribbble',\n        icon: dribbbleIcon,\n        redirectTo: '#',\n    },\n    {\n        name: 'Slack',\n        icon: slackIcon,\n        redirectTo: '#',\n    },\n    {\n        name: 'G Suite',\n        icon: gSuiteIcon,\n        redirectTo: '#',\n    },\n    {\n        name: 'Bitbucket',\n        icon: bitbucketIcon,\n        redirectTo: '#',\n    },\n    {\n        name: 'Dropbox',\n        icon: dropboxIcon,\n        redirectTo: '#',\n    },\n];\n\nconst AppsDropdown = () => {\n    const apps = Apps || [];\n    const chunk_size = 3;\n    const appsChunks = splitArray(apps, chunk_size);\n\n    const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n    /*\n     * toggle apps-dropdown\n     */\n    const toggleDropdown = () => {\n        setDropdownOpen(!dropdownOpen);\n    };\n\n    return (\n        <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n            <Dropdown.Toggle\n                id=\"dropdown-apps\"\n                as=\"a\"\n                onClick={toggleDropdown}\n                className={classNames('nav-link', 'waves-effect', 'waves-light', {\n                    show: dropdownOpen,\n                })}\n            >\n                <i className=\"fe-grid noti-icon\"></i>\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu className=\"dropdown-lg dropdown-menu-end p-0\">\n                <div className=\"p-2\" onClick={toggleDropdown}>\n                    {(appsChunks || []).map((chunk, idx) => (\n                        <div className=\"row g-0\" key={idx}>\n                            {(chunk || []).map((item, i) => (\n                                <div className=\"col\" key={i}>\n                                    <Link className=\"dropdown-icon-item\" to={item.redirectTo}>\n                                        <img src={item.icon} alt=\"\" />\n                                        <span>{item.name}</span>\n                                    </Link>\n                                </div>\n                            ))}\n                        </div>\n                    ))}\n                </div>\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default AppsDropdown;\n"]},"metadata":{},"sourceType":"module"}