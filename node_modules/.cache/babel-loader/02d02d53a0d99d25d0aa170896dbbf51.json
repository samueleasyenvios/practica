{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"labelKey\", \"newSelectionPrefix\", \"options\", \"paginationText\", \"renderMenuItemChildren\", \"text\"];\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Highlighter from './Highlighter';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport { getOptionLabel, getOptionProperty } from '../utils';\nvar propTypes = {\n  /**\n   * Provides the ability to specify a prefix before the user-entered text to\n   * indicate that the selection will be new. No-op unless `allowNew={true}`.\n   */\n  newSelectionPrefix: PropTypes.node,\n\n  /**\n   * Prompt displayed when large data sets are paginated.\n   */\n  paginationText: PropTypes.node,\n\n  /**\n   * Provides a hook for customized rendering of menu item contents.\n   */\n  renderMenuItemChildren: PropTypes.func\n};\nvar defaultProps = {\n  newSelectionPrefix: 'New selection: ',\n  paginationText: 'Display additional results...',\n  renderMenuItemChildren: function renderMenuItemChildren(option, props, idx) {\n    return /*#__PURE__*/React.createElement(Highlighter, {\n      search: props.text\n    }, getOptionLabel(option, props.labelKey));\n  }\n};\n\nvar TypeaheadMenu = function TypeaheadMenu(props) {\n  var labelKey = props.labelKey,\n      newSelectionPrefix = props.newSelectionPrefix,\n      options = props.options,\n      paginationText = props.paginationText,\n      renderMenuItemChildren = props.renderMenuItemChildren,\n      text = props.text,\n      menuProps = _objectWithoutProperties(props, _excluded);\n\n  var renderMenuItem = function renderMenuItem(option, position) {\n    var label = getOptionLabel(option, labelKey);\n    var menuItemProps = {\n      disabled: getOptionProperty(option, 'disabled'),\n      label: label,\n      option: option,\n      position: position\n    };\n\n    if (option.customOption) {\n      return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-custom-option\",\n        key: position,\n        label: label\n      }), newSelectionPrefix, /*#__PURE__*/React.createElement(Highlighter, {\n        search: text\n      }, label));\n    }\n\n    if (option.paginationOption) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: \"pagination-item\"\n      }, /*#__PURE__*/React.createElement(Menu.Divider, null), /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-pagination-option\",\n        label: paginationText\n      }), paginationText));\n    }\n\n    return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n      key: position\n    }), renderMenuItemChildren(option, props, position));\n  };\n\n  return (\n    /*#__PURE__*/\n    // Explictly pass `text` so Flow doesn't complain...\n    React.createElement(Menu, _extends({}, menuProps, {\n      text: text\n    }), options.map(renderMenuItem))\n  );\n};\n\nTypeaheadMenu.propTypes = propTypes;\nTypeaheadMenu.defaultProps = defaultProps;\nexport default TypeaheadMenu;","map":{"version":3,"sources":["C:/proyecto/practica/node_modules/react-bootstrap-typeahead/es/components/TypeaheadMenu.js"],"names":["_extends","_objectWithoutProperties","_excluded","React","Fragment","PropTypes","Highlighter","Menu","MenuItem","getOptionLabel","getOptionProperty","propTypes","newSelectionPrefix","node","paginationText","renderMenuItemChildren","func","defaultProps","option","props","idx","createElement","search","text","labelKey","TypeaheadMenu","options","menuProps","renderMenuItem","position","label","menuItemProps","disabled","customOption","className","key","paginationOption","Divider","map"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"labelKey\", \"newSelectionPrefix\", \"options\", \"paginationText\", \"renderMenuItemChildren\", \"text\"];\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Highlighter from './Highlighter';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport { getOptionLabel, getOptionProperty } from '../utils';\nvar propTypes = {\n  /**\n   * Provides the ability to specify a prefix before the user-entered text to\n   * indicate that the selection will be new. No-op unless `allowNew={true}`.\n   */\n  newSelectionPrefix: PropTypes.node,\n\n  /**\n   * Prompt displayed when large data sets are paginated.\n   */\n  paginationText: PropTypes.node,\n\n  /**\n   * Provides a hook for customized rendering of menu item contents.\n   */\n  renderMenuItemChildren: PropTypes.func\n};\nvar defaultProps = {\n  newSelectionPrefix: 'New selection: ',\n  paginationText: 'Display additional results...',\n  renderMenuItemChildren: function renderMenuItemChildren(option, props, idx) {\n    return /*#__PURE__*/React.createElement(Highlighter, {\n      search: props.text\n    }, getOptionLabel(option, props.labelKey));\n  }\n};\n\nvar TypeaheadMenu = function TypeaheadMenu(props) {\n  var labelKey = props.labelKey,\n      newSelectionPrefix = props.newSelectionPrefix,\n      options = props.options,\n      paginationText = props.paginationText,\n      renderMenuItemChildren = props.renderMenuItemChildren,\n      text = props.text,\n      menuProps = _objectWithoutProperties(props, _excluded);\n\n  var renderMenuItem = function renderMenuItem(option, position) {\n    var label = getOptionLabel(option, labelKey);\n    var menuItemProps = {\n      disabled: getOptionProperty(option, 'disabled'),\n      label: label,\n      option: option,\n      position: position\n    };\n\n    if (option.customOption) {\n      return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-custom-option\",\n        key: position,\n        label: label\n      }), newSelectionPrefix, /*#__PURE__*/React.createElement(Highlighter, {\n        search: text\n      }, label));\n    }\n\n    if (option.paginationOption) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: \"pagination-item\"\n      }, /*#__PURE__*/React.createElement(Menu.Divider, null), /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n        className: \"rbt-menu-pagination-option\",\n        label: paginationText\n      }), paginationText));\n    }\n\n    return /*#__PURE__*/React.createElement(MenuItem, _extends({}, menuItemProps, {\n      key: position\n    }), renderMenuItemChildren(option, props, position));\n  };\n\n  return (\n    /*#__PURE__*/\n    // Explictly pass `text` so Flow doesn't complain...\n    React.createElement(Menu, _extends({}, menuProps, {\n      text: text\n    }), options.map(renderMenuItem))\n  );\n};\n\nTypeaheadMenu.propTypes = propTypes;\nTypeaheadMenu.defaultProps = defaultProps;\nexport default TypeaheadMenu;"]},"metadata":{},"sourceType":"module"}