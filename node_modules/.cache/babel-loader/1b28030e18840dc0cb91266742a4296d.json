{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\pages\\\\uikit\\\\Notifications.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Col, Card, Toast, ToastContainer, Form, Button, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames'; // components\n\nimport PageTitle from '../../components/PageTitle'; // images\n\nimport user from '../../assets/images/users/avatar-2.jpg';\nimport user2 from '../../assets/images/users/avatar-4.jpg';\nimport user3 from '../../assets/images/users/avatar-5.jpg';\nimport user4 from '../../assets/images/users/avatar-6.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\nconst DefaultToasts = () => {\n  _s();\n\n  const [show, setShow] = useState(true);\n  const [showTranslucent, setShowTranslucent] = useState(true);\n  const [showPlacement, setShowPlacement] = useState(true);\n  const [stacked, setStacked] = useState([{\n    title: 'Richard',\n    avatar: user2,\n    time: 'just now',\n    desc: 'See? Just like this.'\n  }, {\n    title: 'Edward',\n    avatar: user3,\n    time: '2 seconds ago',\n    desc: 'Heads up, toasts will stack automatically'\n  }]);\n  /*\n   * handle close\n   */\n\n  const handleClose = index => {\n    const list = [...stacked];\n    list.splice(index, 1);\n    setStacked(list);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Bootstrap Toasts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: \"Push notifications to your visitors with a toast, a lightweight and easily customizable alert message.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"font-14 mb-1\",\n            children: \"Basic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: \"Toasts are as flexible as you need and have very little required markup. At a minimum, we require a single element to contain your \\u201Ctoasted\\u201D content and strongly encourage a dismiss button.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3\",\n            children: /*#__PURE__*/_jsxDEV(Toast, {\n              onClose: () => setShow(false),\n              show: show,\n              delay: 8000,\n              autohide: true,\n              children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: user,\n                  alt: \"brand-logo\",\n                  height: \"28\",\n                  className: \"me-1 rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: \"me-auto\",\n                  children: \"Alfredo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"11 mins ago\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                children: \"Hello, world! This is a toast message.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"font-14 mb-1\",\n            children: \"Translucent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: \"Toasts are slightly translucent, too, so they blend over whatever they might appear over. For browsers that support the backdrop-filter CSS property, we\\u2019ll also attempt to blur the elements under a toast.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 bg-light\",\n            children: /*#__PURE__*/_jsxDEV(Toast, {\n              onClose: () => setShowTranslucent(false),\n              show: showTranslucent,\n              delay: 5000,\n              autohide: true,\n              children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: user2,\n                  alt: \"brand-logo\",\n                  height: \"28\",\n                  className: \"me-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: \"me-auto\",\n                  children: \"Andrew\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"ms-5\",\n                  children: \"11 mins ago\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                children: \"Hello, world! This is a toast message.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"font-14 mb-1\",\n            children: \"Stacking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: \"When you have multiple toasts, we default to vertiaclly stacking them in a readable manner.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              \"aria-live\": \"polite\",\n              \"aria-atomic\": \"true\",\n              style: {\n                position: 'relative',\n                minHeight: '200px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"toast-container\",\n                style: {\n                  position: 'absolute',\n                  top: 0,\n                  right: 0\n                },\n                children: (stacked || []).map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(Toast, {\n                    onClose: () => handleClose(index),\n                    delay: 7000,\n                    autohide: true,\n                    children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: item.avatar,\n                        alt: \"brand-logo\",\n                        height: \"28\",\n                        className: \"me-1 rounded\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 119,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                        className: \"me-auto\",\n                        children: item.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 125,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                        className: \"ms-5\",\n                        children: item.time\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                      children: item.desc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 49\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"font-14 mb-1\",\n            children: \"Placement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: [\"Place toasts with custom CSS as you need them. The top right is often used for notifications, as is the top middle. If you\\u2019re only ever going to show one toast at a time, put the positioning styles right on the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".toast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 69\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              \"aria-live\": \"polite\",\n              \"aria-atomic\": \"true\",\n              className: \"d-flex justify-content-center align-items-center\",\n              style: {\n                minHeight: '200px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Toast, {\n                onClose: () => setShowPlacement(false),\n                show: showPlacement,\n                children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: user4,\n                    alt: \"brand-logo\",\n                    height: \"28\",\n                    className: \"me-1 rounded\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    className: \"me-auto\",\n                    children: \"Ronnie\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"ms-5\",\n                    children: \"1 mins ago\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                  children: \"Heads up, toasts will stack automatically\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DefaultToasts, \"dTPbuBjXkwKrgXM9SrEwjj7e1qk=\");\n\n_c = DefaultToasts;\n\nconst CustomToast = () => {\n  _s2();\n\n  const [showCustom1, setShowCustom1] = useState(true);\n  const [showCustom2, setShowCustom2] = useState(true);\n  const [showCustom3, setShowCustom3] = useState(true);\n  const [showCustom4, setShowCustom4] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"header-title\",\n          children: \"Custom content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"Alternatively, you can also add additional controls and components to toasts.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Toast, {\n          className: \"d-flex align-items-center mt-4\",\n          show: showCustom1,\n          onClose: () => setShowCustom1(false),\n          delay: 6000,\n          autohide: true,\n          children: [/*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: \"Hello, world! This is a toast message.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"\",\n            onClick: () => setShowCustom1(false),\n            className: \"btn-close ms-auto me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Toast, {\n          className: \"d-flex align-items-center text-white bg-primary border-0 mt-4\",\n          show: showCustom2,\n          onClose: () => setShowCustom2(false),\n          delay: 10000,\n          autohide: true,\n          children: [/*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: \"Hello, world! This is a toast message.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"\",\n            onClick: () => setShowCustom2(false),\n            className: \"btn-close btn-close-white ms-auto me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Toast, {\n          className: \"mt-4\",\n          show: showCustom3,\n          onClose: () => setShowCustom3(false),\n          delay: 12000,\n          autohide: true,\n          children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: [\"Hello, world! This is a toast message.\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 pt-2 border-top\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                className: \"btn-sm me-1\",\n                children: \"Take action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: () => setShowCustom3(false),\n                className: \"btn-sm\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Toast, {\n          className: \"text-white bg-primary mt-4\",\n          show: showCustom4,\n          onClose: () => setShowCustom4(false),\n          delay: 14000,\n          autohide: true,\n          children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: [\"Hello, world! This is a toast message.\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 pt-2 border-top\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"light\",\n                className: \"btn-sm me-1\",\n                children: \"Take action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: () => setShowCustom4(false),\n                className: \"btn-sm\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(CustomToast, \"fvdRoGlAfSIvAH92jGTnokLbSFM=\");\n\n_c2 = CustomToast;\n\nconst PlacementToast = () => {\n  _s3();\n\n  const [position, setPosition] = useState('top-start');\n  const positions = ['top-start', 'top-center', 'top-end', 'middle-start', 'middle-center', 'middle-end', 'bottom-start', 'bottom-center', 'bottom-end'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"header-title\",\n          children: \"Placement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: [\"Place toasts with custom CSS as you need them. The top right is often used for notifications, as is the top middle. If you\\u2019re only ever going to show one toast at a time, put the positioning styles right on the\", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \".toast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"selectToastPlacement\",\n              children: \"Toast placement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              id: \"selectToastPlacement\",\n              className: \"mt-2\",\n              onChange: e => setPosition(e.currentTarget.value),\n              children: (positions || []).map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: p,\n                children: p\n              }, p, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"aria-live\": \"polite\",\n          \"aria-atomic\": \"true\",\n          className: \"bg-light position-relative\",\n          style: {\n            minHeight: '294px'\n          },\n          children: /*#__PURE__*/_jsxDEV(ToastContainer, {\n            className: \"p-3\",\n            position: position,\n            children: /*#__PURE__*/_jsxDEV(Toast, {\n              children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n                closeButton: false,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: user4,\n                  className: \"me-1 rounded\",\n                  alt: \"\",\n                  height: \"28\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: \"me-auto\",\n                  children: \"Ronnie\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"11 mins ago\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n                children: \"Hello, world! This is a toast message.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s3(PlacementToast, \"1QtNG1J4CeOyHfEHtPyspgPxkgY=\");\n\n_c3 = PlacementToast;\n\nconst DefaultAlerts = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Default Alert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: [\"Alerts are available for any length of text, as well as an optional dismiss button. For proper styling, use one of the eight \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"variant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 51\n        }, this), \"s.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this), ['primary', 'secondary'].map((color, index) => {\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          variant: color,\n          children: [\"This is a \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 39\n          }, this), \" alert\\u2014check it out!\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-check-all me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this), \"This is a \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 73\n        }, this), \" alert\\u2014check it out!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-block-helper me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this), \" This is a \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 77\n        }, this), \" alert\\u2014check it out!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"warning\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-alert-outline me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this), \" This is a \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"warning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 78\n        }, this), \" alert\\u2014check it out!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-alert-circle-outline me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this), \" A simple info alert with\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"alert-link\",\n          children: \"an example link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this), \". Give it a click if you like.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"light\",\n        children: [\"A simple light alert with\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"alert-link\",\n          children: \"an example link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }, this), \". Give it a click if you like.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"dark\",\n        className: \"mb-0\",\n        children: [\"A simple dark alert with\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"alert-link\",\n          children: \"an example link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this), \". Give it a click if you like.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = DefaultAlerts;\n\nconst DismissibleAlerts = () => {\n  _s4();\n\n  const [colors, setColors] = useState(['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark']);\n  /*\n   * handle close\n   */\n\n  const handleClose = index => {\n    const list = [...colors];\n    list.splice(index, 1);\n    setColors(list);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Dismissing Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: [\"Add the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"dismissible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 29\n        }, this), \" prop to add a functioning dismiss button to the Alert.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }, this), colors.map((color, index) => {\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          variant: color,\n          onClose: () => handleClose(index),\n          dismissible: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [color, \" - \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 29\n          }, this), \" A simple \", color, \" alert\\u2014check it out!\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 9\n  }, this);\n};\n\n_s4(DismissibleAlerts, \"nUXlYA7bBNmSLiVN0XGUBkXlj3E=\");\n\n_c5 = DismissibleAlerts;\n\nconst CustomOutlineAlerts = () => {\n  _s5();\n\n  const [colors, setColors] = useState(['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark']);\n  /*\n   * handle close\n   */\n\n  const handleClose = index => {\n    const list = [...colors];\n    list.splice(index, 1);\n    setColors(list);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title\",\n        children: \"Custom Outline Alert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: [\"Use \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".bg-transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 25\n        }, this), \",\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".text-*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 54\n        }, this), \" classes.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 17\n      }, this), (colors || []).map((color, index) => {\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          variant: color,\n          onClose: () => handleClose(index),\n          className: classNames('bg-transparent', 'text-' + color, color === 'light' && 'text-dark'),\n          dismissible: true,\n          children: [\"A simple \", color, \" alert\\u2014check it out!\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 448,\n    columnNumber: 9\n  }, this);\n};\n\n_s5(CustomOutlineAlerts, \"nUXlYA7bBNmSLiVN0XGUBkXlj3E=\");\n\n_c6 = CustomOutlineAlerts;\n\nconst CustomBackgroundAlerts = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"header-title\",\n          children: \"Custom Background Alert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-header\",\n          children: [\"Use \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \".bg-*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 29\n          }, this), \",\", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \".border-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 48\n          }, this), \" classes.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 21\n        }, this), (colors || []).map((color, index) => {\n          return /*#__PURE__*/_jsxDEV(Alert, {\n            variant: color,\n            className: classNames('bg-' + color, 'border-0', color === 'light' ? 'text-dark' : 'text-white'),\n            children: [\"This is a \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 43\n            }, this), \" alert\\u2014check it out!\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c7 = CustomBackgroundAlerts;\n\nconst Notifications = () => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      breadCrumbItems: [{\n        label: 'Base UI',\n        path: '/ui/toasts'\n      }, {\n        label: 'Notifications',\n        path: '/ui/notifications',\n        active: true\n      }],\n      title: 'Notifications'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(DefaultToasts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(CustomToast, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(PlacementToast, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(DefaultAlerts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(DismissibleAlerts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(CustomOutlineAlerts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(CustomBackgroundAlerts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 506,\n    columnNumber: 9\n  }, this);\n};\n\n_c8 = Notifications;\nexport default Notifications;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"DefaultToasts\");\n$RefreshReg$(_c2, \"CustomToast\");\n$RefreshReg$(_c3, \"PlacementToast\");\n$RefreshReg$(_c4, \"DefaultAlerts\");\n$RefreshReg$(_c5, \"DismissibleAlerts\");\n$RefreshReg$(_c6, \"CustomOutlineAlerts\");\n$RefreshReg$(_c7, \"CustomBackgroundAlerts\");\n$RefreshReg$(_c8, \"Notifications\");","map":{"version":3,"sources":["C:/proyecto/practica/src/pages/uikit/Notifications.tsx"],"names":["React","useState","Row","Col","Card","Toast","ToastContainer","Form","Button","Alert","Link","classNames","PageTitle","user","user2","user3","user4","colors","DefaultToasts","show","setShow","showTranslucent","setShowTranslucent","showPlacement","setShowPlacement","stacked","setStacked","title","avatar","time","desc","handleClose","index","list","splice","position","minHeight","top","right","map","item","CustomToast","showCustom1","setShowCustom1","showCustom2","setShowCustom2","showCustom3","setShowCustom3","showCustom4","setShowCustom4","PlacementToast","setPosition","positions","e","currentTarget","value","p","DefaultAlerts","color","DismissibleAlerts","setColors","CustomOutlineAlerts","CustomBackgroundAlerts","Notifications","label","path","active"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Row, Col, Card, Toast, ToastContainer, Form, Button, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\n// images\nimport user from '../../assets/images/users/avatar-2.jpg';\nimport user2 from '../../assets/images/users/avatar-4.jpg';\nimport user3 from '../../assets/images/users/avatar-5.jpg';\nimport user4 from '../../assets/images/users/avatar-6.jpg';\n\nconst colors: string[] = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\nconst DefaultToasts = () => {\n    const [show, setShow] = useState<boolean>(true);\n    const [showTranslucent, setShowTranslucent] = useState<boolean>(true);\n    const [showPlacement, setShowPlacement] = useState<boolean>(true);\n\n    const [stacked, setStacked] = useState([\n        {\n            title: 'Richard',\n            avatar: user2,\n            time: 'just now',\n            desc: 'See? Just like this.',\n        },\n        {\n            title: 'Edward',\n            avatar: user3,\n            time: '2 seconds ago',\n            desc: 'Heads up, toasts will stack automatically',\n        },\n    ]);\n\n    /*\n     * handle close\n     */\n    const handleClose = (index: number) => {\n        const list = [...stacked];\n        list.splice(index, 1);\n        setStacked(list);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Bootstrap Toasts</h4>\n                <p className=\"text-muted\">\n                    Push notifications to your visitors with a toast, a lightweight and easily customizable alert\n                    message.\n                </p>\n\n                <Row>\n                    <Col md={6}>\n                        <h5 className=\"font-14 mb-1\">Basic</h5>\n                        <p className=\"text-muted\">\n                            Toasts are as flexible as you need and have very little required markup. At a minimum, we\n                            require a single element to contain your “toasted” content and strongly encourage a dismiss\n                            button.\n                        </p>\n                        <div className=\"p-3\">\n                            <Toast onClose={() => setShow(false)} show={show} delay={8000} autohide>\n                                <Toast.Header>\n                                    <img src={user} alt=\"brand-logo\" height=\"28\" className=\"me-1 rounded\" />\n                                    <strong className=\"me-auto\">Alfredo</strong>\n                                    <small>11 mins ago</small>\n                                </Toast.Header>\n                                <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n                            </Toast>\n                        </div>\n                    </Col>\n\n                    <Col md={6}>\n                        <h5 className=\"font-14 mb-1\">Translucent</h5>\n                        <p className=\"text-muted\">\n                            Toasts are slightly translucent, too, so they blend over whatever they might appear over.\n                            For browsers that support the backdrop-filter CSS property, we’ll also attempt to blur the\n                            elements under a toast.\n                        </p>\n\n                        <div className=\"p-3 bg-light\">\n                            <Toast\n                                onClose={() => setShowTranslucent(false)}\n                                show={showTranslucent}\n                                delay={5000}\n                                autohide\n                            >\n                                <Toast.Header>\n                                    <img src={user2} alt=\"brand-logo\" height=\"28\" className=\"me-1\" />\n                                    <strong className=\"me-auto\">Andrew</strong>\n                                    <small className=\"ms-5\">11 mins ago</small>\n                                </Toast.Header>\n                                <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n                            </Toast>\n                        </div>\n                    </Col>\n                </Row>\n\n                {/* stacked */}\n                <Row>\n                    <Col md={6} className=\"mt-4\">\n                        <h5 className=\"font-14 mb-1\">Stacking</h5>\n                        <p className=\"text-muted\">\n                            When you have multiple toasts, we default to vertiaclly stacking them in a readable manner.\n                        </p>\n                        <div className=\"p-3\">\n                            <div\n                                aria-live=\"polite\"\n                                aria-atomic=\"true\"\n                                style={{ position: 'relative', minHeight: '200px' }}\n                            >\n                                <div className=\"toast-container\" style={{ position: 'absolute', top: 0, right: 0 }}>\n                                    {(stacked || []).map((item, index) => {\n                                        return (\n                                            <Toast key={index} onClose={() => handleClose(index)} delay={7000} autohide>\n                                                <Toast.Header>\n                                                    <img\n                                                        src={item.avatar}\n                                                        alt=\"brand-logo\"\n                                                        height=\"28\"\n                                                        className=\"me-1 rounded\"\n                                                    />\n                                                    <strong className=\"me-auto\">{item.title}</strong>\n                                                    <small className=\"ms-5\">{item.time}</small>\n                                                </Toast.Header>\n                                                <Toast.Body>{item.desc}</Toast.Body>\n                                            </Toast>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                        </div>\n                    </Col>\n\n                    <Col md={6} className=\"mt-4\">\n                        <h5 className=\"font-14 mb-1\">Placement</h5>\n                        <p className=\"text-muted\">\n                            Place toasts with custom CSS as you need them. The top right is often used for\n                            notifications, as is the top middle. If you’re only ever going to show one toast at a time,\n                            put the positioning styles right on the <code>.toast</code>.\n                        </p>\n\n                        <div className=\"p-3\">\n                            <div\n                                aria-live=\"polite\"\n                                aria-atomic=\"true\"\n                                className=\"d-flex justify-content-center align-items-center\"\n                                style={{ minHeight: '200px' }}\n                            >\n                                <Toast onClose={() => setShowPlacement(false)} show={showPlacement}>\n                                    <Toast.Header>\n                                        <img src={user4} alt=\"brand-logo\" height=\"28\" className=\"me-1 rounded\" />\n                                        <strong className=\"me-auto\">Ronnie</strong>\n                                        <small className=\"ms-5\">1 mins ago</small>\n                                    </Toast.Header>\n                                    <Toast.Body>Heads up, toasts will stack automatically</Toast.Body>\n                                </Toast>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst CustomToast = () => {\n    const [showCustom1, setShowCustom1] = useState<boolean>(true);\n    const [showCustom2, setShowCustom2] = useState<boolean>(true);\n    const [showCustom3, setShowCustom3] = useState<boolean>(true);\n    const [showCustom4, setShowCustom4] = useState<boolean>(true);\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Custom content</h4>\n                    <p className=\"text-muted\">\n                        Alternatively, you can also add additional controls and components to toasts.\n                    </p>\n                    <Toast\n                        className=\"d-flex align-items-center mt-4\"\n                        show={showCustom1}\n                        onClose={() => setShowCustom1(false)}\n                        delay={6000}\n                        autohide\n                    >\n                        <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n                        <Button\n                            variant=\"\"\n                            onClick={() => setShowCustom1(false)}\n                            className=\"btn-close ms-auto me-2\"\n                        ></Button>\n                    </Toast>\n                    <Toast\n                        className=\"d-flex align-items-center text-white bg-primary border-0 mt-4\"\n                        show={showCustom2}\n                        onClose={() => setShowCustom2(false)}\n                        delay={10000}\n                        autohide\n                    >\n                        <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n\n                        <Button\n                            variant=\"\"\n                            onClick={() => setShowCustom2(false)}\n                            className=\"btn-close btn-close-white ms-auto me-2\"\n                        ></Button>\n                    </Toast>\n                    <Toast\n                        className=\"mt-4\"\n                        show={showCustom3}\n                        onClose={() => setShowCustom3(false)}\n                        delay={12000}\n                        autohide\n                    >\n                        <Toast.Body>\n                            Hello, world! This is a toast message.\n                            <div className=\"mt-2 pt-2 border-top\">\n                                <Button variant=\"primary\" className=\"btn-sm me-1\">\n                                    Take action\n                                </Button>\n                                <Button variant=\"secondary\" onClick={() => setShowCustom3(false)} className=\"btn-sm\">\n                                    Close\n                                </Button>\n                            </div>\n                        </Toast.Body>\n                    </Toast>\n                    <Toast\n                        className=\"text-white bg-primary mt-4\"\n                        show={showCustom4}\n                        onClose={() => setShowCustom4(false)}\n                        delay={14000}\n                        autohide\n                    >\n                        <Toast.Body>\n                            Hello, world! This is a toast message.\n                            <div className=\"mt-2 pt-2 border-top\">\n                                <Button variant=\"light\" className=\"btn-sm me-1\">\n                                    Take action\n                                </Button>\n                                <Button variant=\"secondary\" onClick={() => setShowCustom4(false)} className=\"btn-sm\">\n                                    Close\n                                </Button>\n                            </div>\n                        </Toast.Body>\n                    </Toast>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst PlacementToast = () => {\n    type ToastPositions =\n        | 'top-start'\n        | 'top-center'\n        | 'top-end'\n        | 'middle-start'\n        | 'middle-center'\n        | 'middle-end'\n        | 'bottom-start'\n        | 'bottom-center'\n        | 'bottom-end';\n\n    const [position, setPosition] = useState<ToastPositions>('top-start');\n\n    const positions = [\n        'top-start',\n        'top-center',\n        'top-end',\n        'middle-start',\n        'middle-center',\n        'middle-end',\n        'bottom-start',\n        'bottom-center',\n        'bottom-end',\n    ];\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Placement</h4>\n                    <p className=\"text-muted\">\n                        Place toasts with custom CSS as you need them. The top right is often used for notifications, as\n                        is the top middle. If you’re only ever going to show one toast at a time, put the positioning\n                        styles right on the\n                        <code>.toast</code>.\n                    </p>\n                    <form className=\"mt-4\">\n                        <div className=\"mb-3\">\n                            <label htmlFor=\"selectToastPlacement\">Toast placement</label>\n                            <Form.Select\n                                id=\"selectToastPlacement\"\n                                className=\"mt-2\"\n                                onChange={(e: any) => setPosition(e.currentTarget.value)}\n                            >\n                                {(positions || []).map((p) => (\n                                    <option key={p} value={p}>\n                                        {p}\n                                    </option>\n                                ))}\n                            </Form.Select>\n                        </div>\n                    </form>\n                    <div\n                        aria-live=\"polite\"\n                        aria-atomic=\"true\"\n                        className=\"bg-light position-relative\"\n                        style={{ minHeight: '294px' }}\n                    >\n                        <ToastContainer className=\"p-3\" position={position}>\n                            <Toast>\n                                <Toast.Header closeButton={false}>\n                                    <img src={user4} className=\"me-1 rounded\" alt=\"\" height=\"28\" />\n                                    <strong className=\"me-auto\">Ronnie</strong>\n                                    <small>11 mins ago</small>\n                                </Toast.Header>\n                                <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n                            </Toast>\n                        </ToastContainer>\n                    </div>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst DefaultAlerts = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Default Alert</h4>\n                <p className=\"sub-header\">\n                    Alerts are available for any length of text, as well as an optional dismiss button. For proper\n                    styling, use one of the eight <code>variant</code>s.\n                </p>\n\n                {['primary', 'secondary'].map((color, index) => {\n                    return (\n                        <Alert variant={color} key={index}>\n                            This is a <strong>{color}</strong> alert—check it out!\n                        </Alert>\n                    );\n                })}\n                <Alert variant=\"success\">\n                    <i className=\"mdi mdi-check-all me-2\"></i>This is a <strong>success</strong> alert—check it out!\n                </Alert>\n                <Alert variant=\"danger\">\n                    <i className=\"mdi mdi-block-helper me-2\"></i> This is a <strong>danger</strong> alert—check it out!\n                </Alert>\n                <Alert variant=\"warning\">\n                    <i className=\"mdi mdi-alert-outline me-2\"></i> This is a <strong>warning</strong> alert—check it\n                    out!\n                </Alert>\n                <Alert variant=\"info\">\n                    <i className=\"mdi mdi-alert-circle-outline me-2\"></i> A simple info alert with{' '}\n                    <Link to=\"#\" className=\"alert-link\">\n                        an example link\n                    </Link>\n                    . Give it a click if you like.\n                </Alert>\n                <Alert variant=\"light\">\n                    A simple light alert with{' '}\n                    <Link to=\"#\" className=\"alert-link\">\n                        an example link\n                    </Link>\n                    . Give it a click if you like.\n                </Alert>\n                <Alert variant=\"dark\" className=\"mb-0\">\n                    A simple dark alert with{' '}\n                    <Link to=\"#\" className=\"alert-link\">\n                        an example link\n                    </Link>\n                    . Give it a click if you like.\n                </Alert>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DismissibleAlerts = () => {\n    const [colors, setColors] = useState<string[]>([\n        'primary',\n        'secondary',\n        'success',\n        'danger',\n        'warning',\n        'info',\n        'light',\n        'dark',\n    ]);\n\n    /*\n     * handle close\n     */\n    const handleClose = (index: number) => {\n        const list = [...colors];\n        list.splice(index, 1);\n        setColors(list);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Dismissing Alerts</h4>\n                <p className=\"sub-header\">\n                    Add the <code>dismissible</code> prop to add a functioning dismiss button to the Alert.\n                </p>\n\n                {colors.map((color, index) => {\n                    return (\n                        <Alert variant={color} key={index} onClose={() => handleClose(index)} dismissible>\n                            <strong>{color} - </strong> A simple {color} alert—check it out!\n                        </Alert>\n                    );\n                })}\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst CustomOutlineAlerts = () => {\n    const [colors, setColors] = useState<string[]>([\n        'primary',\n        'secondary',\n        'success',\n        'danger',\n        'warning',\n        'info',\n        'light',\n        'dark',\n    ]);\n\n    /*\n     * handle close\n     */\n    const handleClose = (index: number) => {\n        const list = [...colors];\n        list.splice(index, 1);\n        setColors(list);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Custom Outline Alert</h4>\n                <p className=\"sub-header\">\n                    Use <code>.bg-transparent</code>,<code>.text-*</code> classes.\n                </p>\n\n                {(colors || []).map((color, index) => {\n                    return (\n                        <Alert\n                            key={index}\n                            variant={color}\n                            onClose={() => handleClose(index)}\n                            className={classNames('bg-transparent', 'text-' + color, color === 'light' && 'text-dark')}\n                            dismissible\n                        >\n                            A simple {color} alert—check it out!\n                        </Alert>\n                    );\n                })}\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst CustomBackgroundAlerts = () => {\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Custom Background Alert</h4>\n                    <p className=\"sub-header\">\n                        Use <code>.bg-*</code>,<code>.border-0</code> classes.\n                    </p>\n\n                    {(colors || []).map((color, index) => {\n                        return (\n                            <Alert\n                                variant={color}\n                                key={index}\n                                className={classNames(\n                                    'bg-' + color,\n                                    'border-0',\n                                    color === 'light' ? 'text-dark' : 'text-white'\n                                )}\n                            >\n                                This is a <strong>{color}</strong> alert—check it out!\n                            </Alert>\n                        );\n                    })}\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst Notifications = () => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/toasts' },\n                    { label: 'Notifications', path: '/ui/notifications', active: true },\n                ]}\n                title={'Notifications'}\n            />\n\n            {/* toasts */}\n            <Row>\n                <Col xs={12}>\n                    <DefaultToasts />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <CustomToast />\n                </Col>\n                <Col lg={6}>\n                    <PlacementToast />\n                </Col>\n            </Row>\n\n            {/* alerts */}\n            <Row>\n                <Col lg={6}>\n                    <DefaultAlerts />\n                </Col>\n\n                <Col lg={6}>\n                    <DismissibleAlerts />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <CustomOutlineAlerts />\n                </Col>\n\n                <Col lg={6}>\n                    <CustomBackgroundAlerts />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Notifications;\n"]},"metadata":{},"sourceType":"module"}