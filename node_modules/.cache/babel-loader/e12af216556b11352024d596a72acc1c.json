{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\components\\\\ChartStatistics.tsx\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChartStatistics = _ref => {\n  let {\n    title,\n    stats,\n    icon,\n    variant\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted font-15 mb-1 text-truncate\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [icon && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: classNames(icon, 'text-' + variant)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 26\n      }, this), \" \", stats]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = ChartStatistics;\nexport default ChartStatistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartStatistics\");","map":{"version":3,"sources":["C:/proyecto/practica/src/components/ChartStatistics.tsx"],"names":["React","classNames","ChartStatistics","title","stats","icon","variant"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;;AASA,MAAMC,eAAe,GAAG,QAA2D;AAAA,MAA1D;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA;AAAtB,GAA0D;AAC/E,sBACI;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,uCAAb;AAAA,gBAAsDH;AAAtD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,iBACKE,IAAI,iBAAI;AAAG,QAAA,SAAS,EAAEJ,UAAU,CAACI,IAAD,EAAO,UAAUC,OAAjB;AAAxB;AAAA;AAAA;AAAA;AAAA,cADb,OACuEF,KADvE;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAQH,CATD;;KAAMF,e;AAWN,eAAeA,eAAf","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ninterface ChartStatisticsProps {\n    title: string;\n    stats: string;\n    icon?: string;\n    variant?: string;\n}\n\nconst ChartStatistics = ({ title, stats, icon, variant }: ChartStatisticsProps) => {\n    return (\n        <>\n            <p className=\"text-muted font-15 mb-1 text-truncate\">{title}</p>\n            <h4>\n                {icon && <i className={classNames(icon, 'text-' + variant)}></i>} {stats}\n            </h4>\n        </>\n    );\n};\n\nexport default ChartStatistics;\n"]},"metadata":{},"sourceType":"module"}