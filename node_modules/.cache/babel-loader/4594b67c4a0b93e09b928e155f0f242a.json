{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\pages\\\\auth2\\\\ForgetPassword2.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Button, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup'; // actions\n\nimport { resetAuth, forgotPassword } from '../../redux/actions'; // hooks\n\nimport { useRedux } from '../../hooks/'; // components\n\nimport { VerticalForm, FormInput } from '../../components/form/';\nimport AuthLayout from './AuthLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n/* bottom links */\nconst BottomLink = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    className: \"footer footer-alt\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted\",\n      children: [t('Back to'), ' ', /*#__PURE__*/_jsxDEV(Link, {\n        to: '/auth/login2',\n        className: \"text-muted ms-1\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: t('Log in')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BottomLink, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = BottomLink;\n\nconst ForgetPassword2 = () => {\n  _s2();\n\n  const {\n    dispatch,\n    appSelector\n  } = useRedux();\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n  const {\n    loading,\n    passwordReset,\n    resetPasswordSuccess,\n    error\n  } = appSelector(state => ({\n    loading: state.Auth.loading,\n    resetPasswordSuccess: state.Auth.resetPasswordSuccess,\n    error: state.Auth.error,\n    passwordReset: state.Auth.passwordReset\n  }));\n  /*\n   * form validation schema\n   */\n\n  const schemaResolver = yupResolver(yup.object().shape({\n    email: yup.string().required(t('Please enter Email address'))\n  }));\n  /*\n   * handle form submission\n   */\n\n  const onSubmit = formData => {\n    dispatch(forgotPassword(formData['email']));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthLayout, {\n      bottomLinks: /*#__PURE__*/_jsxDEV(BottomLink, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 38\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mt-0\",\n        children: t('Recover Password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted mb-4\",\n        children: t(\"Enter your email address and we'll send you an email with instructions to reset your password.\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), resetPasswordSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: resetPasswordSuccess.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 42\n      }, this), error && !resetPasswordSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        className: \"my-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), !passwordReset && /*#__PURE__*/_jsxDEV(VerticalForm, {\n        onSubmit: onSubmit,\n        resolver: schemaResolver,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          label: t('Email address'),\n          type: \"text\",\n          name: \"email\",\n          placeholder: t('Enter your email'),\n          containerClass: 'mb-3'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center d-grid\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: loading,\n            children: t('Reset Password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(ForgetPassword2, \"aew9GLuqP4a4xDYzFGrc5LPhKGA=\", false, function () {\n  return [useRedux, useTranslation];\n});\n\n_c2 = ForgetPassword2;\nexport default ForgetPassword2;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BottomLink\");\n$RefreshReg$(_c2, \"ForgetPassword2\");","map":{"version":3,"sources":["C:/proyecto/practica/src/pages/auth2/ForgetPassword2.tsx"],"names":["React","useEffect","Button","Alert","Link","useTranslation","yup","yupResolver","resetAuth","forgotPassword","useRedux","VerticalForm","FormInput","AuthLayout","BottomLink","t","ForgetPassword2","dispatch","appSelector","loading","passwordReset","resetPasswordSuccess","error","state","Auth","schemaResolver","object","shape","email","string","required","onSubmit","formData","message"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,yBAA5B,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,qBAA1C,C,CAEA;;AACA,SAASC,QAAT,QAAyB,cAAzB,C,CAEA;;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,wBAAxC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAMA;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAQV,cAAc,EAA5B;AAEA,sBACI;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAA,2BACI;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA,iBACKU,CAAC,CAAC,SAAD,CADN,EACmB,GADnB,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,cAAV;AAA0B,QAAA,SAAS,EAAC,iBAApC;AAAA,+BACI;AAAA,oBAAIA,CAAC,CAAC,QAAD;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAbD;;GAAMD,U;UACYT,c;;;KADZS,U;;AAeN,MAAME,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BR,QAAQ,EAA1C;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAQV,cAAc,EAA5B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,QAAQ,CAACT,SAAS,EAAV,CAAR;AACH,GAFQ,EAEN,CAACS,QAAD,CAFM,CAAT;AAIA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,aAAX;AAA0BC,IAAAA,oBAA1B;AAAgDC,IAAAA;AAAhD,MAA0DJ,WAAW,CAAEK,KAAD,KAAY;AACpFJ,IAAAA,OAAO,EAAEI,KAAK,CAACC,IAAN,CAAWL,OADgE;AAEpFE,IAAAA,oBAAoB,EAAEE,KAAK,CAACC,IAAN,CAAWH,oBAFmD;AAGpFC,IAAAA,KAAK,EAAEC,KAAK,CAACC,IAAN,CAAWF,KAHkE;AAIpFF,IAAAA,aAAa,EAAEG,KAAK,CAACC,IAAN,CAAWJ;AAJ0D,GAAZ,CAAD,CAA3E;AAOA;AACJ;AACA;;AACI,QAAMK,cAAc,GAAGlB,WAAW,CAC9BD,GAAG,CAACoB,MAAJ,GAAaC,KAAb,CAAmB;AACfC,IAAAA,KAAK,EAAEtB,GAAG,CAACuB,MAAJ,GAAaC,QAAb,CAAsBf,CAAC,CAAC,4BAAD,CAAvB;AADQ,GAAnB,CAD8B,CAAlC;AAMA;AACJ;AACA;;AACI,QAAMgB,QAAQ,GAAIC,QAAD,IAAwB;AACrCf,IAAAA,QAAQ,CAACR,cAAc,CAACuB,QAAQ,CAAC,OAAD,CAAT,CAAf,CAAR;AACH,GAFD;;AAIA,sBACI;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,WAAW,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAAzB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,kBAAsBjB,CAAC,CAAC,kBAAD;AAAvB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA,kBACKA,CAAC,CACE,gGADF;AADN;AAAA;AAAA;AAAA;AAAA,cAFJ,EAQKM,oBAAoB,iBAAI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA,kBAA0BA,oBAAoB,CAACY;AAA/C;AAAA;AAAA;AAAA;AAAA,cAR7B,EAUKX,KAAK,IAAI,CAACD,oBAAV,iBACG,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAwB,QAAA,SAAS,EAAC,MAAlC;AAAA,kBACKC;AADL;AAAA;AAAA;AAAA;AAAA,cAXR,EAgBK,CAACF,aAAD,iBACG,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEW,QAAxB;AAAkC,QAAA,QAAQ,EAAEN,cAA5C;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,KAAK,EAAEV,CAAC,CAAC,eAAD,CADZ;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,UAAA,WAAW,EAAEA,CAAC,CAAC,kBAAD,CAJlB;AAKI,UAAA,cAAc,EAAE;AALpB;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,QAAQ,EAAEI,OAAhC;AAAA,sBACKJ,CAAC,CAAC,gBAAD;AADN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAsCH,CArED;;IAAMC,e;UACgCN,Q,EACpBL,c;;;MAFZW,e;AAuEN,eAAeA,eAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Button, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\n// actions\nimport { resetAuth, forgotPassword } from '../../redux/actions';\n\n// hooks\nimport { useRedux } from '../../hooks/';\n\n// components\nimport { VerticalForm, FormInput } from '../../components/form/';\n\nimport AuthLayout from './AuthLayout';\n\ninterface UserData {\n    email: string;\n}\n\n/* bottom links */\nconst BottomLink = () => {\n    const { t } = useTranslation();\n\n    return (\n        <footer className=\"footer footer-alt\">\n            <p className=\"text-muted\">\n                {t('Back to')}{' '}\n                <Link to={'/auth/login2'} className=\"text-muted ms-1\">\n                    <b>{t('Log in')}</b>\n                </Link>\n            </p>\n        </footer>\n    );\n};\n\nconst ForgetPassword2 = () => {\n    const { dispatch, appSelector } = useRedux();\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        dispatch(resetAuth());\n    }, [dispatch]);\n\n    const { loading, passwordReset, resetPasswordSuccess, error } = appSelector((state) => ({\n        loading: state.Auth.loading,\n        resetPasswordSuccess: state.Auth.resetPasswordSuccess,\n        error: state.Auth.error,\n        passwordReset: state.Auth.passwordReset,\n    }));\n\n    /*\n     * form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            email: yup.string().required(t('Please enter Email address')),\n        })\n    );\n\n    /*\n     * handle form submission\n     */\n    const onSubmit = (formData: UserData) => {\n        dispatch(forgotPassword(formData['email']));\n    };\n\n    return (\n        <>\n            <AuthLayout bottomLinks={<BottomLink />}>\n                <h4 className=\"mt-0\">{t('Recover Password')}</h4>\n                <p className=\"text-muted mb-4\">\n                    {t(\n                        \"Enter your email address and we'll send you an email with instructions to reset your password.\"\n                    )}\n                </p>\n\n                {resetPasswordSuccess && <Alert variant=\"success\">{resetPasswordSuccess.message}</Alert>}\n\n                {error && !resetPasswordSuccess && (\n                    <Alert variant=\"danger\" className=\"my-2\">\n                        {error}\n                    </Alert>\n                )}\n\n                {!passwordReset && (\n                    <VerticalForm onSubmit={onSubmit} resolver={schemaResolver}>\n                        <FormInput\n                            label={t('Email address')}\n                            type=\"text\"\n                            name=\"email\"\n                            placeholder={t('Enter your email')}\n                            containerClass={'mb-3'}\n                        />\n\n                        <div className=\"text-center d-grid\">\n                            <Button type=\"submit\" disabled={loading}>\n                                {t('Reset Password')}\n                            </Button>\n                        </div>\n                    </VerticalForm>\n                )}\n            </AuthLayout>\n        </>\n    );\n};\n\nexport default ForgetPassword2;\n"]},"metadata":{},"sourceType":"module"}