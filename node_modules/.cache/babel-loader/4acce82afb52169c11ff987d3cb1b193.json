{"ast":null,"code":"import warn from './warn';\nexport default function validateSelectedPropChange(prevSelected, selected) {\n  var uncontrolledToControlled = !prevSelected && selected;\n  var controlledToUncontrolled = prevSelected && !selected;\n  var from, to, precedent;\n\n  if (uncontrolledToControlled) {\n    from = 'uncontrolled';\n    to = 'controlled';\n    precedent = 'an';\n  } else {\n    from = 'controlled';\n    to = 'uncontrolled';\n    precedent = 'a';\n  }\n\n  var message = \"You are changing \".concat(precedent, \" \").concat(from, \" typeahead to be \").concat(to, \". \") + \"Input elements should not switch from \".concat(from, \" to \").concat(to, \" (or vice versa). \") + 'Decide between using a controlled or uncontrolled element for the ' + 'lifetime of the component.';\n  warn(!(uncontrolledToControlled || controlledToUncontrolled), message);\n}","map":{"version":3,"sources":["C:/proyecto/practica/node_modules/react-bootstrap-typeahead/es/utils/validateSelectedPropChange.js"],"names":["warn","validateSelectedPropChange","prevSelected","selected","uncontrolledToControlled","controlledToUncontrolled","from","to","precedent","message","concat"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,eAAe,SAASC,0BAAT,CAAoCC,YAApC,EAAkDC,QAAlD,EAA4D;AACzE,MAAIC,wBAAwB,GAAG,CAACF,YAAD,IAAiBC,QAAhD;AACA,MAAIE,wBAAwB,GAAGH,YAAY,IAAI,CAACC,QAAhD;AACA,MAAIG,IAAJ,EAAUC,EAAV,EAAcC,SAAd;;AAEA,MAAIJ,wBAAJ,EAA8B;AAC5BE,IAAAA,IAAI,GAAG,cAAP;AACAC,IAAAA,EAAE,GAAG,YAAL;AACAC,IAAAA,SAAS,GAAG,IAAZ;AACD,GAJD,MAIO;AACLF,IAAAA,IAAI,GAAG,YAAP;AACAC,IAAAA,EAAE,GAAG,cAAL;AACAC,IAAAA,SAAS,GAAG,GAAZ;AACD;;AAED,MAAIC,OAAO,GAAG,oBAAoBC,MAApB,CAA2BF,SAA3B,EAAsC,GAAtC,EAA2CE,MAA3C,CAAkDJ,IAAlD,EAAwD,mBAAxD,EAA6EI,MAA7E,CAAoFH,EAApF,EAAwF,IAAxF,IAAgG,yCAAyCG,MAAzC,CAAgDJ,IAAhD,EAAsD,MAAtD,EAA8DI,MAA9D,CAAqEH,EAArE,EAAyE,oBAAzE,CAAhG,GAAiM,oEAAjM,GAAwQ,4BAAtR;AACAP,EAAAA,IAAI,CAAC,EAAEI,wBAAwB,IAAIC,wBAA9B,CAAD,EAA0DI,OAA1D,CAAJ;AACD","sourcesContent":["import warn from './warn';\nexport default function validateSelectedPropChange(prevSelected, selected) {\n  var uncontrolledToControlled = !prevSelected && selected;\n  var controlledToUncontrolled = prevSelected && !selected;\n  var from, to, precedent;\n\n  if (uncontrolledToControlled) {\n    from = 'uncontrolled';\n    to = 'controlled';\n    precedent = 'an';\n  } else {\n    from = 'controlled';\n    to = 'uncontrolled';\n    precedent = 'a';\n  }\n\n  var message = \"You are changing \".concat(precedent, \" \").concat(from, \" typeahead to be \").concat(to, \". \") + \"Input elements should not switch from \".concat(from, \" to \").concat(to, \" (or vice versa). \") + 'Decide between using a controlled or uncontrolled element for the ' + 'lifetime of the component.';\n  warn(!(uncontrolledToControlled || controlledToUncontrolled), message);\n}"]},"metadata":{},"sourceType":"module"}