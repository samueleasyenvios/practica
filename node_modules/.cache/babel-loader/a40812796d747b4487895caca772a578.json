{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\components\\\\topbar\\\\NotificationDropdown.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\nimport classNames from 'classnames'; //interface\n\n// components\nimport Scrollbar from '../Scrollbar'; // notifiaction continer styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst notificationContainerStyle = {\n  maxHeight: '230px',\n  display: 'none'\n};\nconst notificationShowContainerStyle = {\n  maxHeight: '230px'\n};\n\nconst NotificationDropdown = props => {\n  _s();\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [notificationContentStyle, setNotificationContentStyles] = useState(notificationContainerStyle);\n  /*\n   * toggle notification-dropdown\n   */\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n    setNotificationContentStyles(notificationContentStyle === notificationContainerStyle ? notificationShowContainerStyle : notificationContainerStyle);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    show: dropdownOpen,\n    onToggle: toggleDropdown,\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      id: \"dropdown-notification\",\n      as: \"a\",\n      onClick: toggleDropdown,\n      className: classNames('nav-link', 'waves-effect', 'waves-light', {\n        show: dropdownOpen\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fe-bell noti-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge bg-danger rounded-circle noti-icon-badge\",\n        children: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      className: \"dropdown-menu-end dropdown-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleDropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item noti-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"m-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"float-end\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                className: \"text-dark\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Clear All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), \"Notification\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n          style: notificationContentStyle,\n          children: (props['notifications'] || []).map((item, i) => {\n            return /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              className: \"dropdown-item notify-item\",\n              children: item.avatar ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"notify-icon\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: item.avatar,\n                    alt: \"\",\n                    className: \"img-fluid rounded-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"notify-details\",\n                  children: item.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-muted mb-0 user-msg\",\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: item.subText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `notify-icon bg-${item.bgColor}`,\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: item.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"notify-details\",\n                  children: [item.text, \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-muted\",\n                    children: item.subText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)\n            }, i + '-noti', false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"dropdown-item text-center text-primary notify-item notify-all\",\n          children: [\"View All \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fe-arrow-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotificationDropdown, \"rWRUkQT4DnU3nuu9BBqapjZB7bw=\");\n\n_c = NotificationDropdown;\nexport default NotificationDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationDropdown\");","map":{"version":3,"sources":["C:/proyecto/practica/src/components/topbar/NotificationDropdown.tsx"],"names":["React","useState","Link","Dropdown","classNames","Scrollbar","notificationContainerStyle","maxHeight","display","notificationShowContainerStyle","NotificationDropdown","props","dropdownOpen","setDropdownOpen","notificationContentStyle","setNotificationContentStyles","toggleDropdown","show","map","item","i","avatar","text","subText","bgColor","icon"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n//interface\nimport { NotificationItem } from '../../layouts/Topbar';\n\n// components\nimport Scrollbar from '../Scrollbar';\n\n// notifiaction continer styles\nconst notificationContainerStyle = {\n    maxHeight: '230px',\n    display: 'none',\n};\n\nconst notificationShowContainerStyle = {\n    maxHeight: '230px',\n};\n\ninterface NotificationDropdownProps {\n    notifications: Array<NotificationItem>;\n}\n\ninterface NotificationContainerStyle {\n    maxHeight?: string;\n    display?: string;\n}\n\nconst NotificationDropdown = (props: NotificationDropdownProps) => {\n    const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n    const [notificationContentStyle, setNotificationContentStyles] =\n        useState<NotificationContainerStyle>(notificationContainerStyle);\n\n    /*\n     * toggle notification-dropdown\n     */\n    const toggleDropdown = () => {\n        setDropdownOpen(!dropdownOpen);\n        setNotificationContentStyles(\n            notificationContentStyle === notificationContainerStyle\n                ? notificationShowContainerStyle\n                : notificationContainerStyle\n        );\n    };\n\n    return (\n        <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n            <Dropdown.Toggle\n                id=\"dropdown-notification\"\n                as=\"a\"\n                onClick={toggleDropdown}\n                className={classNames('nav-link', 'waves-effect', 'waves-light', {\n                    show: dropdownOpen,\n                })}\n            >\n                <i className=\"fe-bell noti-icon\"></i>\n                <span className=\"badge bg-danger rounded-circle noti-icon-badge\">5</span>\n            </Dropdown.Toggle>\n            <Dropdown.Menu className=\"dropdown-menu-end dropdown-lg\">\n                <div onClick={toggleDropdown}>\n                    <div className=\"dropdown-item noti-title\">\n                        <h5 className=\"m-0\">\n                            <span className=\"float-end\">\n                                <Link to=\"#\" className=\"text-dark\">\n                                    <small>Clear All</small>\n                                </Link>\n                            </span>\n                            Notification\n                        </h5>\n                    </div>\n                    <Scrollbar style={notificationContentStyle}>\n                        {(props['notifications'] || []).map((item, i) => {\n                            return (\n                                <Link to=\"#\" className=\"dropdown-item notify-item\" key={i + '-noti'}>\n                                    {item.avatar ? (\n                                        <>\n                                            <div className=\"notify-icon\">\n                                                <img src={item.avatar} alt=\"\" className=\"img-fluid rounded-circle\" />\n                                            </div>\n                                            <p className=\"notify-details\">{item.text}</p>\n                                            <p className=\"text-muted mb-0 user-msg\">\n                                                <small>{item.subText}</small>\n                                            </p>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <div className={`notify-icon bg-${item.bgColor}`}>\n                                                <i className={item.icon}></i>\n                                            </div>\n                                            <p className=\"notify-details\">\n                                                {item.text} <small className=\"text-muted\">{item.subText}</small>\n                                            </p>\n                                        </>\n                                    )}\n                                </Link>\n                            );\n                        })}\n                    </Scrollbar>\n\n                    <Link to=\"/\" className=\"dropdown-item text-center text-primary notify-item notify-all\">\n                        View All <i className=\"fe-arrow-right\"></i>\n                    </Link>\n                </div>\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default NotificationDropdown;\n"]},"metadata":{},"sourceType":"module"}