{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\pages\\\\apps\\\\Tasks\\\\List\\\\Section.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Collapse, Dropdown, Table } from 'react-bootstrap';\nimport classNames from 'classnames'; // dummy data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Task = _ref => {\n  _s();\n\n  let {\n    task\n  } = _ref;\n  const [completed, setCompleted] = useState(task.completed && task.completed);\n  /*\n   * mark completd on selected task\n   */\n\n  const markCompleted = e => {\n    setCompleted(e.target.checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: `task-${task.id}`,\n            checked: completed,\n            onChange: markCompleted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: `task-${task.id}`,\n            children: task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: task.assignee_avatar,\n            alt: \"\",\n            className: \"avatar-sm img-thumbnail rounded-circle\",\n            id: `task-avatar-${task.id}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: task.due_date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classNames('badge', {\n            'badge-soft-danger': task.priority === 'High',\n            'badge-soft-info': task.priority === 'Medium',\n            'badge-soft-success': task.priority === 'Low'\n          }, 'p-1'),\n          children: task.priority\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-inline table-action m-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-inline-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              className: \"action-icon px-1\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-square-edit-outline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-inline-item\",\n            children: /*#__PURE__*/_jsxDEV(Dropdown, {\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                as: \"a\",\n                className: \"cursor-pointer action-icon px-1\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"mdi mdi-dots-vertical\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                align: \"end\",\n                children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  children: \"Another Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  children: \"Something else here\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Task, \"wEzDsPZkazQz/5K3D4rBvXOIjwU=\");\n\n_c = Task;\n\nconst TaskSection = _ref2 => {\n  _s2();\n\n  let {\n    title,\n    tasks\n  } = _ref2;\n  const [collapse, setCollapse] = useState(true);\n  /*\n   * toggle task-dropdown\n   */\n\n  const toggleTask = () => setCollapse(!collapse);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"position-relative mb-0\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"text-dark d-block\",\n        to: \"#\",\n        onClick: toggleTask,\n        children: [title, \" Tasks \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted\",\n          children: [\"(\", ('0' + tasks.length).slice(-2), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: classNames('mdi', {\n            'mdi-chevron-down': collapse,\n            'mdi-chevron-right': !collapse\n          }, 'accordion-arrow')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: collapse,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          responsive: true,\n          borderless: true,\n          size: \"sm\",\n          className: \"table-centered table-nowrap mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"table-light\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-check-input\",\n                    type: \"checkbox\",\n                    id: \"taskupcomingCheck\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label\",\n                    htmlFor: \"taskupcomingCheck\",\n                    children: \"Task ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Tasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Assign to\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Task priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                style: {\n                  width: '85px'\n                },\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: (tasks || []).map((task, idx) => /*#__PURE__*/_jsxDEV(Task, {\n              task: task\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(TaskSection, \"DFBeKhzfe+bVU7RxyDiQ3sEv5CQ=\");\n\n_c2 = TaskSection;\nexport default TaskSection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Task\");\n$RefreshReg$(_c2, \"TaskSection\");","map":{"version":3,"sources":["C:/proyecto/practica/src/pages/apps/Tasks/List/Section.tsx"],"names":["React","useState","Link","Collapse","Dropdown","Table","classNames","Task","task","completed","setCompleted","markCompleted","e","target","checked","id","title","assignee_avatar","due_date","priority","TaskSection","tasks","collapse","setCollapse","toggleTask","length","slice","width","map","idx"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Collapse, Dropdown, Table } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// dummy data\nimport { TaskItemTypes } from './data';\n\nconst Task = ({ task }: { task: TaskItemTypes }) => {\n    const [completed, setCompleted] = useState<boolean>(task.completed && task.completed);\n\n    /*\n     * mark completd on selected task\n     */\n    const markCompleted = (e: any) => {\n        setCompleted(e.target.checked);\n    };\n\n    return (\n        <>\n            <tr>\n                <td>\n                    <div className=\"form-check\">\n                        <input\n                            type=\"checkbox\"\n                            className=\"form-check-input\"\n                            id={`task-${task.id}`}\n                            checked={completed}\n                            onChange={markCompleted}\n                        />\n                        <label className=\"form-check-label\" htmlFor={`task-${task.id}`}>\n                            {task.id}\n                        </label>\n                    </div>\n                </td>\n                <td>{task.title}</td>\n                <td>\n                    <div>\n                        <img\n                            src={task.assignee_avatar}\n                            alt=\"\"\n                            className=\"avatar-sm img-thumbnail rounded-circle\"\n                            id={`task-avatar-${task.id}`}\n                        />\n                    </div>\n                </td>\n                <td>{task.due_date}</td>\n                <td>\n                    <span\n                        className={classNames(\n                            'badge',\n                            {\n                                'badge-soft-danger': task.priority === 'High',\n                                'badge-soft-info': task.priority === 'Medium',\n                                'badge-soft-success': task.priority === 'Low',\n                            },\n                            'p-1'\n                        )}\n                    >\n                        {task.priority}\n                    </span>\n                </td>\n                <td>\n                    <ul className=\"list-inline table-action m-0\">\n                        <li className=\"list-inline-item\">\n                            <Link to=\"#\" className=\"action-icon px-1\">\n                                <i className=\"mdi mdi-square-edit-outline\"></i>\n                            </Link>\n                        </li>\n                        <li className=\"list-inline-item\">\n                            <Dropdown>\n                                <Dropdown.Toggle as=\"a\" className=\"cursor-pointer action-icon px-1\">\n                                    <i className=\"mdi mdi-dots-vertical\"></i>\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu align=\"end\">\n                                    <Dropdown.Item>Action</Dropdown.Item>\n                                    <Dropdown.Item>Another Action</Dropdown.Item>\n                                    <Dropdown.Item>Something else here</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </li>\n                    </ul>\n                </td>\n            </tr>\n        </>\n    );\n};\n\ninterface TaskSectionState {\n    title: string;\n    tasks: TaskItemTypes[];\n}\n\nconst TaskSection = ({ title, tasks }: TaskSectionState) => {\n    const [collapse, setCollapse] = useState<boolean>(true);\n    /*\n     * toggle task-dropdown\n     */\n    const toggleTask = () => setCollapse(!collapse);\n\n    return (\n        <>\n            <h5 className=\"position-relative mb-0\">\n                <Link className=\"text-dark d-block\" to=\"#\" onClick={toggleTask}>\n                    {title} Tasks <span className=\"text-muted\">({('0' + tasks.length).slice(-2)})</span>\n                    <i\n                        className={classNames(\n                            'mdi',\n                            { 'mdi-chevron-down': collapse, 'mdi-chevron-right': !collapse },\n                            'accordion-arrow'\n                        )}\n                    ></i>\n                </Link>\n            </h5>\n            <Collapse in={collapse}>\n                <div>\n                    <Table responsive borderless size=\"sm\" className=\"table-centered table-nowrap mt-3\">\n                        <thead className=\"table-light\">\n                            <tr>\n                                <th scope=\"col\">\n                                    <div className=\"form-check\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" id=\"taskupcomingCheck\" />\n                                        <label className=\"form-check-label\" htmlFor=\"taskupcomingCheck\">\n                                            Task ID\n                                        </label>\n                                    </div>\n                                </th>\n                                <th scope=\"col\">Tasks</th>\n                                <th scope=\"col\">Assign to</th>\n                                <th scope=\"col\">Due Date</th>\n                                <th scope=\"col\">Task priority</th>\n                                <th scope=\"col\" style={{ width: '85px' }}>\n                                    Action\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {(tasks || []).map((task, idx) => (\n                                <Task task={task} key={idx} />\n                            ))}\n                        </tbody>\n                    </Table>\n                </div>\n            </Collapse>\n        </>\n    );\n};\n\nexport default TaskSection;\n"]},"metadata":{},"sourceType":"module"}