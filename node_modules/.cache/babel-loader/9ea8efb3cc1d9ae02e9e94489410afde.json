{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\layouts\\\\TwoColumn\\\\MainMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Collapse } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames'; // constants\n\n// components\nimport Scrollbar from '../../components/Scrollbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MenuItemWithChildren = _ref => {\n  _s();\n\n  let {\n    item,\n    linkClassName,\n    subMenuClassNames,\n    activeMenuItems,\n    toggleMenu\n  } = _ref;\n  const [open, setOpen] = useState(activeMenuItems.includes(item.key));\n  useEffect(() => {\n    setOpen(activeMenuItems.includes(item.key));\n  }, [activeMenuItems, item]);\n\n  const toggleMenuItem = e => {\n    e.preventDefault();\n    const status = !open;\n    setOpen(status);\n    if (toggleMenu) toggleMenu(item, status);\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classNames('nav-item', {\n        'menuitem-active': open\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        onClick: toggleMenuItem,\n        \"data-menu-key\": item.key,\n        \"aria-expanded\": open,\n        className: classNames('nav-link', linkClassName, {\n          'menuitem-active': activeMenuItems.includes(item.key) ? 'active' : ''\n        }),\n        children: [!item.badge ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"menu-arrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `badge bg-${item.badge.variant} rounded-pill float-end`,\n          children: item.badge.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", item.label, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: open,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: classNames(subMenuClassNames),\n            children: (item.children || []).map((child, i) => {\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: child.children ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(MenuItemWithChildren, {\n                    item: child,\n                    linkClassName: activeMenuItems.includes(child.key) ? 'active' : '',\n                    activeMenuItems: activeMenuItems,\n                    subMenuClassNames: \"nav-second-level\",\n                    toggleMenu: toggleMenu\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                    item: child,\n                    className: activeMenuItems.includes(child.key) ? 'menuitem-active' : '',\n                    linkClassName: activeMenuItems.includes(child.key) ? 'active' : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MenuItemWithChildren, \"/hFOGls/6gLTchtGKw48B6tHgnY=\");\n\n_c = MenuItemWithChildren;\n\nconst MenuItem = _ref2 => {\n  let {\n    item,\n    className,\n    linkClassName\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classNames('nav-item', className),\n      children: /*#__PURE__*/_jsxDEV(MenuItemLink, {\n        item: item,\n        className: linkClassName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = MenuItem;\n\nconst MenuItemLink = _ref3 => {\n  let {\n    item,\n    className\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: item.url,\n    target: item.target,\n    className: classNames('nav-link-ref', 'nav-link', className),\n    \"data-menu-key\": item.key,\n    children: [item.badge && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `badge bg-${item.badge.variant} float-end`,\n      children: item.badge.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", item.label, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = MenuItemLink;\n\nconst MainMenu = _ref4 => {\n  let {\n    menuItems,\n    toggleMenu,\n    activeMenuItems\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: activeMenuItems && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-main-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"two-col-menu\",\n        className: \"h-100\",\n        children: /*#__PURE__*/_jsxDEV(Scrollbar, {\n          style: {\n            maxHeight: '100%'\n          },\n          children: (menuItems || []).map((menuItem, key) => {\n            const activeParent = activeMenuItems && activeMenuItems.length && activeMenuItems[activeMenuItems.length - 1] === menuItem['key'];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classNames('twocolumn-menu-item', {\n                'd-block': activeParent\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"title-box\",\n                children: [menuItem.isTitle && /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"menu-title\",\n                  children: menuItem.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 66\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"nav flex-column\",\n                  children: (menuItem.children || []).map((item, idx) => {\n                    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                      children: item.children ? /*#__PURE__*/_jsxDEV(MenuItemWithChildren, {\n                        item: item,\n                        toggleMenu: toggleMenu,\n                        subMenuClassNames: \"nav-second-level\",\n                        activeMenuItems: activeMenuItems,\n                        linkClassName: \"side-nav-link\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 65\n                      }, this) : /*#__PURE__*/_jsxDEV(MenuItem, {\n                        item: item,\n                        linkClassName: \"side-nav-link\",\n                        className: activeMenuItems.includes(item.key) ? 'menuitem-active' : ''\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 161,\n                        columnNumber: 65\n                      }, this)\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 57\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 41\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_c4 = MainMenu;\nexport default MainMenu;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MenuItemWithChildren\");\n$RefreshReg$(_c2, \"MenuItem\");\n$RefreshReg$(_c3, \"MenuItemLink\");\n$RefreshReg$(_c4, \"MainMenu\");","map":{"version":3,"sources":["C:/proyecto/practica/src/layouts/TwoColumn/MainMenu.tsx"],"names":["React","useEffect","useState","Collapse","Link","classNames","Scrollbar","MenuItemWithChildren","item","linkClassName","subMenuClassNames","activeMenuItems","toggleMenu","open","setOpen","includes","key","toggleMenuItem","e","preventDefault","status","badge","variant","text","label","children","map","child","i","MenuItem","className","MenuItemLink","url","target","MainMenu","menuItems","maxHeight","menuItem","activeParent","length","isTitle","idx"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Collapse } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// constants\nimport { MenuItemTypes } from '../../constants/menu';\n\n// components\nimport Scrollbar from '../../components/Scrollbar';\n\ninterface SubMenus {\n    item: MenuItemTypes;\n    linkClassName?: string;\n    subMenuClassNames?: string;\n    activeMenuItems?: Array<string>;\n    toggleMenu?: (item: any, status: boolean) => void;\n    className?: string;\n}\n\nconst MenuItemWithChildren = ({ item, linkClassName, subMenuClassNames, activeMenuItems, toggleMenu }: SubMenus) => {\n    const [open, setOpen] = useState<boolean>(activeMenuItems!.includes(item.key));\n\n    useEffect(() => {\n        setOpen(activeMenuItems!.includes(item.key));\n    }, [activeMenuItems, item]);\n\n    const toggleMenuItem = (e: any) => {\n        e.preventDefault();\n        const status = !open;\n        setOpen(status);\n        if (toggleMenu) toggleMenu(item, status);\n        return false;\n    };\n\n    return (\n        <>\n            <li className={classNames('nav-item', { 'menuitem-active': open })}>\n                <Link\n                    to=\"#\"\n                    onClick={toggleMenuItem}\n                    data-menu-key={item.key}\n                    aria-expanded={open}\n                    className={classNames('nav-link', linkClassName, {\n                        'menuitem-active': activeMenuItems!.includes(item.key) ? 'active' : '',\n                    })}\n                >\n                    {!item.badge ? (\n                        <span className=\"menu-arrow\"></span>\n                    ) : (\n                        <span className={`badge bg-${item.badge.variant} rounded-pill float-end`}>\n                            {item.badge.text}\n                        </span>\n                    )}\n                    <span> {item.label} </span>\n                </Link>\n                <Collapse in={open}>\n                    <div>\n                        <ul className={classNames(subMenuClassNames)}>\n                            {(item.children || []).map((child, i) => {\n                                return (\n                                    <React.Fragment key={i}>\n                                        {child.children ? (\n                                            <>\n                                                {/* parent */}\n                                                <MenuItemWithChildren\n                                                    item={child}\n                                                    linkClassName={activeMenuItems!.includes(child.key) ? 'active' : ''}\n                                                    activeMenuItems={activeMenuItems}\n                                                    subMenuClassNames=\"nav-second-level\"\n                                                    toggleMenu={toggleMenu}\n                                                />\n                                            </>\n                                        ) : (\n                                            <>\n                                                {/* child */}\n                                                <MenuItem\n                                                    item={child}\n                                                    className={\n                                                        activeMenuItems!.includes(child.key) ? 'menuitem-active' : ''\n                                                    }\n                                                    linkClassName={activeMenuItems!.includes(child.key) ? 'active' : ''}\n                                                />\n                                            </>\n                                        )}\n                                    </React.Fragment>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                </Collapse>\n            </li>\n        </>\n    );\n};\n\nconst MenuItem = ({ item, className, linkClassName }: SubMenus) => {\n    return (\n        <>\n            <li className={classNames('nav-item', className)}>\n                <MenuItemLink item={item} className={linkClassName} />\n            </li>\n        </>\n    );\n};\n\nconst MenuItemLink = ({ item, className }: SubMenus) => {\n    return (\n        <Link\n            to={item.url!}\n            target={item.target}\n            className={classNames('nav-link-ref', 'nav-link', className)}\n            data-menu-key={item.key}\n        >\n            {item.badge && <span className={`badge bg-${item.badge.variant} float-end`}>{item.badge.text}</span>}\n            <span> {item.label} </span>\n        </Link>\n    );\n};\n\ninterface MainMenuProps {\n    menuItems: MenuItemTypes[];\n    toggleMenu: (item: MenuItemTypes, show: boolean) => void;\n    activeMenuItems: string[];\n}\n\nconst MainMenu = ({ menuItems, toggleMenu, activeMenuItems }: MainMenuProps) => {\n    return (\n        <>\n            {activeMenuItems && (\n                <div className=\"sidebar-main-menu\">\n                    <div id=\"two-col-menu\" className=\"h-100\">\n                        <Scrollbar style={{ maxHeight: '100%' }}>\n                            {(menuItems || []).map((menuItem, key) => {\n                                const activeParent =\n                                    activeMenuItems &&\n                                    activeMenuItems.length &&\n                                    activeMenuItems[activeMenuItems.length - 1] === menuItem['key'];\n                                return (\n                                    <div\n                                        key={key}\n                                        className={classNames('twocolumn-menu-item', {\n                                            'd-block': activeParent,\n                                        })}\n                                    >\n                                        <div className=\"title-box\">\n                                            {menuItem.isTitle && <h5 className=\"menu-title\">{menuItem.label}</h5>}\n                                            <ul className=\"nav flex-column\">\n                                                {(menuItem.children || []).map((item, idx) => {\n                                                    return (\n                                                        <React.Fragment key={idx}>\n                                                            {item.children ? (\n                                                                <MenuItemWithChildren\n                                                                    item={item}\n                                                                    toggleMenu={toggleMenu}\n                                                                    subMenuClassNames=\"nav-second-level\"\n                                                                    activeMenuItems={activeMenuItems}\n                                                                    linkClassName=\"side-nav-link\"\n                                                                />\n                                                            ) : (\n                                                                <MenuItem\n                                                                    item={item}\n                                                                    linkClassName=\"side-nav-link\"\n                                                                    className={\n                                                                        activeMenuItems!.includes(item.key)\n                                                                            ? 'menuitem-active'\n                                                                            : ''\n                                                                    }\n                                                                />\n                                                            )}\n                                                        </React.Fragment>\n                                                    );\n                                                })}\n                                            </ul>\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </Scrollbar>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default MainMenu;\n"]},"metadata":{},"sourceType":"module"}