{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\components\\\\TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Row, Col, Card, Dropdown, Button } from 'react-bootstrap';\nimport SimpleBar from 'simplebar-react';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classNames from 'classnames'; // components\n\nimport { FormInput } from './form/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoList = _ref => {\n  _s();\n\n  let {\n    addTodo,\n    height\n  } = _ref;\n  const addTodos = addTodo ? addTodo : false; // default todo data\n\n  const [todoData, setTodoData] = useState([{\n    id: 1,\n    text: 'Design One page theme',\n    done: false\n  }, {\n    id: 2,\n    text: 'Build a js based app',\n    done: true\n  }, {\n    id: 3,\n    text: 'Creating component page',\n    done: true\n  }, {\n    id: 4,\n    text: 'Testing??',\n    done: true\n  }, {\n    id: 5,\n    text: 'Hehe!! This looks cool!',\n    done: false\n  }, {\n    id: 6,\n    text: 'Create new version 3.0',\n    done: false\n  }, {\n    id: 7,\n    text: 'Build an angular app',\n    done: true\n  }, {\n    id: 8,\n    text: 'Vue Admin & Dashboard',\n    done: false\n  }]);\n  /*\n   * form validation schema\n   */\n\n  const schemaResolver = yupResolver(yup.object().shape({\n    newTodo: yup.string().required('Please enter your task name')\n  }));\n  /*\n   * form methods\n   */\n\n  const methods = useForm({\n    resolver: schemaResolver\n  });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: {\n      errors\n    },\n    reset\n  } = methods;\n  /**\n   * Saves the todo\n   */\n\n  const saveTodo = (e, values) => {\n    const newTodo = {\n      id: todoData.length + 1,\n      text: values.target[0].value,\n      done: false\n    };\n    setTodoData([newTodo, ...todoData]);\n    reset();\n  };\n  /**\n   * Returns the remaining todos\n   */\n\n\n  const getInprogressTodos = () => {\n    return todoData.filter(item => item.done === false);\n  };\n  /**\n   * Archives the todos\n   */\n\n\n  const archiveTodos = () => {\n    setTodoData(todoData.filter(item => item.done !== true));\n  };\n  /**\n   * Toggle the status\n   * @param todoItem todo item\n   */\n\n\n  const toggleTodo = (todoItem, index) => {\n    const newTodoData = (todoData || []).map((todo, i) => {\n      return index === i ? Object.assign(todo, {\n        done: !todoItem.done\n      }) : todo;\n    });\n    setTodoData(newTodoData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          className: \"float-end\",\n          align: \"end\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            as: \"a\",\n            className: \"card-drop cursor-pointer\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-dots-vertical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: classNames('header-title', addTodos ? 'mb-3' : 'mb-2'),\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todoapp\",\n          children: addTodos ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  id: \"todo-message\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"todo-remaining\",\n                    children: getInprogressTodos().length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 45\n                  }, this), \" of\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                    id: \"todo-total\",\n                    children: todoData.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 45\n                  }, this), \" remaining\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"col-auto\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"float-end btn-sm\",\n                  variant: \"light\",\n                  id: \"btn-archive\",\n                  onClick: archiveTodos,\n                  children: \"Archive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(SimpleBar, {\n                  style: {\n                    maxHeight: height\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"list-group list-group-flush todo-list\",\n                    id: \"todo-list\",\n                    children: (todoData || []).map((todo, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"list-group-item border-0 ps-0\",\n                        children: todo.done ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"form-check mb-0\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"checkbox\",\n                            className: \"form-check-input todo-done\",\n                            id: String(todo.id),\n                            checked: todo.done,\n                            onChange: () => toggleTodo(todo, index)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 175,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"form-check-label\",\n                            htmlFor: String(todo.id),\n                            children: /*#__PURE__*/_jsxDEV(\"s\", {\n                              children: todo.text\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 186,\n                              columnNumber: 73\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 182,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 174,\n                          columnNumber: 65\n                        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"form-check mb-0\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"checkbox\",\n                            className: \"form-check-input todo-done\",\n                            id: String(todo.id),\n                            checked: todo.done,\n                            onChange: () => toggleTodo(todo, index)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 191,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"form-check-label\",\n                            htmlFor: String(todo.id),\n                            children: todo.text\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 198,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 190,\n                          columnNumber: 65\n                        }, this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 57\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  name: \"todo-form\",\n                  id: \"todo-form\",\n                  onSubmit: handleSubmit(saveTodo),\n                  className: \"mt-3\",\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(FormInput, {\n                        type: \"text\",\n                        name: \"newTodo\",\n                        className: \"form-control\",\n                        placeholder: \"Add new todo\",\n                        register: register,\n                        errors: errors,\n                        control: control\n                      }, \"newTodo\", false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      className: \"col-auto\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"submit\",\n                        className: \"btn btn-primary waves-effect waves-light\",\n                        children: \"Add\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(SimpleBar, {\n                style: {\n                  maxHeight: height\n                },\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"list-group list-group-flush todo-list\",\n                  id: \"todo-list\",\n                  children: (todoData || []).map((todo, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"list-group-item border-0 ps-0\",\n                      children: todo.done ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-check mb-0\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\",\n                          className: \"form-check-input todo-done\",\n                          id: String(todo.id),\n                          checked: todo.done,\n                          onChange: () => toggleTodo(todo, index)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 257,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-check-label\",\n                          htmlFor: String(todo.id),\n                          children: /*#__PURE__*/_jsxDEV(\"s\", {\n                            children: todo.text\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 268,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 264,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 61\n                      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-check mb-0\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\",\n                          className: \"form-check-input todo-done\",\n                          id: String(todo.id),\n                          checked: todo.done,\n                          onChange: () => toggleTodo(todo, index)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 273,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"form-check-label\",\n                          htmlFor: String(todo.id),\n                          children: todo.text\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 280,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 61\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 53\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(TodoList, \"aA5Y3rTdkvvZDpHR+ZiznsmUR4E=\", false, function () {\n  return [useForm];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/proyecto/practica/src/components/TodoList.tsx"],"names":["React","useState","useForm","Row","Col","Card","Dropdown","Button","SimpleBar","yup","yupResolver","classNames","FormInput","TodoList","addTodo","height","addTodos","todoData","setTodoData","id","text","done","schemaResolver","object","shape","newTodo","string","required","methods","resolver","handleSubmit","register","control","formState","errors","reset","saveTodo","e","values","length","target","value","getInprogressTodos","filter","item","archiveTodos","toggleTodo","todoItem","index","newTodoData","map","todo","i","Object","assign","maxHeight","String"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Row, Col, Card, Dropdown, Button } from 'react-bootstrap';\nimport SimpleBar from 'simplebar-react';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classNames from 'classnames';\n\n// components\nimport { FormInput } from './form/';\n\ninterface TodoListProps {\n    addTodo?: boolean;\n    height?: string;\n}\n\ninterface TodoDataItems {\n    id: number;\n    text: string;\n    done: boolean;\n}\n\nconst TodoList = ({ addTodo, height }: TodoListProps) => {\n    const addTodos = addTodo ? addTodo : false;\n\n    // default todo data\n    const [todoData, setTodoData] = useState<Array<TodoDataItems>>([\n        {\n            id: 1,\n            text: 'Design One page theme',\n            done: false,\n        },\n        {\n            id: 2,\n            text: 'Build a js based app',\n            done: true,\n        },\n        {\n            id: 3,\n            text: 'Creating component page',\n            done: true,\n        },\n        {\n            id: 4,\n            text: 'Testing??',\n            done: true,\n        },\n        {\n            id: 5,\n            text: 'Hehe!! This looks cool!',\n            done: false,\n        },\n        {\n            id: 6,\n            text: 'Create new version 3.0',\n            done: false,\n        },\n        {\n            id: 7,\n            text: 'Build an angular app',\n            done: true,\n        },\n        {\n            id: 8,\n            text: 'Vue Admin & Dashboard',\n            done: false,\n        },\n    ]);\n\n    /*\n     * form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            newTodo: yup.string().required('Please enter your task name'),\n        })\n    );\n\n    /*\n     * form methods\n     */\n    const methods = useForm({ resolver: schemaResolver });\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n        reset,\n    } = methods;\n\n    /**\n     * Saves the todo\n     */\n    const saveTodo = (e: any, values: any) => {\n        const newTodo = {\n            id: todoData.length + 1,\n            text: values.target[0].value,\n            done: false,\n        };\n        setTodoData([newTodo, ...todoData]);\n        reset();\n    };\n\n    /**\n     * Returns the remaining todos\n     */\n    const getInprogressTodos = () => {\n        return todoData.filter((item) => item.done === false);\n    };\n\n    /**\n     * Archives the todos\n     */\n    const archiveTodos = () => {\n        setTodoData(todoData.filter((item) => item.done !== true));\n    };\n\n    /**\n     * Toggle the status\n     * @param todoItem todo item\n     */\n    const toggleTodo = (todoItem: TodoDataItems, index: number) => {\n        const newTodoData = (todoData || []).map((todo, i) => {\n            return index === i ? Object.assign(todo, { done: !todoItem.done }) : todo;\n        });\n        setTodoData(newTodoData);\n    };\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <Dropdown className=\"float-end\" align=\"end\">\n                        <Dropdown.Toggle as=\"a\" className=\"card-drop cursor-pointer\">\n                            <i className=\"mdi mdi-dots-vertical\"></i>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item>Settings</Dropdown.Item>\n                            <Dropdown.Item>Action</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    <h4 className={classNames('header-title', addTodos ? 'mb-3' : 'mb-2')}>Todo</h4>\n\n                    <div className=\"todoapp\">\n                        {addTodos ? (\n                            <>\n                                <Row>\n                                    <Col>\n                                        <h5 id=\"todo-message\">\n                                            <span id=\"todo-remaining\">{getInprogressTodos().length}</span> of{' '}\n                                            <span id=\"todo-total\">{todoData.length}</span> remaining\n                                        </h5>\n                                    </Col>\n                                    <Col className=\"col-auto\">\n                                        <Button\n                                            className=\"float-end btn-sm\"\n                                            variant=\"light\"\n                                            id=\"btn-archive\"\n                                            onClick={archiveTodos}\n                                        >\n                                            Archive\n                                        </Button>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <SimpleBar style={{ maxHeight: height }}>\n                                            <ul className=\"list-group list-group-flush todo-list\" id=\"todo-list\">\n                                                {(todoData || []).map((todo, index) => {\n                                                    return (\n                                                        <li key={index} className=\"list-group-item border-0 ps-0\">\n                                                            {todo.done ? (\n                                                                <div className=\"form-check mb-0\">\n                                                                    <input\n                                                                        type=\"checkbox\"\n                                                                        className=\"form-check-input todo-done\"\n                                                                        id={String(todo.id)}\n                                                                        checked={todo.done}\n                                                                        onChange={() => toggleTodo(todo, index)}\n                                                                    />\n                                                                    <label\n                                                                        className=\"form-check-label\"\n                                                                        htmlFor={String(todo.id)}\n                                                                    >\n                                                                        <s>{todo.text}</s>\n                                                                    </label>\n                                                                </div>\n                                                            ) : (\n                                                                <div className=\"form-check mb-0\">\n                                                                    <input\n                                                                        type=\"checkbox\"\n                                                                        className=\"form-check-input todo-done\"\n                                                                        id={String(todo.id)}\n                                                                        checked={todo.done}\n                                                                        onChange={() => toggleTodo(todo, index)}\n                                                                    />\n                                                                    <label\n                                                                        className=\"form-check-label\"\n                                                                        htmlFor={String(todo.id)}\n                                                                    >\n                                                                        {todo.text}\n                                                                    </label>\n                                                                </div>\n                                                            )}\n                                                        </li>\n                                                    );\n                                                })}\n                                            </ul>\n                                        </SimpleBar>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <form\n                                            name=\"todo-form\"\n                                            id=\"todo-form\"\n                                            onSubmit={handleSubmit(saveTodo)}\n                                            className=\"mt-3\"\n                                        >\n                                            <Row>\n                                                <Col>\n                                                    <FormInput\n                                                        type=\"text\"\n                                                        name=\"newTodo\"\n                                                        className=\"form-control\"\n                                                        placeholder=\"Add new todo\"\n                                                        register={register}\n                                                        key=\"newTodo\"\n                                                        errors={errors}\n                                                        control={control}\n                                                    />\n                                                </Col>\n                                                <Col className=\"col-auto\">\n                                                    <button\n                                                        type=\"submit\"\n                                                        className=\"btn btn-primary waves-effect waves-light\"\n                                                    >\n                                                        Add\n                                                    </button>\n                                                </Col>\n                                            </Row>\n                                        </form>\n                                    </Col>\n                                </Row>\n                            </>\n                        ) : (\n                            <Row>\n                                <Col>\n                                    <SimpleBar style={{ maxHeight: height }}>\n                                        <ul className=\"list-group list-group-flush todo-list\" id=\"todo-list\">\n                                            {(todoData || []).map((todo, index) => {\n                                                return (\n                                                    <li key={index} className=\"list-group-item border-0 ps-0\">\n                                                        {todo.done ? (\n                                                            <div className=\"form-check mb-0\">\n                                                                <input\n                                                                    type=\"checkbox\"\n                                                                    className=\"form-check-input todo-done\"\n                                                                    id={String(todo.id)}\n                                                                    checked={todo.done}\n                                                                    onChange={() => toggleTodo(todo, index)}\n                                                                />\n                                                                <label\n                                                                    className=\"form-check-label\"\n                                                                    htmlFor={String(todo.id)}\n                                                                >\n                                                                    <s>{todo.text}</s>\n                                                                </label>\n                                                            </div>\n                                                        ) : (\n                                                            <div className=\"form-check mb-0\">\n                                                                <input\n                                                                    type=\"checkbox\"\n                                                                    className=\"form-check-input todo-done\"\n                                                                    id={String(todo.id)}\n                                                                    checked={todo.done}\n                                                                    onChange={() => toggleTodo(todo, index)}\n                                                                />\n                                                                <label\n                                                                    className=\"form-check-label\"\n                                                                    htmlFor={String(todo.id)}\n                                                                >\n                                                                    {todo.text}\n                                                                </label>\n                                                            </div>\n                                                        )}\n                                                    </li>\n                                                );\n                                            })}\n                                        </ul>\n                                    </SimpleBar>\n                                </Col>\n                            </Row>\n                        )}\n                    </div>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}