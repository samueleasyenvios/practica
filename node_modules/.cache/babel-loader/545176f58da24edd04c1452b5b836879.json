{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\layouts\\\\Menu.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Collapse } from 'react-bootstrap';\nimport classNames from 'classnames'; //helpers\n\nimport { findAllParent, findMenuItem } from '../helpers/menu'; // constants\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MenuItemWithChildren = _ref => {\n  _s();\n\n  let {\n    item,\n    linkClassName,\n    subMenuClassNames,\n    activeMenuItems,\n    toggleMenu\n  } = _ref;\n  const [open, setOpen] = useState(activeMenuItems.includes(item.key));\n  useEffect(() => {\n    setOpen(activeMenuItems.includes(item.key));\n  }, [activeMenuItems, item]);\n\n  const toggleMenuItem = e => {\n    e.preventDefault();\n    const status = !open;\n    setOpen(status);\n    if (toggleMenu) toggleMenu(item, status);\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classNames('side-nav-item', {\n      'menuitem-active': open\n    }),\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      onClick: toggleMenuItem,\n      \"data-menu-key\": item.key,\n      \"aria-expanded\": open,\n      className: classNames('has-arrow', 'side-sub-nav-link', linkClassName, {\n        'menuitem-active': activeMenuItems.includes(item.key) ? 'active' : ''\n      }),\n      children: [item.icon && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: item.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 31\n      }, this), !item.badge ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"menu-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `badge bg-${item.badge.variant} rounded-pill float-end`,\n        children: item.badge.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", item.label, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: open,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: classNames(subMenuClassNames),\n          children: (item.children || []).map((child, i) => {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: child.children ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(MenuItemWithChildren, {\n                  item: child,\n                  linkClassName: activeMenuItems.includes(child.key) ? 'active' : '',\n                  activeMenuItems: activeMenuItems,\n                  subMenuClassNames: \"side-nav-third-level\",\n                  toggleMenu: toggleMenu\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                  item: child,\n                  className: activeMenuItems.includes(child.key) ? 'menuitem-active' : '',\n                  linkClassName: activeMenuItems.includes(child.key) ? 'active' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuItemWithChildren, \"/hFOGls/6gLTchtGKw48B6tHgnY=\");\n\n_c = MenuItemWithChildren;\n\nconst MenuItem = _ref2 => {\n  let {\n    item,\n    className,\n    linkClassName\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classNames('side-nav-item', className),\n    children: /*#__PURE__*/_jsxDEV(MenuItemLink, {\n      item: item,\n      className: linkClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = MenuItem;\n\nconst MenuItemLink = _ref3 => {\n  let {\n    item,\n    className\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: item.url,\n    target: item.target,\n    className: classNames('side-nav-link-ref', 'side-sub-nav-link', className),\n    \"data-menu-key\": item.key,\n    children: [item.icon && /*#__PURE__*/_jsxDEV(\"i\", {\n      className: item.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 27\n    }, this), item.badge && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `badge bg-${item.badge.variant} float-end`,\n      children: item.badge.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", item.label, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n/**\n * Renders the application menu\n */\n\n\n_c3 = MenuItemLink;\n\nconst AppMenu = _ref4 => {\n  _s2();\n\n  let {\n    menuItems\n  } = _ref4;\n  let location = useLocation();\n  const menuRef = useRef(null);\n  const [activeMenuItems, setActiveMenuItems] = useState([]);\n  /*\n   * toggle the menus\n   */\n\n  const toggleMenu = (menuItem, show) => {\n    if (show) setActiveMenuItems([menuItem['key'], ...findAllParent(menuItems, menuItem)]);\n  };\n  /**\n   * activate the menuitems\n   */\n\n\n  const activeMenu = useCallback(() => {\n    const div = document.getElementById('side-menu');\n    let matchingMenuItem = null;\n\n    if (div) {\n      let items = div.getElementsByClassName('side-nav-link-ref');\n\n      for (let i = 0; i < items.length; ++i) {\n        if (location.pathname === items[i].pathname) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n\n      if (matchingMenuItem) {\n        const mid = matchingMenuItem.getAttribute('data-menu-key');\n        const activeMt = findMenuItem(menuItems, mid);\n\n        if (activeMt) {\n          setActiveMenuItems([activeMt['key'], ...findAllParent(menuItems, activeMt)]);\n        }\n      }\n    }\n  }, [location, menuItems]);\n  useEffect(() => {\n    activeMenu();\n  }, [activeMenu]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"side-menu\",\n      ref: menuRef,\n      id: \"side-menu\",\n      children: (menuItems || []).map((item, idx) => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: item.isTitle ? /*#__PURE__*/_jsxDEV(\"li\", {\n            className: classNames('menu-title', {\n              'mt-2': idx !== 0\n            }),\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: item.children ? /*#__PURE__*/_jsxDEV(MenuItemWithChildren, {\n              item: item,\n              toggleMenu: toggleMenu,\n              subMenuClassNames: \"nav-second-level\",\n              activeMenuItems: activeMenuItems,\n              linkClassName: \"side-nav-link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(MenuItem, {\n              item: item,\n              linkClassName: \"side-nav-link\",\n              className: activeMenuItems.includes(item.key) ? 'menuitem-active' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 41\n            }, this)\n          }, void 0, false)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(AppMenu, \"0DmFIDKBV2E/GVB4qYREvbLHDmk=\", false, function () {\n  return [useLocation];\n});\n\n_c4 = AppMenu;\nexport default AppMenu;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MenuItemWithChildren\");\n$RefreshReg$(_c2, \"MenuItem\");\n$RefreshReg$(_c3, \"MenuItemLink\");\n$RefreshReg$(_c4, \"AppMenu\");","map":{"version":3,"sources":["C:/proyecto/practica/src/layouts/Menu.tsx"],"names":["React","useEffect","useRef","useState","useCallback","Link","useLocation","Collapse","classNames","findAllParent","findMenuItem","MenuItemWithChildren","item","linkClassName","subMenuClassNames","activeMenuItems","toggleMenu","open","setOpen","includes","key","toggleMenuItem","e","preventDefault","status","icon","badge","variant","text","label","children","map","child","i","MenuItem","className","MenuItemLink","url","target","AppMenu","menuItems","location","menuRef","setActiveMenuItems","menuItem","show","activeMenu","div","document","getElementById","matchingMenuItem","items","getElementsByClassName","length","pathname","mid","getAttribute","activeMt","idx","isTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Collapse } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n//helpers\nimport { findAllParent, findMenuItem } from '../helpers/menu';\n\n// constants\nimport { MenuItemTypes } from '../constants/menu';\n\ninterface SubMenus {\n    item: MenuItemTypes;\n    linkClassName?: string;\n    subMenuClassNames?: string;\n    activeMenuItems?: Array<string>;\n    toggleMenu?: (item: any, status: boolean) => void;\n    className?: string;\n}\n\nconst MenuItemWithChildren = ({ item, linkClassName, subMenuClassNames, activeMenuItems, toggleMenu }: SubMenus) => {\n    const [open, setOpen] = useState<boolean>(activeMenuItems!.includes(item.key));\n\n    useEffect(() => {\n        setOpen(activeMenuItems!.includes(item.key));\n    }, [activeMenuItems, item]);\n\n    const toggleMenuItem = (e: any) => {\n        e.preventDefault();\n        const status = !open;\n        setOpen(status);\n        if (toggleMenu) toggleMenu(item, status);\n        return false;\n    };\n\n    return (\n        <li className={classNames('side-nav-item', { 'menuitem-active': open })}>\n            <Link\n                to=\"#\"\n                onClick={toggleMenuItem}\n                data-menu-key={item.key}\n                aria-expanded={open}\n                className={classNames('has-arrow', 'side-sub-nav-link', linkClassName, {\n                    'menuitem-active': activeMenuItems!.includes(item.key) ? 'active' : '',\n                })}\n            >\n                {item.icon && <i className={item.icon} />}\n                {!item.badge ? (\n                    <span className=\"menu-arrow\"></span>\n                ) : (\n                    <span className={`badge bg-${item.badge.variant} rounded-pill float-end`}>{item.badge.text}</span>\n                )}\n                <span> {item.label} </span>\n            </Link>\n            <Collapse in={open}>\n                <div>\n                    <ul className={classNames(subMenuClassNames)}>\n                        {(item.children || []).map((child, i) => {\n                            return (\n                                <React.Fragment key={i}>\n                                    {child.children ? (\n                                        <>\n                                            {/* parent */}\n                                            <MenuItemWithChildren\n                                                item={child}\n                                                linkClassName={activeMenuItems!.includes(child.key) ? 'active' : ''}\n                                                activeMenuItems={activeMenuItems}\n                                                subMenuClassNames=\"side-nav-third-level\"\n                                                toggleMenu={toggleMenu}\n                                            />\n                                        </>\n                                    ) : (\n                                        <>\n                                            {/* child */}\n                                            <MenuItem\n                                                item={child}\n                                                className={\n                                                    activeMenuItems!.includes(child.key) ? 'menuitem-active' : ''\n                                                }\n                                                linkClassName={activeMenuItems!.includes(child.key) ? 'active' : ''}\n                                            />\n                                        </>\n                                    )}\n                                </React.Fragment>\n                            );\n                        })}\n                    </ul>\n                </div>\n            </Collapse>\n        </li>\n    );\n};\n\nconst MenuItem = ({ item, className, linkClassName }: SubMenus) => {\n    return (\n        <li className={classNames('side-nav-item', className)}>\n            <MenuItemLink item={item} className={linkClassName} />\n        </li>\n    );\n};\n\nconst MenuItemLink = ({ item, className }: SubMenus) => {\n    return (\n        <Link\n            to={item.url!}\n            target={item.target}\n            className={classNames('side-nav-link-ref', 'side-sub-nav-link', className)}\n            data-menu-key={item.key}\n        >\n            {item.icon && <i className={item.icon} />}\n            {item.badge && <span className={`badge bg-${item.badge.variant} float-end`}>{item.badge.text}</span>}\n            <span> {item.label} </span>\n        </Link>\n    );\n};\n\n/**\n * Renders the application menu\n */\ninterface AppMenuProps {\n    menuItems: MenuItemTypes[];\n}\n\nconst AppMenu = ({ menuItems }: AppMenuProps) => {\n    let location = useLocation();\n\n    const menuRef: any = useRef(null);\n\n    const [activeMenuItems, setActiveMenuItems] = useState<Array<string>>([]);\n\n    /*\n     * toggle the menus\n     */\n    const toggleMenu = (menuItem: MenuItemTypes, show: boolean) => {\n        if (show) setActiveMenuItems([menuItem['key'], ...findAllParent(menuItems, menuItem)]);\n    };\n\n    /**\n     * activate the menuitems\n     */\n    const activeMenu = useCallback(() => {\n        const div = document.getElementById('side-menu');\n        let matchingMenuItem = null;\n\n        if (div) {\n            let items: any = div.getElementsByClassName('side-nav-link-ref');\n            for (let i = 0; i < items.length; ++i) {\n                if (location.pathname === items[i].pathname) {\n                    matchingMenuItem = items[i];\n                    break;\n                }\n            }\n\n            if (matchingMenuItem) {\n                const mid = matchingMenuItem.getAttribute('data-menu-key');\n                const activeMt = findMenuItem(menuItems, mid);\n                if (activeMt) {\n                    setActiveMenuItems([activeMt['key'], ...findAllParent(menuItems, activeMt)]);\n                }\n            }\n        }\n    }, [location, menuItems]);\n\n    useEffect(() => {\n        activeMenu();\n    }, [activeMenu]);\n\n    return (\n        <>\n            <ul className=\"side-menu\" ref={menuRef} id=\"side-menu\">\n                {(menuItems || []).map((item, idx) => {\n                    return (\n                        <React.Fragment key={idx}>\n                            {item.isTitle ? (\n                                <li\n                                    className={classNames('menu-title', {\n                                        'mt-2': idx !== 0,\n                                    })}\n                                >\n                                    {item.label}\n                                </li>\n                            ) : (\n                                <>\n                                    {item.children ? (\n                                        <MenuItemWithChildren\n                                            item={item}\n                                            toggleMenu={toggleMenu}\n                                            subMenuClassNames=\"nav-second-level\"\n                                            activeMenuItems={activeMenuItems}\n                                            linkClassName=\"side-nav-link\"\n                                        />\n                                    ) : (\n                                        <MenuItem\n                                            item={item}\n                                            linkClassName=\"side-nav-link\"\n                                            className={activeMenuItems!.includes(item.key) ? 'menuitem-active' : ''}\n                                        />\n                                    )}\n                                </>\n                            )}\n                        </React.Fragment>\n                    );\n                })}\n            </ul>\n        </>\n    );\n};\n\nexport default AppMenu;\n"]},"metadata":{},"sourceType":"module"}