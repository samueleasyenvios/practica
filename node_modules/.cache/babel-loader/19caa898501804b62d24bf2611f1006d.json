{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\components\\\\ThemeCustomizer\\\\LeftSideBarType.tsx\";\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LeftSideBarType = _ref => {\n  let {\n    changeLeftSiderbarType,\n    leftSideBarType,\n    layoutConstants\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"fw-medium font-14 mt-4 mb-2 pb-1\",\n      children: \"Left Sidebar Size\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n      className: \"form-check form-switch mb-1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Check.Input, {\n        type: \"radio\",\n        name: \"leftsidebar-size\",\n        id: \"default-check\",\n        value: layoutConstants.LEFT_SIDEBAR_TYPE_DEFAULT,\n        onChange: e => changeLeftSiderbarType(e.target.value),\n        checked: leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_DEFAULT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check.Label, {\n        htmlFor: \"default-check\",\n        children: \"Default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n      className: \"form-check form-switch mb-1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Check.Input, {\n        type: \"radio\",\n        name: \"leftsidebar-size\",\n        id: \"condensed-check\",\n        value: layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED,\n        onChange: e => changeLeftSiderbarType(e.target.value),\n        checked: leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check.Label, {\n        htmlFor: \"condensed-check\",\n        children: [\"Condensed \", /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"(Extra Small size)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n      className: \"form-check form-switch mb-1\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Check.Input, {\n        type: \"radio\",\n        name: \"leftsidebar-size\",\n        id: \"compact-check\",\n        value: layoutConstants.LEFT_SIDEBAR_TYPE_COMPACT,\n        onChange: e => changeLeftSiderbarType(e.target.value),\n        checked: leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_COMPACT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check.Label, {\n        htmlFor: \"compact-check\",\n        children: [\"Compact \", /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"(Small size)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = LeftSideBarType;\nexport default LeftSideBarType;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftSideBarType\");","map":{"version":3,"sources":["C:/proyecto/practica/src/components/ThemeCustomizer/LeftSideBarType.tsx"],"names":["React","Form","LeftSideBarType","changeLeftSiderbarType","leftSideBarType","layoutConstants","LEFT_SIDEBAR_TYPE_DEFAULT","e","target","value","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_COMPACT"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;;AASA,MAAMC,eAAe,GAAG,QAAwF;AAAA,MAAvF;AAAEC,IAAAA,sBAAF;AAA0BC,IAAAA,eAA1B;AAA2CC,IAAAA;AAA3C,GAAuF;AAC5G,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,6BAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN,CAAY,KAAZ;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,kBAFT;AAGI,QAAA,EAAE,EAAC,eAHP;AAII,QAAA,KAAK,EAAEA,eAAe,CAACC,yBAJ3B;AAKI,QAAA,QAAQ,EAAGC,CAAD,IAAOJ,sBAAsB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAL3C;AAMI,QAAA,OAAO,EAAEL,eAAe,KAAKC,eAAe,CAACC;AANjD;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,IAAD,CAAM,KAAN,CAAY,KAAZ;AAAkB,QAAA,OAAO,EAAC,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAeI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,6BAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN,CAAY,KAAZ;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,kBAFT;AAGI,QAAA,EAAE,EAAC,iBAHP;AAII,QAAA,KAAK,EAAED,eAAe,CAACK,2BAJ3B;AAKI,QAAA,QAAQ,EAAGH,CAAD,IAAOJ,sBAAsB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAL3C;AAMI,QAAA,OAAO,EAAEL,eAAe,KAAKC,eAAe,CAACK;AANjD;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,IAAD,CAAM,KAAN,CAAY,KAAZ;AAAkB,QAAA,OAAO,EAAC,iBAA1B;AAAA,8CACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADd;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,eA6BI,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,6BAAtB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN,CAAY,KAAZ;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,kBAFT;AAGI,QAAA,EAAE,EAAC,eAHP;AAII,QAAA,KAAK,EAAEL,eAAe,CAACM,yBAJ3B;AAKI,QAAA,QAAQ,EAAGJ,CAAD,IAAOJ,sBAAsB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAL3C;AAMI,QAAA,OAAO,EAAEL,eAAe,KAAKC,eAAe,CAACM;AANjD;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,IAAD,CAAM,KAAN,CAAY,KAAZ;AAAkB,QAAA,OAAO,EAAC,eAA1B;AAAA,4CACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADZ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BJ;AAAA,kBADJ;AA6CH,CA9CD;;KAAMT,e;AAgDN,eAAeA,eAAf","sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ninterface LeftSideBarTypeProps {\n    changeLeftSiderbarType: (value: any) => void;\n    leftSideBarType: string;\n    layoutConstants: typeof layoutConstants.SideBarTypes;\n}\n\nconst LeftSideBarType = ({ changeLeftSiderbarType, leftSideBarType, layoutConstants }: LeftSideBarTypeProps) => {\n    return (\n        <>\n            <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Left Sidebar Size</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"leftsidebar-size\"\n                    id=\"default-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_TYPE_DEFAULT}\n                    onChange={(e) => changeLeftSiderbarType(e.target.value)}\n                    checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_DEFAULT}\n                />\n                <Form.Check.Label htmlFor=\"default-check\">Default</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"leftsidebar-size\"\n                    id=\"condensed-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED}\n                    onChange={(e) => changeLeftSiderbarType(e.target.value)}\n                    checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED}\n                />\n                <Form.Check.Label htmlFor=\"condensed-check\">\n                    Condensed <small>(Extra Small size)</small>\n                </Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"leftsidebar-size\"\n                    id=\"compact-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_TYPE_COMPACT}\n                    onChange={(e) => changeLeftSiderbarType(e.target.value)}\n                    checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_COMPACT}\n                />\n                <Form.Check.Label htmlFor=\"compact-check\">\n                    Compact <small>(Small size)</small>\n                </Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LeftSideBarType;\n"]},"metadata":{},"sourceType":"module"}