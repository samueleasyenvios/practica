{"ast":null,"code":"import warning from 'warning';\nvar warned = {};\n/**\n * Copied from: https://github.com/ReactTraining/react-router/blob/master/modules/routerWarning.js\n */\n\nexport default function warn(falseToWarn, message) {\n  // Only issue deprecation warnings once.\n  if (!falseToWarn && message.indexOf('deprecated') !== -1) {\n    if (warned[message]) {\n      return;\n    }\n\n    warned[message] = true;\n  }\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  warning.apply(void 0, [falseToWarn, \"[react-bootstrap-typeahead] \".concat(message)].concat(args));\n}\nexport function resetWarned() {\n  warned = {};\n}","map":{"version":3,"sources":["C:/proyecto/practica/node_modules/react-bootstrap-typeahead/es/utils/warn.js"],"names":["warning","warned","warn","falseToWarn","message","indexOf","_len","arguments","length","args","Array","_key","apply","concat","resetWarned"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,IAAIC,MAAM,GAAG,EAAb;AACA;AACA;AACA;;AAEA,eAAe,SAASC,IAAT,CAAcC,WAAd,EAA2BC,OAA3B,EAAoC;AACjD;AACA,MAAI,CAACD,WAAD,IAAgBC,OAAO,CAACC,OAAR,CAAgB,YAAhB,MAAkC,CAAC,CAAvD,EAA0D;AACxD,QAAIJ,MAAM,CAACG,OAAD,CAAV,EAAqB;AACnB;AACD;;AAEDH,IAAAA,MAAM,CAACG,OAAD,CAAN,GAAkB,IAAlB;AACD;;AAED,OAAK,IAAIE,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEK,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGL,IAA9F,EAAoGK,IAAI,EAAxG,EAA4G;AAC1GF,IAAAA,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBJ,SAAS,CAACI,IAAD,CAA1B;AACD;;AAEDX,EAAAA,OAAO,CAACY,KAAR,CAAc,KAAK,CAAnB,EAAsB,CAACT,WAAD,EAAc,+BAA+BU,MAA/B,CAAsCT,OAAtC,CAAd,EAA8DS,MAA9D,CAAqEJ,IAArE,CAAtB;AACD;AACD,OAAO,SAASK,WAAT,GAAuB;AAC5Bb,EAAAA,MAAM,GAAG,EAAT;AACD","sourcesContent":["import warning from 'warning';\nvar warned = {};\n/**\n * Copied from: https://github.com/ReactTraining/react-router/blob/master/modules/routerWarning.js\n */\n\nexport default function warn(falseToWarn, message) {\n  // Only issue deprecation warnings once.\n  if (!falseToWarn && message.indexOf('deprecated') !== -1) {\n    if (warned[message]) {\n      return;\n    }\n\n    warned[message] = true;\n  }\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  warning.apply(void 0, [falseToWarn, \"[react-bootstrap-typeahead] \".concat(message)].concat(args));\n}\nexport function resetWarned() {\n  warned = {};\n}"]},"metadata":{},"sourceType":"module"}