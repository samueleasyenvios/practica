{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\pages\\\\apps\\\\Calendar\\\\AddEditEvent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Modal, Row, Col, Button } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// components\nimport { FormInput } from '../../../components/form/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddEditEvent = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    isEditable,\n    eventData,\n    onRemoveEvent,\n    onUpdateEvent,\n    onAddEvent\n  } = _ref;\n  // event state\n  const [event] = useState(eventData);\n  /*\n   * form validation schema\n   */\n\n  const schemaResolver = yupResolver(yup.object().shape({\n    title: yup.string().required('Please enter event name'),\n    category: yup.string().required('Please select category')\n  }));\n  /*\n   * form methods\n   */\n\n  const methods = useForm({\n    defaultValues: {\n      title: event.title,\n      category: event.className ? String(event.className) : 'bg-danger'\n    },\n    resolver: schemaResolver\n  });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: {\n      errors\n    }\n  } = methods;\n  /*\n   * handle form submission\n   */\n\n  const onSubmitEvent = data => {\n    isEditable ? onUpdateEvent(data) : onAddEvent(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: isOpen,\n    onHide: onClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      className: \"py-3 px-4 border-bottom-0\",\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        as: \"h5\",\n        id: \"modal-title\",\n        children: isEditable ? 'Edit Event' : 'Add New Event'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"px-4 pb-4 pt-0\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        name: \"chat-form\",\n        id: \"chat-form\",\n        onSubmit: handleSubmit(onSubmitEvent),\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"text\",\n              label: \"Event Name\",\n              name: \"title\",\n              className: \"form-control\",\n              placeholder: \"Insert Event Name\",\n              containerClass: 'mb-3',\n              register: register,\n              errors: errors,\n              control: control\n            }, \"title\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"select\",\n              label: \"Category\",\n              name: \"category\",\n              containerClass: 'mb-3',\n              register: register,\n              errors: errors,\n              control: control,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"bg-danger\",\n                children: \"Danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"bg-success\",\n                children: \"Success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"bg-primary\",\n                children: \"Primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"bg-info\",\n                children: \"Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"bg-dark\",\n                children: \"Dark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"bg-warning\",\n                children: \"Warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)]\n            }, \"category\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 4,\n            children: isEditable ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: onRemoveEvent,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 8,\n            className: \"text-end\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-light me-1\",\n              onClick: onClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              type: \"submit\",\n              className: \"btn btn-success\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddEditEvent, \"rRG/uHed9+nOxyLknE0wERUu6jE=\", false, function () {\n  return [useForm];\n});\n\n_c = AddEditEvent;\nexport default AddEditEvent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditEvent\");","map":{"version":3,"sources":["C:/proyecto/practica/src/pages/apps/Calendar/AddEditEvent.tsx"],"names":["React","useState","useForm","Modal","Row","Col","Button","yup","yupResolver","FormInput","AddEditEvent","isOpen","onClose","isEditable","eventData","onRemoveEvent","onUpdateEvent","onAddEvent","event","schemaResolver","object","shape","title","string","required","category","methods","defaultValues","className","String","resolver","handleSubmit","register","control","formState","errors","onSubmitEvent","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Modal, Row, Col, Button } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { EventInput } from '@fullcalendar/core';\n\n// components\nimport { FormInput } from '../../../components/form/';\n\ninterface FormValues {\n    title: string;\n    category: string;\n}\n\ninterface AddEditEventProps {\n    isOpen?: boolean;\n    onClose?: () => void;\n    isEditable?: boolean;\n    eventData: EventInput;\n    onRemoveEvent?: () => void;\n    onUpdateEvent: (value: any) => void;\n    onAddEvent: (value: any) => void;\n}\n\nconst AddEditEvent = ({\n    isOpen,\n    onClose,\n    isEditable,\n    eventData,\n    onRemoveEvent,\n    onUpdateEvent,\n    onAddEvent,\n}: AddEditEventProps) => {\n    // event state\n    const [event] = useState<EventInput>(eventData!);\n\n    /*\n     * form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            title: yup.string().required('Please enter event name'),\n            category: yup.string().required('Please select category'),\n        })\n    );\n\n    /*\n     * form methods\n     */\n    const methods = useForm<FormValues>({\n        defaultValues: { title: event.title, category: event.className ? String(event.className) : 'bg-danger' },\n        resolver: schemaResolver,\n    });\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    /*\n     * handle form submission\n     */\n    const onSubmitEvent = (data: { title: string; category: string }) => {\n        isEditable ? onUpdateEvent(data) : onAddEvent(data);\n    };\n\n    return (\n        <Modal show={isOpen} onHide={onClose}>\n            <Modal.Header className=\"py-3 px-4 border-bottom-0\" closeButton>\n                <Modal.Title as=\"h5\" id=\"modal-title\">\n                    {isEditable ? 'Edit Event' : 'Add New Event'}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"px-4 pb-4 pt-0\">\n                <form noValidate name=\"chat-form\" id=\"chat-form\" onSubmit={handleSubmit(onSubmitEvent)}>\n                    <Row>\n                        <Col sm={12}>\n                            <FormInput\n                                type=\"text\"\n                                label=\"Event Name\"\n                                name=\"title\"\n                                className=\"form-control\"\n                                placeholder=\"Insert Event Name\"\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"title\"\n                                errors={errors}\n                                control={control}\n                            />\n                        </Col>\n                        <Col sm={12}>\n                            <FormInput\n                                type=\"select\"\n                                label=\"Category\"\n                                name=\"category\"\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"category\"\n                                errors={errors}\n                                control={control}\n                            >\n                                <option value=\"bg-danger\">Danger</option>\n                                <option value=\"bg-success\">Success</option>\n                                <option value=\"bg-primary\">Primary</option>\n                                <option value=\"bg-info\">Info</option>\n                                <option value=\"bg-dark\">Dark</option>\n                                <option value=\"bg-warning\">Warning</option>\n                            </FormInput>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"mt-2\">\n                        <Col xs={4}>\n                            {isEditable ? (\n                                <Button variant=\"danger\" onClick={onRemoveEvent}>\n                                    Delete\n                                </Button>\n                            ) : null}\n                        </Col>\n                        <Col xs={8} className=\"text-end\">\n                            <Button className=\"btn btn-light me-1\" onClick={onClose}>\n                                Close\n                            </Button>\n                            <Button variant=\"success\" type=\"submit\" className=\"btn btn-success\">\n                                Save\n                            </Button>\n                        </Col>\n                    </Row>\n                </form>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nexport default AddEditEvent;\n"]},"metadata":{},"sourceType":"module"}