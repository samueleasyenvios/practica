{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\pages\\\\apps\\\\Tasks\\\\Board\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Dropdown } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classNames from 'classnames';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'; // components\n\nimport PageTitle from '../../../../components/PageTitle';\nimport TaskItem from './Task';\nimport AddNewTask from './AddNewTask'; // dummy data\n\nimport { tasks } from './data'; // images\n\nimport defaultAvatar from '../../../../assets/images/users/avatar-1.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n// kanban\nconst Kanban = () => {\n  _s();\n\n  const [state, setState] = useState({\n    upcomingTasks: tasks.filter(t => t.status === 'Upcoming'),\n    inprogressTasks: tasks.filter(t => t.status === 'Inprogress'),\n    completedTasks: tasks.filter(t => t.status === 'Completed')\n  });\n  const [totalTasks, setTotalTasks] = useState(tasks.length);\n  const [newTaskModal, setNewTaskModal] = useState(false);\n  const [newTaskDetails, setNewTaskDetails] = useState(null);\n  /**\n   * Creates new empty task with given status\n   * @param status\n   * @param queue\n   */\n\n  const newTask = (status, queue) => {\n    setNewTaskDetails({\n      dueDate: new Date(),\n      userAvatar: [defaultAvatar],\n      status: status,\n      queue: queue\n    });\n    setNewTaskModal(true);\n  }; // a little function to help us with reordering the result\n\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n  /**\n   * Moves an item from one list to another list.\n   */\n\n\n  const move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return result;\n  };\n  /**\n   * Gets the list\n   */\n\n\n  const getList = id => {\n    const modifiedState = { ...state\n    };\n    const stateTasks = modifiedState[id] && modifiedState[id];\n    return stateTasks;\n  };\n  /**\n   * On drag end\n   */\n\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result; // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const items = reorder(getList(source.droppableId), source.index, destination.index);\n      let localState = { ...state\n      };\n      localState[source.droppableId] = items;\n      setState(localState);\n    } else {\n      const result = move(getList(source.droppableId), getList(destination.droppableId), source, destination);\n      const localState = { ...state,\n        ...result\n      };\n      setState(localState);\n    }\n  };\n  /*\n   * Form validation schema\n   */\n\n\n  const schemaResolver = yupResolver(yup.object().shape({\n    title: yup.string().required(),\n    priority: yup.string().required(),\n    description: yup.string().required()\n  }));\n  /*\n   * Form methods\n   */\n\n  const methods = useForm({\n    resolver: schemaResolver\n  });\n  const {\n    reset\n  } = methods;\n  /**\n   * Toggles the new task modal\n   */\n\n  const toggleNewTaskModal = () => {\n    setNewTaskModal(prevstate => !prevstate);\n  };\n  /**\n   * When date changes\n   * @param {} date\n   */\n\n\n  const handleDateChange = date => {\n    if (newTaskDetails) {\n      setNewTaskDetails({ ...newTaskDetails,\n        dueDate: date\n      });\n    }\n  };\n  /**\n   * Handles the new task form submission\n   */\n\n\n  const handleNewTask = values => {\n    const formData = {\n      title: values['title'],\n      priority: values['priority'],\n      description: values['description']\n    };\n    const newTask = { ...newTaskDetails,\n      ...formData,\n      id: totalTasks + 1,\n      dueDate: newTaskDetails.dueDate.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      })\n    };\n    let modifiedState = { ...state\n    };\n    let tasks = [...getList(newTaskDetails.queue), newTask];\n    modifiedState[newTaskDetails.queue] = [...tasks];\n    setState(modifiedState);\n    setNewTaskModal(false);\n    setTotalTasks(totalTasks + 1); // reset the form after submission\n\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      breadCrumbItems: [{\n        label: 'Tasks',\n        path: 'apps/tasks/kanban'\n      }, {\n        label: 'Kanban Board',\n        path: 'apps/tasks/kanban',\n        active: true\n      }],\n      title: 'Kanban Board'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"upcomingTasks\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            ref: provided.innerRef,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n                  className: \"float-end\",\n                  align: \"end\",\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                    as: \"a\",\n                    className: \"cursor-pointer\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-dots-vertical m-0 text-muted h3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                    children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Add Members\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Add Due Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"header-title\",\n                  children: \"Upcoming\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"sub-header\",\n                  children: \"Your awesome text goes here. Your awesome text goes here.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 41\n                }, this), state.upcomingTasks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-center text-muted pt-2 mb-0\",\n                  children: \"No Tasks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"sortable-list tasklist list-unstyled\",\n                  id: \"upcoming\",\n                  children: [(state.upcomingTasks || []).map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: item.id + '',\n                    index: index,\n                    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: classNames('task-' + item.priority),\n                      children: /*#__PURE__*/_jsxDEV(TaskItem, {\n                        task: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 57\n                    }, this)\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 49\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-grid\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"#\",\n                    className: \"btn btn-primary mt-3 waves-effect waves-light\",\n                    onClick: () => newTask('Pending', 'upcomingTasks'),\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-plus-circle\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 49\n                    }, this), \" Add New\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"inprogressTasks\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            ref: provided.innerRef,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n                  className: \"float-end\",\n                  align: \"end\",\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                    as: \"a\",\n                    className: \"cursor-pointer\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-dots-vertical m-0 text-muted h3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                    children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Add Members\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Add Due Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"header-title\",\n                  children: \"In Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"sub-header\",\n                  children: \"Your awesome text goes here.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 41\n                }, this), state.inprogressTasks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-center text-muted pt-2 mb-0\",\n                  children: \"No Tasks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"sortable-list tasklist list-unstyled\",\n                  id: \"inprogress\",\n                  children: [(state.inprogressTasks || []).map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: item.id + '',\n                    index: index,\n                    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: classNames('task-' + item.priority),\n                      children: /*#__PURE__*/_jsxDEV(TaskItem, {\n                        task: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 57\n                    }, this)\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 49\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-grid\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"#\",\n                    className: \"btn btn-primary mt-3 waves-effect waves-light\",\n                    onClick: () => newTask('Inprogress', 'inprogressTasks'),\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-plus-circle\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 49\n                    }, this), \" Add New\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"completedTasks\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            ref: provided.innerRef,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n                  className: \"float-end\",\n                  align: \"end\",\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                    as: \"a\",\n                    className: \"cursor-pointer\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-dots-vertical m-0 text-muted h3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                    children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Add Members\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                      children: \"Add Due Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"header-title\",\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"sub-header\",\n                  children: \"Your awesome text goes here. Your awesome text goes here.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 41\n                }, this), state.completedTasks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-center text-muted pt-2 mb-0\",\n                  children: \"No Tasks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"sortable-list tasklist list-unstyled\",\n                  id: \"done\",\n                  children: [(state.completedTasks || []).map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: item.id + '',\n                    index: index,\n                    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: classNames('task-' + item.priority),\n                      children: /*#__PURE__*/_jsxDEV(TaskItem, {\n                        task: item\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 343,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 57\n                    }, this)\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 49\n                  }, this)), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-grid\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"#\",\n                    className: \"btn btn-primary mt-3 waves-effect waves-light\",\n                    onClick: () => newTask('Done', 'completedTasks'),\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-plus-circle\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 49\n                    }, this), \" Add New\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), newTaskDetails && /*#__PURE__*/_jsxDEV(AddNewTask, {\n      methods: methods,\n      newTaskDetails: newTaskDetails,\n      newTaskModal: newTaskModal,\n      toggleNewTaskModal: toggleNewTaskModal,\n      handleNewTask: handleNewTask,\n      handleDateChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Kanban, \"n81cVFYG+Ibp5nz6AleWzm1KORU=\", false, function () {\n  return [useForm];\n});\n\n_c = Kanban;\nexport default Kanban;\n\nvar _c;\n\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"sources":["C:/proyecto/practica/src/pages/apps/Tasks/Board/index.tsx"],"names":["React","useState","Link","Row","Col","Card","Dropdown","useForm","yup","yupResolver","classNames","DragDropContext","Droppable","Draggable","PageTitle","TaskItem","AddNewTask","tasks","defaultAvatar","Kanban","state","setState","upcomingTasks","filter","t","status","inprogressTasks","completedTasks","totalTasks","setTotalTasks","length","newTaskModal","setNewTaskModal","newTaskDetails","setNewTaskDetails","newTask","queue","dueDate","Date","userAvatar","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","getList","id","modifiedState","stateTasks","onDragEnd","items","localState","schemaResolver","object","shape","title","string","required","priority","description","methods","resolver","reset","toggleNewTaskModal","prevstate","handleDateChange","date","handleNewTask","values","formData","toLocaleDateString","year","month","day","label","path","active","provided","snapshot","innerRef","map","item","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Dropdown } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classNames from 'classnames';\n\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\n\n// components\nimport PageTitle from '../../../../components/PageTitle';\n\nimport TaskItem from './Task';\nimport AddNewTask from './AddNewTask';\n\n// dummy data\nimport { tasks, TaskTypes } from './data';\n\n// images\nimport defaultAvatar from '../../../../assets/images/users/avatar-1.jpg';\n\ninterface StateType {\n    upcomingTasks: TaskTypes[];\n    inprogressTasks: TaskTypes[];\n    completedTasks: TaskTypes[];\n}\n\n// kanban\nconst Kanban = () => {\n    const [state, setState] = useState<StateType>({\n        upcomingTasks: tasks.filter((t) => t.status === 'Upcoming'),\n        inprogressTasks: tasks.filter((t) => t.status === 'Inprogress'),\n        completedTasks: tasks.filter((t) => t.status === 'Completed'),\n    });\n    const [totalTasks, setTotalTasks] = useState<number>(tasks.length);\n    const [newTaskModal, setNewTaskModal] = useState<boolean>(false);\n    const [newTaskDetails, setNewTaskDetails] = useState<any>(null);\n\n    /**\n     * Creates new empty task with given status\n     * @param status\n     * @param queue\n     */\n    const newTask = (status: string, queue: string) => {\n        setNewTaskDetails({\n            dueDate: new Date(),\n            userAvatar: [defaultAvatar],\n            status: status,\n            queue: queue,\n        });\n        setNewTaskModal(true);\n    };\n\n    // a little function to help us with reordering the result\n    const reorder = (list: any[], startIndex: number, endIndex: number) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n\n        return result;\n    };\n\n    /**\n     * Moves an item from one list to another list.\n     */\n    const move = (\n        source: Iterable<unknown> | ArrayLike<unknown>,\n        destination: Iterable<unknown> | ArrayLike<unknown>,\n        droppableSource: { index: number; droppableId: string | number },\n        droppableDestination: { index: number; droppableId: string | number }\n    ) => {\n        const sourceClone = Array.from(source);\n        const destClone = Array.from(destination);\n        const [removed] = sourceClone.splice(droppableSource.index, 1);\n        destClone.splice(droppableDestination.index, 0, removed);\n        const result: any = {};\n        result[droppableSource.droppableId] = sourceClone;\n        result[droppableDestination.droppableId] = destClone;\n\n        return result;\n    };\n\n    /**\n     * Gets the list\n     */\n    const getList = (id: string) => {\n        const modifiedState: any = { ...state };\n        const stateTasks: any = modifiedState[id] && modifiedState[id];\n        return stateTasks;\n    };\n\n    /**\n     * On drag end\n     */\n    const onDragEnd = (result: DropResult) => {\n        const { source, destination } = result;\n\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n        if (source.droppableId === destination.droppableId) {\n            const items = reorder(getList(source.droppableId), source.index, destination.index);\n            let localState: any = { ...state };\n            localState[source.droppableId] = items;\n            setState(localState);\n        } else {\n            const result = move(getList(source.droppableId), getList(destination.droppableId), source, destination);\n            const localState = { ...state, ...result };\n            setState(localState);\n        }\n    };\n    /*\n     * Form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            title: yup.string().required(),\n            priority: yup.string().required(),\n            description: yup.string().required(),\n        })\n    );\n\n    /*\n     * Form methods\n     */\n    const methods = useForm({ resolver: schemaResolver });\n    const { reset } = methods;\n\n    /**\n     * Toggles the new task modal\n     */\n    const toggleNewTaskModal = () => {\n        setNewTaskModal((prevstate) => !prevstate);\n    };\n\n    /**\n     * When date changes\n     * @param {} date\n     */\n    const handleDateChange = (date: Date) => {\n        if (newTaskDetails) {\n            setNewTaskDetails({ ...newTaskDetails, dueDate: date });\n        }\n    };\n\n    /**\n     * Handles the new task form submission\n     */\n    const handleNewTask = (values: any) => {\n        const formData = {\n            title: values['title'],\n            priority: values['priority'],\n            description: values['description'],\n        };\n\n        const newTask = {\n            ...newTaskDetails,\n            ...formData,\n            id: totalTasks + 1,\n            dueDate: newTaskDetails.dueDate.toLocaleDateString('en-US', {\n                year: 'numeric',\n                month: 'short',\n                day: 'numeric',\n            }),\n        };\n\n        let modifiedState: any = { ...state };\n        let tasks = [...getList(newTaskDetails.queue), newTask];\n        modifiedState[newTaskDetails.queue] = [...tasks];\n\n        setState(modifiedState);\n        setNewTaskModal(false);\n        setTotalTasks(totalTasks + 1);\n\n        // reset the form after submission\n        reset();\n    };\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Tasks', path: 'apps/tasks/kanban' },\n                    { label: 'Kanban Board', path: 'apps/tasks/kanban', active: true },\n                ]}\n                title={'Kanban Board'}\n            />\n            <Row>\n                <DragDropContext onDragEnd={onDragEnd}>\n                    {/* todo */}\n                    <Droppable droppableId=\"upcomingTasks\">\n                        {(provided, snapshot) => (\n                            <Col lg={4} ref={provided.innerRef}>\n                                <Card>\n                                    <Card.Body>\n                                        <Dropdown className=\"float-end\" align=\"end\">\n                                            <Dropdown.Toggle as=\"a\" className=\"cursor-pointer\">\n                                                <i className=\"mdi mdi-dots-vertical m-0 text-muted h3\"></i>\n                                            </Dropdown.Toggle>\n                                            <Dropdown.Menu>\n                                                <Dropdown.Item>Edit</Dropdown.Item>\n                                                <Dropdown.Item>Delete</Dropdown.Item>\n                                                <Dropdown.Item>Add Members</Dropdown.Item>\n                                                <Dropdown.Item>Add Due Date</Dropdown.Item>\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n\n                                        <h5 className=\"header-title\">Upcoming</h5>\n                                        <p className=\"sub-header\">\n                                            Your awesome text goes here. Your awesome text goes here.\n                                        </p>\n                                        {state.upcomingTasks.length === 0 && (\n                                            <p className=\"text-center text-muted pt-2 mb-0\">No Tasks</p>\n                                        )}\n\n                                        <ul className=\"sortable-list tasklist list-unstyled\" id=\"upcoming\">\n                                            {(state.upcomingTasks || []).map((item, index) => (\n                                                <Draggable key={item.id} draggableId={item.id + ''} index={index}>\n                                                    {(provided, snapshot) => (\n                                                        <li\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                            className={classNames('task-' + item.priority)}\n                                                        >\n                                                            <TaskItem task={item} />\n                                                        </li>\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n                                        </ul>\n                                        <div className=\"d-grid\">\n                                            <Link\n                                                to=\"#\"\n                                                className=\"btn btn-primary mt-3 waves-effect waves-light\"\n                                                onClick={() => newTask('Pending', 'upcomingTasks')}\n                                            >\n                                                <i className=\"mdi mdi-plus-circle\"></i> Add New\n                                            </Link>\n                                        </div>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )}\n                    </Droppable>\n\n                    {/* in progress */}\n                    <Droppable droppableId=\"inprogressTasks\">\n                        {(provided, snapshot) => (\n                            <Col lg={4} ref={provided.innerRef}>\n                                <Card>\n                                    <Card.Body>\n                                        <Dropdown className=\"float-end\" align=\"end\">\n                                            <Dropdown.Toggle as=\"a\" className=\"cursor-pointer\">\n                                                <i className=\"mdi mdi-dots-vertical m-0 text-muted h3\"></i>\n                                            </Dropdown.Toggle>\n                                            <Dropdown.Menu>\n                                                <Dropdown.Item>Edit</Dropdown.Item>\n                                                <Dropdown.Item>Delete</Dropdown.Item>\n                                                <Dropdown.Item>Add Members</Dropdown.Item>\n                                                <Dropdown.Item>Add Due Date</Dropdown.Item>\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n\n                                        <h5 className=\"header-title\">In Progress</h5>\n                                        <p className=\"sub-header\">Your awesome text goes here.</p>\n\n                                        {state.inprogressTasks.length === 0 && (\n                                            <p className=\"text-center text-muted pt-2 mb-0\">No Tasks</p>\n                                        )}\n\n                                        <ul className=\"sortable-list tasklist list-unstyled\" id=\"inprogress\">\n                                            {(state.inprogressTasks || []).map((item, index) => (\n                                                <Draggable key={item.id} draggableId={item.id + ''} index={index}>\n                                                    {(provided, snapshot) => (\n                                                        <li\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                            className={classNames('task-' + item.priority)}\n                                                        >\n                                                            <TaskItem task={item} />\n                                                        </li>\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n                                        </ul>\n                                        <div className=\"d-grid\">\n                                            <Link\n                                                to=\"#\"\n                                                className=\"btn btn-primary mt-3 waves-effect waves-light\"\n                                                onClick={() => newTask('Inprogress', 'inprogressTasks')}\n                                            >\n                                                <i className=\"mdi mdi-plus-circle\"></i> Add New\n                                            </Link>\n                                        </div>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )}\n                    </Droppable>\n\n                    {/* done */}\n                    <Droppable droppableId=\"completedTasks\">\n                        {(provided, snapshot) => (\n                            <Col lg={4} ref={provided.innerRef}>\n                                <Card>\n                                    <Card.Body>\n                                        <Dropdown className=\"float-end\" align=\"end\">\n                                            <Dropdown.Toggle as=\"a\" className=\"cursor-pointer\">\n                                                <i className=\"mdi mdi-dots-vertical m-0 text-muted h3\"></i>\n                                            </Dropdown.Toggle>\n                                            <Dropdown.Menu>\n                                                <Dropdown.Item>Edit</Dropdown.Item>\n                                                <Dropdown.Item>Delete</Dropdown.Item>\n                                                <Dropdown.Item>Add Members</Dropdown.Item>\n                                                <Dropdown.Item>Add Due Date</Dropdown.Item>\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n\n                                        <h5 className=\"header-title\">Completed</h5>\n                                        <p className=\"sub-header\">\n                                            Your awesome text goes here. Your awesome text goes here.\n                                        </p>\n                                        {state.completedTasks.length === 0 && (\n                                            <p className=\"text-center text-muted pt-2 mb-0\">No Tasks</p>\n                                        )}\n\n                                        <ul className=\"sortable-list tasklist list-unstyled\" id=\"done\">\n                                            {(state.completedTasks || []).map((item, index) => (\n                                                <Draggable key={item.id} draggableId={item.id + ''} index={index}>\n                                                    {(provided, snapshot) => (\n                                                        <li\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                            className={classNames('task-' + item.priority)}\n                                                        >\n                                                            <TaskItem task={item} />\n                                                        </li>\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                            {provided.placeholder}\n                                        </ul>\n\n                                        <div className=\"d-grid\">\n                                            <Link\n                                                to=\"#\"\n                                                className=\"btn btn-primary mt-3 waves-effect waves-light\"\n                                                onClick={() => newTask('Done', 'completedTasks')}\n                                            >\n                                                <i className=\"mdi mdi-plus-circle\"></i> Add New\n                                            </Link>\n                                        </div>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )}\n                    </Droppable>\n                    {/* </div> */}\n                </DragDropContext>\n            </Row>\n\n            {/* add new task modal */}\n            {newTaskDetails && (\n                <AddNewTask\n                    methods={methods}\n                    newTaskDetails={newTaskDetails}\n                    newTaskModal={newTaskModal}\n                    toggleNewTaskModal={toggleNewTaskModal}\n                    handleNewTask={handleNewTask}\n                    handleDateChange={handleDateChange}\n                />\n            )}\n        </>\n    );\n};\n\nexport default Kanban;\n"]},"metadata":{},"sourceType":"module"}