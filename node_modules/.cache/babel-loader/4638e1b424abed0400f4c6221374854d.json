{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\routes\\\\Routes.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'; // layout constants\n\nimport { LayoutTypes } from '../constants/layout'; // custom hook\n\nimport { useRedux } from '../hooks/'; // All layouts containers\n\nimport DefaultLayout from '../layouts/Default';\nimport VerticalLayout from '../layouts/Vertical';\nimport DetachedLayout from '../layouts/Detached';\nimport HorizontalLayout from '../layouts/Horizontal/';\nimport TwoColumnLayout from '../layouts/TwoColumn/'; // routes\n\nimport { authProtectedFlattenRoutes, publicProtectedFlattenRoutes } from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Routes = props => {\n  _s();\n\n  const {\n    appSelector\n  } = useRedux();\n  const {\n    layout\n  } = appSelector(state => ({\n    layout: state.Layout\n  }));\n\n  const getLayout = () => {\n    let layoutCls = TwoColumnLayout;\n\n    switch (layout.layoutType) {\n      case LayoutTypes.LAYOUT_HORIZONTAL:\n        layoutCls = HorizontalLayout;\n        break;\n\n      case LayoutTypes.LAYOUT_DETACHED:\n        layoutCls = DetachedLayout;\n        break;\n\n      case LayoutTypes.LAYOUT_VERTICAL:\n        layoutCls = VerticalLayout;\n        break;\n\n      default:\n        layoutCls = TwoColumnLayout;\n        break;\n    }\n\n    return layoutCls;\n  };\n\n  let Layout = getLayout();\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: publicProtectedFlattenRoutes.map(r => r['path']),\n        children: /*#__PURE__*/_jsxDEV(DefaultLayout, { ...props,\n          layout: layout,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: publicProtectedFlattenRoutes.map((route, index) => {\n              return !route.children && /*#__PURE__*/_jsxDEV(route.route, {\n                path: route.path,\n                roles: route.roles,\n                exact: route.exact,\n                component: route.component\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: authProtectedFlattenRoutes.map(r => r['path']),\n        children: /*#__PURE__*/_jsxDEV(Layout, { ...props,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: authProtectedFlattenRoutes.map((route, index) => {\n              return !route.children && /*#__PURE__*/_jsxDEV(route.route, {\n                path: route.path,\n                roles: route.roles,\n                exact: route.exact,\n                component: route.component\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Routes, \"NUuhTL7XnV4c9MLZUOqHST3U+Ow=\", false, function () {\n  return [useRedux];\n});\n\n_c = Routes;\nexport default Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["C:/proyecto/practica/src/routes/Routes.tsx"],"names":["React","BrowserRouter","Route","Switch","LayoutTypes","useRedux","DefaultLayout","VerticalLayout","DetachedLayout","HorizontalLayout","TwoColumnLayout","authProtectedFlattenRoutes","publicProtectedFlattenRoutes","Routes","props","appSelector","layout","state","Layout","getLayout","layoutCls","layoutType","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_VERTICAL","map","r","route","index","children","path","roles","exact","component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n// layout constants\nimport { LayoutTypes } from '../constants/layout';\n\n// custom hook\nimport { useRedux } from '../hooks/';\n\n// All layouts containers\nimport DefaultLayout from '../layouts/Default';\nimport VerticalLayout from '../layouts/Vertical';\nimport DetachedLayout from '../layouts/Detached';\nimport HorizontalLayout from '../layouts/Horizontal/';\nimport TwoColumnLayout from '../layouts/TwoColumn/';\n\n// routes\nimport { authProtectedFlattenRoutes, publicProtectedFlattenRoutes } from './index';\n\ninterface RoutesProps {}\n\nconst Routes = (props: RoutesProps) => {\n    const { appSelector } = useRedux();\n    const { layout } = appSelector((state) => ({\n        layout: state.Layout,\n    }));\n\n    const getLayout = () => {\n        let layoutCls = TwoColumnLayout;\n\n        switch (layout.layoutType) {\n            case LayoutTypes.LAYOUT_HORIZONTAL:\n                layoutCls = HorizontalLayout;\n                break;\n            case LayoutTypes.LAYOUT_DETACHED:\n                layoutCls = DetachedLayout;\n                break;\n            case LayoutTypes.LAYOUT_VERTICAL:\n                layoutCls = VerticalLayout;\n                break;\n            default:\n                layoutCls = TwoColumnLayout;\n                break;\n        }\n        return layoutCls;\n    };\n\n    let Layout = getLayout();\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path={publicProtectedFlattenRoutes.map((r: any) => r['path'])}>\n                    <DefaultLayout {...props} layout={layout}>\n                        <Switch>\n                            {publicProtectedFlattenRoutes.map((route: any, index: number) => {\n                                return (\n                                    !route.children && (\n                                        <route.route\n                                            key={index}\n                                            path={route.path}\n                                            roles={route.roles}\n                                            exact={route.exact}\n                                            component={route.component}\n                                        />\n                                    )\n                                );\n                            })}\n                        </Switch>\n                    </DefaultLayout>\n                </Route>\n\n                <Route path={authProtectedFlattenRoutes.map((r: any) => r['path'])}>\n                    <Layout {...props}>\n                        <Switch>\n                            {authProtectedFlattenRoutes.map((route: any, index: number) => {\n                                return (\n                                    !route.children && (\n                                        <route.route\n                                            key={index}\n                                            path={route.path}\n                                            roles={route.roles}\n                                            exact={route.exact}\n                                            component={route.component}\n                                        />\n                                    )\n                                );\n                            })}\n                        </Switch>\n                    </Layout>\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}