{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\pages\\\\apps\\\\Email\\\\ComposeEmail.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup'; // editor\n\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html'; // styles\n\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'; // components\n\nimport { VerticalForm, FormInput } from '../../../components/form/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ComposeEmail = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    toggleComposeModal\n  } = _ref;\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const schemaResolver = yupResolver(yup.object().shape({\n    to: yup.string().required('Please specify to email').email('Please enter Email'),\n    subject: yup.string().required('Please specify subject')\n  }));\n  /**\n   * Handles the save\n   * @param {*} event\n   * @param {*} values\n   */\n\n  const handleEmailSave = (event, values) => {\n    const body = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n    console.log({ ...values,\n      body\n    });\n    toggleComposeModal();\n  };\n  /**\n   * On editor body change\n   */\n\n\n  const onEditorStateChange = editorStates => {\n    setEditorState(editorStates);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: isOpen,\n    onHide: toggleComposeModal,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      onHide: toggleComposeModal,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        as: \"h5\",\n        children: \"New Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"p-3\",\n      children: /*#__PURE__*/_jsxDEV(VerticalForm, {\n        onSubmit: handleEmailSave,\n        resolver: schemaResolver,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"To\",\n          type: \"email\",\n          name: \"to\",\n          placeholder: \"Example@email.com\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"Subject\",\n          type: \"text\",\n          name: \"subject\",\n          placeholder: \"Your subject\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            editorState: editorState,\n            onEditorStateChange: onEditorStateChange,\n            toolbarClassName: \"draft-toolbar\",\n            wrapperClassName: \"react-draft-wrapper  border border-1 rounded-1\",\n            editorStyle: {\n              minHeight: '200px'\n            },\n            toolbar: {\n              options: ['inline', 'fontSize', 'fontFamily', 'list', 'textAlign', 'link'],\n              inline: {\n                inDropdown: true\n              },\n              list: {\n                inDropdown: true\n              },\n              textAlign: {\n                inDropdown: true\n              },\n              link: {\n                inDropdown: true\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"light\",\n        onClick: toggleComposeModal,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: [\"Send \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fab fa-telegram-plane ms-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ComposeEmail, \"wG9VLOnpYRUB9A7+mcW2q9Lv0c0=\");\n\n_c = ComposeEmail;\nexport default ComposeEmail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComposeEmail\");","map":{"version":3,"sources":["C:/proyecto/practica/src/pages/apps/Email/ComposeEmail.tsx"],"names":["React","useState","Modal","Button","yup","yupResolver","EditorState","convertToRaw","Editor","draftToHtml","VerticalForm","FormInput","ComposeEmail","isOpen","toggleComposeModal","editorState","setEditorState","createEmpty","schemaResolver","object","shape","to","string","required","email","subject","handleEmailSave","event","values","body","getCurrentContent","console","log","onEditorStateChange","editorStates","minHeight","options","inline","inDropdown","list","textAlign","link"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\n// editor\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\n\n// styles\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n// components\nimport { VerticalForm, FormInput } from '../../../components/form/';\n\ninterface ComposeEmailProps {\n    isOpen: boolean;\n    toggleComposeModal: () => void;\n}\n\nconst ComposeEmail = ({ isOpen, toggleComposeModal }: ComposeEmailProps) => {\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            to: yup.string().required('Please specify to email').email('Please enter Email'),\n            subject: yup.string().required('Please specify subject'),\n        })\n    );\n\n    /**\n     * Handles the save\n     * @param {*} event\n     * @param {*} values\n     */\n    const handleEmailSave = (event: any, values: any) => {\n        const body = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n        console.log({ ...values, body });\n        toggleComposeModal();\n    };\n\n    /**\n     * On editor body change\n     */\n    const onEditorStateChange = (editorStates: React.SetStateAction<EditorState>) => {\n        setEditorState(editorStates);\n    };\n\n    return (\n        <Modal show={isOpen} onHide={toggleComposeModal} centered>\n            <Modal.Header closeButton onHide={toggleComposeModal}>\n                <Modal.Title as=\"h5\">New Message</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body className=\"p-3\">\n                <VerticalForm onSubmit={handleEmailSave} resolver={schemaResolver}>\n                    <FormInput\n                        label=\"To\"\n                        type=\"email\"\n                        name=\"to\"\n                        placeholder=\"Example@email.com\"\n                        containerClass={'mb-2'}\n                    />\n                    <FormInput\n                        label=\"Subject\"\n                        type=\"text\"\n                        name=\"subject\"\n                        placeholder=\"Your subject\"\n                        containerClass={'mb-2'}\n                    />\n                    <div className=\"mb-2\">\n                        <label className=\"form-label\">Message</label>\n                        <Editor\n                            editorState={editorState}\n                            onEditorStateChange={onEditorStateChange}\n                            toolbarClassName=\"draft-toolbar\"\n                            wrapperClassName=\"react-draft-wrapper  border border-1 rounded-1\"\n                            editorStyle={{ minHeight: '200px' }}\n                            toolbar={{\n                                options: ['inline', 'fontSize', 'fontFamily', 'list', 'textAlign', 'link'],\n                                inline: { inDropdown: true },\n                                list: { inDropdown: true },\n                                textAlign: { inDropdown: true },\n                                link: { inDropdown: true },\n                            }}\n                        />\n                    </div>\n                </VerticalForm>\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button variant=\"light\" onClick={toggleComposeModal}>\n                    Close\n                </Button>\n                <Button type=\"submit\">\n                    Send <i className=\"fab fa-telegram-plane ms-1\"></i>\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default ComposeEmail;\n"]},"metadata":{},"sourceType":"module"}