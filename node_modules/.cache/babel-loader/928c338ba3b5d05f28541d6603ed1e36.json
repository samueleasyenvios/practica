{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\components\\\\topbar\\\\ProfileDropdown.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown, Badge } from 'react-bootstrap';\nimport classNames from 'classnames'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileDropdown = props => {\n  _s();\n\n  const profilePic = props['profilePic'] || null;\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  /*\n   * toggle profile-dropdown\n   */\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    show: dropdownOpen,\n    onToggle: toggleDropdown,\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      id: \"dropdown-profile\",\n      as: \"a\",\n      onClick: toggleDropdown,\n      className: classNames('nav-link', 'nav-user', 'me-0', 'waves-effect', 'waves-light', {\n        show: dropdownOpen\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: profilePic,\n        className: \"rounded-circle\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pro-user-name ms-1\",\n        children: [props['username'], \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-chevron-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      className: \"dropdown-menu-end profile-dropdown\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleDropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-header noti-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"text-overflow m-0\",\n            children: \"Welcome !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), (props.menuItems || []).map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [i === props['menuItems'].length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-divider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 73\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: item.redirectTo,\n              className: \"dropdown-item notify-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: `${item.icon} me-1`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [item.label, item.badge && /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: item.badge.variant,\n                  className: \"float-end\",\n                  children: item.badge.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this)]\n            }, i + '-profile-menu', true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileDropdown, \"z5Nkh6K+y+CV4vT0AOyJ2ID9tJg=\");\n\n_c = ProfileDropdown;\nexport default ProfileDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileDropdown\");","map":{"version":3,"sources":["C:/proyecto/practica/src/components/topbar/ProfileDropdown.tsx"],"names":["React","useState","Link","Dropdown","Badge","classNames","ProfileDropdown","props","profilePic","dropdownOpen","setDropdownOpen","toggleDropdown","show","menuItems","map","item","i","length","redirectTo","icon","label","badge","variant","text"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown, Badge } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// types\nimport { ProfileMenuItem } from '../../layouts/Topbar';\n\ninterface ProfileDropdownProps {\n    menuItems: ProfileMenuItem[];\n    profilePic?: string;\n    username: string;\n    userTitle?: string;\n}\n\nconst ProfileDropdown = (props: ProfileDropdownProps) => {\n    const profilePic = props['profilePic'] || null;\n    const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n    /*\n     * toggle profile-dropdown\n     */\n    const toggleDropdown = () => {\n        setDropdownOpen(!dropdownOpen);\n    };\n\n    return (\n        <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n            <Dropdown.Toggle\n                id=\"dropdown-profile\"\n                as=\"a\"\n                onClick={toggleDropdown}\n                className={classNames('nav-link', 'nav-user', 'me-0', 'waves-effect', 'waves-light', {\n                    show: dropdownOpen,\n                })}\n            >\n                <img src={profilePic!} className=\"rounded-circle\" alt=\"\" />{' '}\n                <span className=\"pro-user-name ms-1\">\n                    {props['username']} <i className=\"mdi mdi-chevron-down\"></i>\n                </span>\n            </Dropdown.Toggle>\n            <Dropdown.Menu className=\"dropdown-menu-end profile-dropdown\">\n                <div onClick={toggleDropdown}>\n                    <div className=\"dropdown-header noti-title\">\n                        <h6 className=\"text-overflow m-0\">Welcome !</h6>\n                    </div>\n                    {(props.menuItems || []).map((item, i) => {\n                        return (\n                            <React.Fragment key={i}>\n                                {i === props['menuItems'].length - 1 && <div className=\"dropdown-divider\"></div>}\n                                <Link\n                                    to={item.redirectTo}\n                                    className=\"dropdown-item notify-item\"\n                                    key={i + '-profile-menu'}\n                                >\n                                    <i className={`${item.icon} me-1`}></i>\n                                    <span>\n                                        {item.label}\n                                        {item.badge && (\n                                            <Badge bg={item.badge.variant} className=\"float-end\">\n                                                {item.badge.text}\n                                            </Badge>\n                                        )}\n                                    </span>\n                                </Link>\n                            </React.Fragment>\n                        );\n                    })}\n                </div>\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default ProfileDropdown;\n"]},"metadata":{},"sourceType":"module"}