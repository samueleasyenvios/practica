{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\pages\\\\apps\\\\Ecommerce\\\\Orders.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport classNames from 'classnames'; // components\n\nimport PageTitle from '../../../components/PageTitle';\nimport Table from '../../../components/Table'; // dummy data\n\nimport { orders } from './data';\n/* order column render */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderColumn = _ref => {\n  let {\n    row\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/apps/ecommerce/order/detail\",\n      className: \"text-body fw-medium\",\n      children: [\"#MN\", '0' + row.original.order_id.slice(-3)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n/* orderdate column render */\n\n\n_c = OrderColumn;\n\nconst OrderDateColumn = _ref2 => {\n  let {\n    row\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [row.original.order_date, \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"text-muted\",\n      children: row.original.order_time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true);\n};\n/* payment column render */\n\n\n_c2 = OrderDateColumn;\n\nconst PaymentStatusColumn = _ref3 => {\n  let {\n    row\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classNames('badge', {\n        'bg-soft-success text-success': row.original.payment_status === 'Paid',\n        'bg-soft-danger text-danger': row.original.payment_status === 'Payment Failed',\n        'bg-soft-info text-info': row.original.payment_status === 'Unpaid',\n        'bg-soft-warning text-warning': row.original.payment_status === 'Awaiting Authorization'\n      }),\n      children: row.original.payment_status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n/* status column render */\n\n\n_c3 = PaymentStatusColumn;\n\nconst StatusColumn = _ref4 => {\n  let {\n    row\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classNames('badge', {\n          'bg-success': row.original.order_status === 'Delivered',\n          'bg-danger': row.original.order_status === 'Cancelled',\n          'bg-info': row.original.order_status === 'Shipped',\n          'bg-warning': row.original.order_status === 'Processing'\n        }),\n        children: row.original.order_status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n/* action column render */\n\n\n_c4 = StatusColumn;\n\nconst ActionColumn = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      className: \"action-icon\",\n      children: [' ', /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"mdi mdi-eye\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      className: \"action-icon\",\n      children: [' ', /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"mdi mdi-square-edit-outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      className: \"action-icon\",\n      children: [' ', /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"mdi mdi-delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}; // get all columns\n\n\n_c5 = ActionColumn;\nconst columns = [{\n  Header: 'Order ID',\n  accessor: 'order_id',\n  Cell: OrderColumn\n}, {\n  Header: 'Billing Name',\n  accessor: 'billing_name'\n}, {\n  Header: 'Date',\n  accessor: 'order_date',\n  Cell: OrderDateColumn\n}, {\n  Header: 'Payment Status',\n  accessor: 'payment_status',\n  Cell: PaymentStatusColumn\n}, {\n  Header: 'Total',\n  accessor: 'total'\n}, {\n  Header: 'Payment Method',\n  accessor: 'payment_method'\n}, {\n  Header: 'Order Status',\n  accessor: 'order_status',\n  Cell: StatusColumn\n}, {\n  Header: 'Action',\n  accessor: 'action',\n  Cell: ActionColumn\n}]; // get pagelist to display\n\nconst sizePerPageList = [{\n  text: '10',\n  value: 10\n}, {\n  text: '20',\n  value: 20\n}, {\n  text: '50',\n  value: 50\n}]; // main component\n\nconst Orders = () => {\n  _s();\n\n  const [orderList, setOrderList] = useState(orders); // change order status group\n\n  const changeOrderStatusGroup = OrderStatusGroup => {\n    let updatedData = [...orders]; //  filter\n\n    updatedData = OrderStatusGroup === 'All' ? orders : [...orders].filter(o => {\n      var _o$payment_status;\n\n      return (_o$payment_status = o.payment_status) === null || _o$payment_status === void 0 ? void 0 : _o$payment_status.includes(OrderStatusGroup);\n    });\n    setOrderList(updatedData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      breadCrumbItems: [{\n        label: 'eCcommerce',\n        path: '/apps/ecommerce/orders'\n      }, {\n        label: 'Orders',\n        path: '/apps/ecommerce/orders',\n        active: true\n      }],\n      title: 'Orders'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              className: \"mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                lg: 8,\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  className: \"row gy-2 gx-2 align-items-center justify-content-lg-start justify-content-between\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-auto\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"d-flex align-items-center w-auto\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"status-select\",\n                        className: \"me-2\",\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                        className: \"form-select\",\n                        id: \"status-select\",\n                        onChange: e => changeOrderStatusGroup(e.target.value),\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"All\",\n                          children: \"All\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 190,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"Paid\",\n                          children: \"Paid\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 191,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"Authorization\",\n                          children: \"Awaiting Authorization\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 192,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"Failed\",\n                          children: \"Payment failed\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 193,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"Unpaid\",\n                          children: \"Unpaid\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 194,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                lg: 4,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-lg-end mt-xl-0 mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn btn-danger mb-2 me-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-basket me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 45\n                    }, this), \" Add New Order\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn btn-light mb-2\",\n                    children: \"Export\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              columns: columns,\n              data: orderList,\n              isSearchable: true,\n              pageSize: 10,\n              sizePerPageList: sizePerPageList,\n              isSortable: true,\n              pagination: true,\n              isSelectable: true,\n              theadClass: \"table-light\",\n              searchBoxClass: \"mb-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Orders, \"l6YxMe6zd+X1BsVHTVNr+emqXBg=\");\n\n_c6 = Orders;\nexport default Orders;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"OrderColumn\");\n$RefreshReg$(_c2, \"OrderDateColumn\");\n$RefreshReg$(_c3, \"PaymentStatusColumn\");\n$RefreshReg$(_c4, \"StatusColumn\");\n$RefreshReg$(_c5, \"ActionColumn\");\n$RefreshReg$(_c6, \"Orders\");","map":{"version":3,"sources":["C:/proyecto/practica/src/pages/apps/Ecommerce/Orders.tsx"],"names":["React","useState","Link","Row","Col","Card","Button","classNames","PageTitle","Table","orders","OrderColumn","row","original","order_id","slice","OrderDateColumn","order_date","order_time","PaymentStatusColumn","payment_status","StatusColumn","order_status","ActionColumn","columns","Header","accessor","Cell","sizePerPageList","text","value","Orders","orderList","setOrderList","changeOrderStatusGroup","OrderStatusGroup","updatedData","filter","o","includes","label","path","active","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,QAAuC,iBAAvC;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,KAAP,MAAkB,2BAAlB,C,CAEA;;AACA,SAASC,MAAT,QAAwC,QAAxC;AAEA;;;;;AACA,MAAMC,WAAW,GAAG,QAA2B;AAAA,MAA1B;AAAEC,IAAAA;AAAF,GAA0B;AAC3C,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,8BAAT;AAAwC,MAAA,SAAS,EAAC,qBAAlD;AAAA,wBACQ,MAAMA,GAAG,CAACC,QAAJ,CAAaC,QAAb,CAAsBC,KAAtB,CAA4B,CAAC,CAA7B,CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH,CARD;AAUA;;;KAVMJ,W;;AAWN,MAAMK,eAAe,GAAG,SAA2B;AAAA,MAA1B;AAAEJ,IAAAA;AAAF,GAA0B;AAC/C,sBACI;AAAA,eACKA,GAAG,CAACC,QAAJ,CAAaI,UADlB,oBAC8B;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA,gBAA+BL,GAAG,CAACC,QAAJ,CAAaK;AAA5C;AAAA;AAAA;AAAA;AAAA,YAD9B;AAAA,kBADJ;AAKH,CAND;AAQA;;;MARMF,e;;AASN,MAAMG,mBAAmB,GAAG,SAA2B;AAAA,MAA1B;AAAEP,IAAAA;AAAF,GAA0B;AACnD,sBACI;AAAA,2BACI;AACI,MAAA,SAAS,EAAEL,UAAU,CAAC,OAAD,EAAU;AAC3B,wCAAgCK,GAAG,CAACC,QAAJ,CAAaO,cAAb,KAAgC,MADrC;AAE3B,sCAA8BR,GAAG,CAACC,QAAJ,CAAaO,cAAb,KAAgC,gBAFnC;AAG3B,kCAA0BR,GAAG,CAACC,QAAJ,CAAaO,cAAb,KAAgC,QAH/B;AAI3B,wCAAgCR,GAAG,CAACC,QAAJ,CAAaO,cAAb,KAAgC;AAJrC,OAAV,CADzB;AAAA,gBAQKR,GAAG,CAACC,QAAJ,CAAaO;AARlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAfD;AAiBA;;;MAjBMD,mB;;AAkBN,MAAME,YAAY,GAAG,SAA2B;AAAA,MAA1B;AAAET,IAAAA;AAAF,GAA0B;AAC5C,sBACI;AAAA,2BACI;AAAA,6BACI;AACI,QAAA,SAAS,EAAEL,UAAU,CAAC,OAAD,EAAU;AAC3B,wBAAcK,GAAG,CAACC,QAAJ,CAAaS,YAAb,KAA8B,WADjB;AAE3B,uBAAaV,GAAG,CAACC,QAAJ,CAAaS,YAAb,KAA8B,WAFhB;AAG3B,qBAAWV,GAAG,CAACC,QAAJ,CAAaS,YAAb,KAA8B,SAHd;AAI3B,wBAAcV,GAAG,CAACC,QAAJ,CAAaS,YAAb,KAA8B;AAJjB,SAAV,CADzB;AAAA,kBAQKV,GAAG,CAACC,QAAJ,CAAaS;AARlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAgBH,CAjBD;AAmBA;;;MAnBMD,Y;;AAoBN,MAAME,YAAY,GAAG,MAAM;AACvB,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,aAAvB;AAAA,iBACK,GADL,eAEI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,aAAvB;AAAA,iBACK,GADL,eAEI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eASI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,aAAvB;AAAA,iBACK,GADL,eAEI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAgBH,CAjBD,C,CAmBA;;;MAnBMA,Y;AAoBN,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,MAAM,EAAE,UADZ;AAEIC,EAAAA,QAAQ,EAAE,UAFd;AAGIC,EAAAA,IAAI,EAAEhB;AAHV,CADY,EAMZ;AACIc,EAAAA,MAAM,EAAE,cADZ;AAEIC,EAAAA,QAAQ,EAAE;AAFd,CANY,EAUZ;AACID,EAAAA,MAAM,EAAE,MADZ;AAEIC,EAAAA,QAAQ,EAAE,YAFd;AAGIC,EAAAA,IAAI,EAAEX;AAHV,CAVY,EAeZ;AACIS,EAAAA,MAAM,EAAE,gBADZ;AAEIC,EAAAA,QAAQ,EAAE,gBAFd;AAGIC,EAAAA,IAAI,EAAER;AAHV,CAfY,EAoBZ;AACIM,EAAAA,MAAM,EAAE,OADZ;AAEIC,EAAAA,QAAQ,EAAE;AAFd,CApBY,EAwBZ;AACID,EAAAA,MAAM,EAAE,gBADZ;AAEIC,EAAAA,QAAQ,EAAE;AAFd,CAxBY,EA4BZ;AACID,EAAAA,MAAM,EAAE,cADZ;AAEIC,EAAAA,QAAQ,EAAE,cAFd;AAGIC,EAAAA,IAAI,EAAEN;AAHV,CA5BY,EAiCZ;AACII,EAAAA,MAAM,EAAE,QADZ;AAEIC,EAAAA,QAAQ,EAAE,QAFd;AAGIC,EAAAA,IAAI,EAAEJ;AAHV,CAjCY,CAAhB,C,CAwCA;;AACA,MAAMK,eAAe,GAAG,CACpB;AACIC,EAAAA,IAAI,EAAE,IADV;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADoB,EAKpB;AACID,EAAAA,IAAI,EAAE,IADV;AAEIC,EAAAA,KAAK,EAAE;AAFX,CALoB,EASpB;AACID,EAAAA,IAAI,EAAE,IADV;AAEIC,EAAAA,KAAK,EAAE;AAFX,CAToB,CAAxB,C,CAeA;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhC,QAAQ,CAAoBS,MAApB,CAA1C,CADiB,CAGjB;;AACA,QAAMwB,sBAAsB,GAAIC,gBAAD,IAA8B;AACzD,QAAIC,WAAW,GAAG,CAAC,GAAG1B,MAAJ,CAAlB,CADyD,CAEzD;;AACA0B,IAAAA,WAAW,GACPD,gBAAgB,KAAK,KAArB,GACMzB,MADN,GAEM,CAAC,GAAGA,MAAJ,EAAY2B,MAAZ,CAAoBC,CAAD;AAAA;;AAAA,kCAAOA,CAAC,CAAClB,cAAT,sDAAO,kBAAkBmB,QAAlB,CAA2BJ,gBAA3B,CAAP;AAAA,KAAnB,CAHV;AAIAF,IAAAA,YAAY,CAACG,WAAD,CAAZ;AACH,GARD;;AAUA,sBACI;AAAA,4BACI,QAAC,SAAD;AACI,MAAA,eAAe,EAAE,CACb;AAAEI,QAAAA,KAAK,EAAE,YAAT;AAAuBC,QAAAA,IAAI,EAAE;AAA7B,OADa,EAEb;AAAED,QAAAA,KAAK,EAAE,QAAT;AAAmBC,QAAAA,IAAI,EAAE,wBAAzB;AAAmDC,QAAAA,MAAM,EAAE;AAA3D,OAFa,CADrB;AAKI,MAAA,KAAK,EAAE;AALX;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA,+BACI,QAAC,IAAD;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAA,oCACI,QAAC,GAAD;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACI,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,uCACI;AAAM,kBAAA,SAAS,EAAC,mFAAhB;AAAA,yCACI;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,2CACI;AAAK,sBAAA,SAAS,EAAC,kCAAf;AAAA,8CACI;AAAO,wBAAA,OAAO,EAAC,eAAf;AAA+B,wBAAA,SAAS,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAII;AACI,wBAAA,SAAS,EAAC,aADd;AAEI,wBAAA,EAAE,EAAC,eAFP;AAGI,wBAAA,QAAQ,EAAGC,CAAD,IAAYT,sBAAsB,CAACS,CAAC,CAACC,MAAF,CAASd,KAAV,CAHhD;AAAA,gDAKI;AAAQ,0BAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCALJ,eAMI;AAAQ,0BAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCANJ,eAOI;AAAQ,0BAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAPJ,eAQI;AAAQ,0BAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCARJ,eASI;AAAQ,0BAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCATJ;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAwBI,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,0BAAf;AAAA,0CACI,QAAC,MAAD;AAAQ,oBAAA,SAAS,EAAC,0BAAlB;AAAA,4CACI;AAAG,sBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,4BADJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,MAAD;AAAQ,oBAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAmCI,QAAC,KAAD;AACI,cAAA,OAAO,EAAEN,OADb;AAEI,cAAA,IAAI,EAAEQ,SAFV;AAGI,cAAA,YAAY,EAAE,IAHlB;AAII,cAAA,QAAQ,EAAE,EAJd;AAKI,cAAA,eAAe,EAAEJ,eALrB;AAMI,cAAA,UAAU,EAAE,IANhB;AAOI,cAAA,UAAU,EAAE,IAPhB;AAQI,cAAA,YAAY,EAAE,IARlB;AASI,cAAA,UAAU,EAAC,aATf;AAUI,cAAA,cAAc,EAAC;AAVnB;AAAA;AAAA;AAAA;AAAA,oBAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAkEH,CAhFD;;GAAMG,M;;MAAAA,M;AAkFN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// components\nimport PageTitle from '../../../components/PageTitle';\nimport Table from '../../../components/Table';\n\n// dummy data\nimport { orders, OrdersItemTypes } from './data';\n\n/* order column render */\nconst OrderColumn = ({ row }: { row: any }) => {\n    return (\n        <>\n            <Link to=\"/apps/ecommerce/order/detail\" className=\"text-body fw-medium\">\n                #MN{'0' + row.original.order_id.slice(-3)}\n            </Link>\n        </>\n    );\n};\n\n/* orderdate column render */\nconst OrderDateColumn = ({ row }: { row: any }) => {\n    return (\n        <>\n            {row.original.order_date} <small className=\"text-muted\">{row.original.order_time}</small>\n        </>\n    );\n};\n\n/* payment column render */\nconst PaymentStatusColumn = ({ row }: { row: any }) => {\n    return (\n        <div>\n            <span\n                className={classNames('badge', {\n                    'bg-soft-success text-success': row.original.payment_status === 'Paid',\n                    'bg-soft-danger text-danger': row.original.payment_status === 'Payment Failed',\n                    'bg-soft-info text-info': row.original.payment_status === 'Unpaid',\n                    'bg-soft-warning text-warning': row.original.payment_status === 'Awaiting Authorization',\n                })}\n            >\n                {row.original.payment_status}\n            </span>\n        </div>\n    );\n};\n\n/* status column render */\nconst StatusColumn = ({ row }: { row: any }) => {\n    return (\n        <>\n            <h5>\n                <span\n                    className={classNames('badge', {\n                        'bg-success': row.original.order_status === 'Delivered',\n                        'bg-danger': row.original.order_status === 'Cancelled',\n                        'bg-info': row.original.order_status === 'Shipped',\n                        'bg-warning': row.original.order_status === 'Processing',\n                    })}\n                >\n                    {row.original.order_status}\n                </span>\n            </h5>\n        </>\n    );\n};\n\n/* action column render */\nconst ActionColumn = () => {\n    return (\n        <>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-eye\"></i>\n            </Link>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-square-edit-outline\"></i>\n            </Link>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-delete\"></i>\n            </Link>\n        </>\n    );\n};\n\n// get all columns\nconst columns = [\n    {\n        Header: 'Order ID',\n        accessor: 'order_id',\n        Cell: OrderColumn,\n    },\n    {\n        Header: 'Billing Name',\n        accessor: 'billing_name',\n    },\n    {\n        Header: 'Date',\n        accessor: 'order_date',\n        Cell: OrderDateColumn,\n    },\n    {\n        Header: 'Payment Status',\n        accessor: 'payment_status',\n        Cell: PaymentStatusColumn,\n    },\n    {\n        Header: 'Total',\n        accessor: 'total',\n    },\n    {\n        Header: 'Payment Method',\n        accessor: 'payment_method',\n    },\n    {\n        Header: 'Order Status',\n        accessor: 'order_status',\n        Cell: StatusColumn,\n    },\n    {\n        Header: 'Action',\n        accessor: 'action',\n        Cell: ActionColumn,\n    },\n];\n\n// get pagelist to display\nconst sizePerPageList = [\n    {\n        text: '10',\n        value: 10,\n    },\n    {\n        text: '20',\n        value: 20,\n    },\n    {\n        text: '50',\n        value: 50,\n    },\n];\n\n// main component\nconst Orders = () => {\n    const [orderList, setOrderList] = useState<OrdersItemTypes[]>(orders);\n\n    // change order status group\n    const changeOrderStatusGroup = (OrderStatusGroup: string) => {\n        let updatedData = [...orders];\n        //  filter\n        updatedData =\n            OrderStatusGroup === 'All'\n                ? orders\n                : [...orders].filter((o) => o.payment_status?.includes(OrderStatusGroup));\n        setOrderList(updatedData);\n    };\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'eCcommerce', path: '/apps/ecommerce/orders' },\n                    { label: 'Orders', path: '/apps/ecommerce/orders', active: true },\n                ]}\n                title={'Orders'}\n            />\n\n            <Row>\n                <Col xs={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className=\"mb-2\">\n                                <Col lg={8}>\n                                    <form className=\"row gy-2 gx-2 align-items-center justify-content-lg-start justify-content-between\">\n                                        <div className=\"col-auto\">\n                                            <div className=\"d-flex align-items-center w-auto\">\n                                                <label htmlFor=\"status-select\" className=\"me-2\">\n                                                    Status\n                                                </label>\n                                                <select\n                                                    className=\"form-select\"\n                                                    id=\"status-select\"\n                                                    onChange={(e: any) => changeOrderStatusGroup(e.target.value)}\n                                                >\n                                                    <option value=\"All\">All</option>\n                                                    <option value=\"Paid\">Paid</option>\n                                                    <option value=\"Authorization\">Awaiting Authorization</option>\n                                                    <option value=\"Failed\">Payment failed</option>\n                                                    <option value=\"Unpaid\">Unpaid</option>\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </Col>\n\n                                <Col lg={4}>\n                                    <div className=\"text-lg-end mt-xl-0 mt-2\">\n                                        <Button className=\"btn btn-danger mb-2 me-2\">\n                                            <i className=\"mdi mdi-basket me-1\"></i> Add New Order\n                                        </Button>\n                                        <Button className=\"btn btn-light mb-2\">Export</Button>\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Table\n                                columns={columns}\n                                data={orderList}\n                                isSearchable={true}\n                                pageSize={10}\n                                sizePerPageList={sizePerPageList}\n                                isSortable={true}\n                                pagination={true}\n                                isSelectable={true}\n                                theadClass=\"table-light\"\n                                searchBoxClass=\"mb-2\"\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}