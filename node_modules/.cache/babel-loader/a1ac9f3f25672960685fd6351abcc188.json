{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\pages\\\\auth\\\\SignInSignUp.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Row, Col, Button, Alert } from 'react-bootstrap';\nimport { Redirect, Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'react-i18next'; // hooks\n\nimport { useRedux } from '../../hooks/'; // actions\n\nimport { resetAuth, loginUser, signupUser } from '../../redux/actions'; // components\n\nimport { VerticalForm, FormInput } from '../../components/form/';\nimport AuthLayout from './AuthLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignInSignUp = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    dispatch,\n    appSelector\n  } = useRedux();\n  const {\n    user,\n    userSignUp,\n    loading,\n    error\n  } = appSelector(state => ({\n    user: state.Auth.user,\n    loading: state.Auth.loading,\n    error: state.Auth.error,\n    userSignUp: state.Auth.userSignUp\n  }));\n  useEffect(() => {\n    dispatch(resetAuth());\n  }, [dispatch]);\n  /*\n  form validation schema\n  */\n\n  const loginSchema = yupResolver(yup.object().shape({\n    email: yup.string().required('Please enter Email').email('Please enter valid Email'),\n    loginpassword: yup.string().required(t('Please enter Password'))\n  }));\n  const signUpSchema = yupResolver(yup.object().shape({\n    password: yup.string().required(t('Please enter Password')),\n    fullname: yup.string().required(t('Please enter Fullname')),\n    email2: yup.string().required('Please enter Email').email('Please enter valid Email')\n  }));\n  /*\n  handle form submission\n  */\n\n  const onSubmit = formData => {\n    dispatch(loginUser(formData['email'], formData['loginpassword']));\n  };\n\n  const onSignUp = formData => {\n    dispatch(signupUser(formData['fullname'], formData['email2'], formData['password']));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [user ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this) : null, userSignUp ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/auth/confirm'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }, this) : null, /*#__PURE__*/_jsxDEV(AuthLayout, {\n      isCombineForm: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-sm-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mt-0\",\n              children: t('Sign In')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted mb-4\",\n              children: t('Enter your email address and password to access account.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              className: \"my-2\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(VerticalForm, {\n              onSubmit: onSubmit,\n              resolver: loginSchema,\n              defaultValues: {\n                email: 'minton@coderthemes.com',\n                loginpassword: 'test'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormInput, {\n                type: \"email\",\n                name: \"email\",\n                label: t('Email address'),\n                placeholder: t('hello@coderthemes.com'),\n                containerClass: 'mb-3'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                label: \"Password\",\n                type: \"password\",\n                name: \"loginpassword\",\n                placeholder: \"Enter your password\",\n                containerClass: 'mb-3',\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/auth/forget-password\",\n                  className: \"text-muted float-end\",\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: t('Forgot your password?')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  className: \"btn btn-primary float-sm-end\",\n                  disabled: loading,\n                  children: t('Log In')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                  label: \"Remember me\",\n                  type: \"checkbox\",\n                  name: \"checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-sm-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mt-0\",\n              children: t('Free Sign Up')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted mb-4\",\n              children: t(\"Don't have an account? Create your account, it takes less than a minute\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(VerticalForm, {\n              onSubmit: onSignUp,\n              resolver: signUpSchema,\n              defaultValues: {},\n              children: [/*#__PURE__*/_jsxDEV(FormInput, {\n                label: t('Full Name'),\n                type: \"text\",\n                name: \"fullname\",\n                placeholder: t('Enter your name'),\n                containerClass: 'mb-3'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                label: t('Email address'),\n                type: \"email\",\n                name: \"email2\",\n                placeholder: t('Enter your email'),\n                containerClass: 'mb-3'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                label: t('Password'),\n                type: \"password\",\n                name: \"password\",\n                placeholder: t('Enter your password'),\n                containerClass: 'mb-3'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  type: \"submit\",\n                  className: \"btn btn-success float-sm-end\",\n                  disabled: loading,\n                  children: t('Sign Up')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                  label: t('I accept Terms and Conditions'),\n                  type: \"checkbox\",\n                  name: \"checkboxsignup\",\n                  containerClass: 'pt-1'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignInSignUp, \"IXVPn1JzlAKNvoQBz47Sxcb4cnY=\", false, function () {\n  return [useTranslation, useRedux];\n});\n\n_c = SignInSignUp;\nexport default SignInSignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInSignUp\");","map":{"version":3,"sources":["C:/proyecto/practica/src/pages/auth/SignInSignUp.tsx"],"names":["React","useEffect","Row","Col","Button","Alert","Redirect","Link","yup","yupResolver","useTranslation","useRedux","resetAuth","loginUser","signupUser","VerticalForm","FormInput","AuthLayout","SignInSignUp","t","dispatch","appSelector","user","userSignUp","loading","error","state","Auth","loginSchema","object","shape","email","string","required","loginpassword","signUpSchema","password","fullname","email2","onSubmit","formData","onSignUp"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Row, Col, Button, Alert } from 'react-bootstrap';\nimport { Redirect, Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'react-i18next';\n\n// hooks\nimport { useRedux } from '../../hooks/';\n\n// actions\nimport { resetAuth, loginUser, signupUser } from '../../redux/actions';\n\n// components\nimport { VerticalForm, FormInput } from '../../components/form/';\n\nimport AuthLayout from './AuthLayout';\n\ninterface UserData {\n    loginpassword: string;\n    password: string;\n    fullname: string;\n    email: string;\n    email2: string;\n}\n\nconst SignInSignUp = () => {\n    const { t } = useTranslation();\n    const { dispatch, appSelector } = useRedux();\n\n    const { user, userSignUp, loading, error } = appSelector((state) => ({\n        user: state.Auth.user,\n        loading: state.Auth.loading,\n        error: state.Auth.error,\n        userSignUp: state.Auth.userSignUp,\n    }));\n\n    useEffect(() => {\n        dispatch(resetAuth());\n    }, [dispatch]);\n\n    /*\n    form validation schema\n    */\n    const loginSchema = yupResolver(\n        yup.object().shape({\n            email: yup.string().required('Please enter Email').email('Please enter valid Email'),\n            loginpassword: yup.string().required(t('Please enter Password')),\n        })\n    );\n\n    const signUpSchema = yupResolver(\n        yup.object().shape({\n            password: yup.string().required(t('Please enter Password')),\n            fullname: yup.string().required(t('Please enter Fullname')),\n            email2: yup.string().required('Please enter Email').email('Please enter valid Email'),\n        })\n    );\n\n    /*\n    handle form submission\n    */\n    const onSubmit = (formData: UserData) => {\n        dispatch(loginUser(formData['email'], formData['loginpassword']));\n    };\n\n    const onSignUp = (formData: UserData) => {\n        dispatch(signupUser(formData['fullname'], formData['email2'], formData['password']));\n    };\n\n    return (\n        <>\n            {user ? <Redirect to=\"/\"></Redirect> : null}\n\n            {userSignUp ? <Redirect to={'/auth/confirm'}></Redirect> : null}\n\n            <AuthLayout isCombineForm={true}>\n                <Row className=\"mt-4\">\n                    <Col lg={6}>\n                        <div className=\"p-sm-3\">\n                            <h4 className=\"mt-0\">{t('Sign In')}</h4>\n                            <p className=\"text-muted mb-4\">\n                                {t('Enter your email address and password to access account.')}\n                            </p>\n                            {error && (\n                                <Alert variant=\"danger\" className=\"my-2\">\n                                    {error}\n                                </Alert>\n                            )}\n                            <VerticalForm<UserData>\n                                onSubmit={onSubmit}\n                                resolver={loginSchema}\n                                defaultValues={{\n                                    email: 'minton@coderthemes.com',\n                                    loginpassword: 'test',\n                                }}\n                            >\n                                <FormInput\n                                    type=\"email\"\n                                    name=\"email\"\n                                    label={t('Email address')}\n                                    placeholder={t('hello@coderthemes.com')}\n                                    containerClass={'mb-3'}\n                                />\n                                <FormInput\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    name=\"loginpassword\"\n                                    placeholder=\"Enter your password\"\n                                    containerClass={'mb-3'}\n                                >\n                                    <Link to=\"/auth/forget-password\" className=\"text-muted float-end\">\n                                        <small>{t('Forgot your password?')}</small>\n                                    </Link>\n                                </FormInput>\n\n                                <div className=\"mb-3\">\n                                    <Button\n                                        variant=\"primary\"\n                                        type=\"submit\"\n                                        className=\"btn btn-primary float-sm-end\"\n                                        disabled={loading}\n                                    >\n                                        {t('Log In')}\n                                    </Button>\n                                    <FormInput label=\"Remember me\" type=\"checkbox\" name=\"checkbox\" />\n                                </div>\n                            </VerticalForm>\n                        </div>\n                    </Col>\n\n                    <Col lg={6}>\n                        <div className=\"p-sm-3\">\n                            <h4 className=\"mt-0\">{t('Free Sign Up')}</h4>\n                            <p className=\"text-muted mb-4\">\n                                {t(\"Don't have an account? Create your account, it takes less than a minute\")}\n                            </p>\n\n                            <VerticalForm<UserData> onSubmit={onSignUp} resolver={signUpSchema} defaultValues={{}}>\n                                <FormInput\n                                    label={t('Full Name')}\n                                    type=\"text\"\n                                    name=\"fullname\"\n                                    placeholder={t('Enter your name')}\n                                    containerClass={'mb-3'}\n                                />\n                                <FormInput\n                                    label={t('Email address')}\n                                    type=\"email\"\n                                    name=\"email2\"\n                                    placeholder={t('Enter your email')}\n                                    containerClass={'mb-3'}\n                                />\n                                <FormInput\n                                    label={t('Password')}\n                                    type=\"password\"\n                                    name=\"password\"\n                                    placeholder={t('Enter your password')}\n                                    containerClass={'mb-3'}\n                                />\n\n                                <div className=\"mb-0\">\n                                    <Button\n                                        variant=\"success\"\n                                        type=\"submit\"\n                                        className=\"btn btn-success float-sm-end\"\n                                        disabled={loading}\n                                    >\n                                        {t('Sign Up')}\n                                    </Button>\n                                    <FormInput\n                                        label={t('I accept Terms and Conditions')}\n                                        type=\"checkbox\"\n                                        name=\"checkboxsignup\"\n                                        containerClass={'pt-1'}\n                                    />\n                                </div>\n                            </VerticalForm>\n                        </div>\n                    </Col>\n                </Row>\n            </AuthLayout>\n        </>\n    );\n};\n\nexport default SignInSignUp;\n"]},"metadata":{},"sourceType":"module"}