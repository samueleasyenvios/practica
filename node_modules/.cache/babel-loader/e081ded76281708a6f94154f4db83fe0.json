{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\components\\\\FileUploader.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport Dropzone from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FileUploader = props => {\n  _s();\n\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  /**\n   * Handled the accepted files and shows the preview\n   */\n\n  const handleAcceptedFiles = files => {\n    var allFiles = files;\n\n    if (props.showPreview) {\n      (files || []).map(file => Object.assign(file, {\n        preview: file['type'].split('/')[0] === 'image' ? URL.createObjectURL(file) : null,\n        formattedSize: formatBytes(file.size)\n      }));\n      allFiles = [...selectedFiles];\n      allFiles.push(...files);\n      setSelectedFiles(allFiles);\n    }\n\n    if (props.onFileUpload) props.onFileUpload(allFiles);\n  };\n  /**\n   * Formats the size\n   */\n\n\n  const formatBytes = function (bytes) {\n    let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  };\n  /*\n   * Removes the selected file\n   */\n\n\n  const removeFile = fileIndex => {\n    const newFiles = [...selectedFiles];\n    newFiles.splice(fileIndex, 1);\n    setSelectedFiles(newFiles);\n    if (props.onFileUpload) props.onFileUpload(newFiles);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dropzone, { ...props,\n      onDrop: acceptedFiles => handleAcceptedFiles(acceptedFiles),\n      children: _ref => {\n        let {\n          getRootProps,\n          getInputProps\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropzone\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dz-message needsclick\",\n            ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"h2 text-muted ri-upload-2-line d-inline-block\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Drop files here or click to upload.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), props.showPreview && selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone-previews mt-3\",\n      id: \"uploadPreviewTemplate\",\n      children: (selectedFiles || []).map((f, i) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mt-1 mb-0 shadow-none border\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"align-items-center\",\n              children: [f.preview && /*#__PURE__*/_jsxDEV(Col, {\n                className: \"col-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  \"data-dz-thumbnail\": \"\",\n                  className: \"avatar-sm rounded bg-light\",\n                  alt: f.name,\n                  src: f.preview\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 45\n              }, this), !f.preview && /*#__PURE__*/_jsxDEV(Col, {\n                className: \"col-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"avatar-sm\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"avatar-title bg-primary rounded\",\n                    children: f.type.split('/')[1]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"ps-0\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"#\",\n                  className: \"text-muted fw-bold\",\n                  children: f.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-0\",\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: f.formattedSize\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"col-auto\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"#\",\n                  className: \"btn btn-link btn-lg text-muted shadow-none\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fe-x\",\n                    onClick: () => removeFile(i)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this)\n        }, i + '-file', false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FileUploader, \"6iJwk1gH4hB0xa84T6RYQXjKu58=\");\n\n_c = FileUploader;\nFileUploader.defaultProps = {\n  showPreview: true\n};\nexport default FileUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"sources":["C:/proyecto/practica/src/components/FileUploader.tsx"],"names":["React","useState","Link","Row","Col","Card","Dropzone","FileUploader","props","selectedFiles","setSelectedFiles","handleAcceptedFiles","files","allFiles","showPreview","map","file","Object","assign","preview","split","URL","createObjectURL","formattedSize","formatBytes","size","push","onFileUpload","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","removeFile","fileIndex","newFiles","splice","acceptedFiles","getRootProps","getInputProps","length","f","name","type","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport Dropzone from 'react-dropzone';\n\nexport interface FileType extends File {\n    preview?: string;\n    formattedSize?: string;\n}\n\ninterface FileUploaderProps {\n    onFileUpload?: (files: FileType[]) => void;\n    showPreview?: boolean;\n}\n\nconst FileUploader = (props: FileUploaderProps) => {\n    const [selectedFiles, setSelectedFiles] = useState<FileType[]>([]);\n\n    /**\n     * Handled the accepted files and shows the preview\n     */\n    const handleAcceptedFiles = (files: FileType[]) => {\n        var allFiles = files;\n\n        if (props.showPreview) {\n            (files || []).map((file) =>\n                Object.assign(file, {\n                    preview: file['type'].split('/')[0] === 'image' ? URL.createObjectURL(file) : null,\n                    formattedSize: formatBytes(file.size),\n                })\n            );\n            allFiles = [...selectedFiles];\n            allFiles.push(...files);\n            setSelectedFiles(allFiles);\n        }\n\n        if (props.onFileUpload) props.onFileUpload(allFiles);\n    };\n\n    /**\n     * Formats the size\n     */\n    const formatBytes = (bytes: number, decimals: number = 2) => {\n        if (bytes === 0) return '0 Bytes';\n        const k = 1024;\n        const dm = decimals < 0 ? 0 : decimals;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    };\n\n    /*\n     * Removes the selected file\n     */\n    const removeFile = (fileIndex: number) => {\n        const newFiles = [...selectedFiles];\n        newFiles.splice(fileIndex, 1);\n        setSelectedFiles(newFiles);\n        if (props.onFileUpload) props.onFileUpload(newFiles);\n    };\n\n    return (\n        <>\n            <Dropzone {...props} onDrop={(acceptedFiles) => handleAcceptedFiles(acceptedFiles)}>\n                {({ getRootProps, getInputProps }) => (\n                    <div className=\"dropzone\">\n                        <div className=\"dz-message needsclick\" {...getRootProps()}>\n                            <input {...getInputProps()} />\n                            <i className=\"h2 text-muted ri-upload-2-line d-inline-block\"></i>\n                            <h4>Drop files here or click to upload.</h4>\n                        </div>\n                    </div>\n                )}\n            </Dropzone>\n\n            {props.showPreview && selectedFiles.length > 0 && (\n                <div className=\"dropzone-previews mt-3\" id=\"uploadPreviewTemplate\">\n                    {(selectedFiles || []).map((f, i) => {\n                        return (\n                            <Card className=\"mt-1 mb-0 shadow-none border\" key={i + '-file'}>\n                                <div className=\"p-2\">\n                                    <Row className=\"align-items-center\">\n                                        {f.preview && (\n                                            <Col className=\"col-auto\">\n                                                <img\n                                                    data-dz-thumbnail=\"\"\n                                                    className=\"avatar-sm rounded bg-light\"\n                                                    alt={f.name}\n                                                    src={f.preview}\n                                                />\n                                            </Col>\n                                        )}\n                                        {!f.preview && (\n                                            <Col className=\"col-auto\">\n                                                <div className=\"avatar-sm\">\n                                                    <span className=\"avatar-title bg-primary rounded\">\n                                                        {f.type.split('/')[1]}\n                                                    </span>\n                                                </div>\n                                            </Col>\n                                        )}\n                                        <Col className=\"ps-0\">\n                                            <Link to=\"#\" className=\"text-muted fw-bold\">\n                                                {f.name}\n                                            </Link>\n                                            <p className=\"mb-0\">\n                                                <strong>{f.formattedSize}</strong>\n                                            </p>\n                                        </Col>\n                                        <Col className=\"col-auto\">\n                                            <Link to=\"#\" className=\"btn btn-link btn-lg text-muted shadow-none\">\n                                                <i className=\"fe-x\" onClick={() => removeFile(i)}></i>\n                                            </Link>\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </Card>\n                        );\n                    })}\n                </div>\n            )}\n        </>\n    );\n};\n\nFileUploader.defaultProps = {\n    showPreview: true,\n};\n\nexport default FileUploader;\n"]},"metadata":{},"sourceType":"module"}