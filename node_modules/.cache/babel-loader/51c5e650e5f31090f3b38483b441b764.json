{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\components\\\\topbar\\\\CreateNew.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateNew = _ref => {\n  _s();\n\n  let {\n    otherOptions\n  } = _ref;\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  /*\n   * toggle dropdown\n   */\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      show: dropdownOpen,\n      onToggle: toggleDropdown,\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        id: \"dropdown-notification\",\n        as: \"a\",\n        onClick: toggleDropdown,\n        className: classNames('nav-link', 'waves-effect', 'waves-light', {\n          show: dropdownOpen\n        }),\n        children: [\"Create New \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-chevron-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        className: \"dropdown-menu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: toggleDropdown,\n          children: (otherOptions || []).map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [index === otherOptions.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-divider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 75\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                className: \"dropdown-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: classNames(item.icon, 'me-1')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreateNew, \"z5Nkh6K+y+CV4vT0AOyJ2ID9tJg=\");\n\n_c = CreateNew;\nexport default CreateNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNew\");","map":{"version":3,"sources":["C:/proyecto/practica/src/components/topbar/CreateNew.tsx"],"names":["React","useState","Link","Dropdown","classNames","CreateNew","otherOptions","dropdownOpen","setDropdownOpen","toggleDropdown","show","map","item","index","length","icon","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;;AAUA,MAAMC,SAAS,GAAG,QAAsC;AAAA;;AAAA,MAArC;AAAEC,IAAAA;AAAF,GAAqC;AACpD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAU,KAAV,CAAhD;AAEA;AACJ;AACA;;AACI,QAAMQ,cAAc,GAAG,MAAM;AACzBD,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACH,GAFD;;AAIA,sBACI;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,YAAhB;AAA8B,MAAA,QAAQ,EAAEE,cAAxC;AAAA,8BACI,QAAC,QAAD,CAAU,MAAV;AACI,QAAA,EAAE,EAAC,uBADP;AAEI,QAAA,EAAE,EAAC,GAFP;AAGI,QAAA,OAAO,EAAEA,cAHb;AAII,QAAA,SAAS,EAAEL,UAAU,CAAC,UAAD,EAAa,cAAb,EAA6B,aAA7B,EAA4C;AAC7DM,UAAAA,IAAI,EAAEH;AADuD,SAA5C,CAJzB;AAAA,+CAQe;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBARf;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI,QAAC,QAAD,CAAU,IAAV;AAAe,QAAA,SAAS,EAAC,eAAzB;AAAA,+BACI;AAAK,UAAA,OAAO,EAAEE,cAAd;AAAA,oBACK,CAACH,YAAY,IAAI,EAAjB,EAAqBK,GAArB,CAAyB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvC,gCACI,QAAC,KAAD,CAAO,QAAP;AAAA,yBACKA,KAAK,KAAKP,YAAY,CAACQ,MAAb,GAAsB,CAAhC,iBAAqC;AAAK,gBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,sBAD1C,eAEI,QAAC,IAAD;AAAkB,gBAAA,EAAE,EAAC,GAArB;AAAyB,gBAAA,SAAS,EAAC,eAAnC;AAAA,wCACI;AAAG,kBAAA,SAAS,EAAEV,UAAU,CAACQ,IAAI,CAACG,IAAN,EAAY,MAAZ;AAAxB;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAOH,IAAI,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA,iBAAWH,KAAX;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA,eAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA,oBADJ;AASH,WAVA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA+BH,CAzCD;;GAAMR,S;;KAAAA,S;AA2CN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\nimport classNames from 'classnames';\n\ninterface CreateNewProps {\n    otherOptions: {\n        id: number;\n        label: string;\n        icon: string;\n    }[];\n}\n\nconst CreateNew = ({ otherOptions }: CreateNewProps) => {\n    const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n    /*\n     * toggle dropdown\n     */\n    const toggleDropdown = () => {\n        setDropdownOpen(!dropdownOpen);\n    };\n\n    return (\n        <>\n            <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n                <Dropdown.Toggle\n                    id=\"dropdown-notification\"\n                    as=\"a\"\n                    onClick={toggleDropdown}\n                    className={classNames('nav-link', 'waves-effect', 'waves-light', {\n                        show: dropdownOpen,\n                    })}\n                >\n                    Create New <i className=\"mdi mdi-chevron-down\"></i>\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"dropdown-menu\">\n                    <div onClick={toggleDropdown}>\n                        {(otherOptions || []).map((item, index) => {\n                            return (\n                                <React.Fragment key={index}>\n                                    {index === otherOptions.length - 1 && <div className=\"dropdown-divider\"></div>}\n                                    <Link key={index} to=\"#\" className=\"dropdown-item\">\n                                        <i className={classNames(item.icon, 'me-1')}></i>\n                                        <span>{item.label}</span>\n                                    </Link>\n                                </React.Fragment>\n                            );\n                        })}\n                    </div>\n                </Dropdown.Menu>\n            </Dropdown>\n        </>\n    );\n};\n\nexport default CreateNew;\n"]},"metadata":{},"sourceType":"module"}