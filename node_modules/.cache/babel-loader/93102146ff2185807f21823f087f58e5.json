{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\layouts\\\\TwoColumn\\\\IconMenu.tsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames'; // components\n\nimport Scrollbar from '../../components/Scrollbar'; // images\n\nimport logo from '../../assets/images/logo-sm.png';\n/**\n * Renders the application menu\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IconMenu = _ref => {\n  let {\n    menuItems,\n    toggleMenu,\n    activeMenuItems\n  } = _ref;\n\n  const onMenuItemClick = (e, menuItem) => {\n    const hasChildren = menuItem.children && menuItem.children.length;\n\n    if (hasChildren) {\n      e.preventDefault();\n    }\n\n    toggleMenu(menuItem, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-icon-menu h-100\",\n      children: /*#__PURE__*/_jsxDEV(Scrollbar, {\n        style: {\n          maxHeight: '100%'\n        },\n        timeout: 500,\n        scrollbarMaxSize: 320,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo,\n              alt: \"\",\n              height: \"28\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"nav flex-column\",\n          id: \"two-col-sidenav-main\",\n          children: (menuItems || []).map((item, index) => {\n            const activeParent = activeMenuItems && activeMenuItems.length && activeMenuItems[activeMenuItems.length - 1] === item['key'];\n            return /*#__PURE__*/_jsxDEV(Link, {\n              className: classNames('nav-link', 'nav-link-ref', {\n                active: activeParent\n              }),\n              to: item.children ? '/#' : item.url,\n              title: item.label,\n              \"data-menu-key\": item.key,\n              onClick: e => {\n                onMenuItemClick(e, item);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: item.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = IconMenu;\nexport default IconMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"IconMenu\");","map":{"version":3,"sources":["C:/proyecto/practica/src/layouts/TwoColumn/IconMenu.tsx"],"names":["React","Link","classNames","Scrollbar","logo","IconMenu","menuItems","toggleMenu","activeMenuItems","onMenuItemClick","e","menuItem","hasChildren","children","length","preventDefault","maxHeight","map","item","index","activeParent","active","url","label","key","icon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,4BAAtB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AAEA;AACA;AACA;;;;;AAsBA,MAAMC,QAAQ,GAAG,QAA8D;AAAA,MAA7D;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,GAA6D;;AAC3E,QAAMC,eAAe,GAAG,CAACC,CAAD,EAASC,QAAT,KAA4B;AAChD,UAAMC,WAAW,GAAGD,QAAQ,CAACE,QAAT,IAAsBF,QAAQ,CAACE,QAAT,CAAkBC,MAA5D;;AACA,QAAIF,WAAJ,EAAiB;AACbF,MAAAA,CAAC,CAACK,cAAF;AACH;;AACDR,IAAAA,UAAU,CAACI,QAAD,EAAW,IAAX,CAAV;AACH,GAND;;AAQA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEK,UAAAA,SAAS,EAAE;AAAb,SAAlB;AAAyC,QAAA,OAAO,EAAE,GAAlD;AAAuD,QAAA,gBAAgB,EAAE,GAAzE;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,SAAS,EAAC,MAAvB;AAAA,iCACI;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEZ,IAAV;AAAgB,cAAA,GAAG,EAAC,EAApB;AAAuB,cAAA,MAAM,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAiC,UAAA,EAAE,EAAC,sBAApC;AAAA,oBACK,CAACE,SAAS,IAAI,EAAd,EAAkBW,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpC,kBAAMC,YAAY,GACdZ,eAAe,IACfA,eAAe,CAACM,MADhB,IAEAN,eAAe,CAACA,eAAe,CAACM,MAAhB,GAAyB,CAA1B,CAAf,KAAgDI,IAAI,CAAC,KAAD,CAHxD;AAIA,gCACI,QAAC,IAAD;AAEI,cAAA,SAAS,EAAEhB,UAAU,CAAC,UAAD,EAAa,cAAb,EAA6B;AAC9CmB,gBAAAA,MAAM,EAAED;AADsC,eAA7B,CAFzB;AAKI,cAAA,EAAE,EAAEF,IAAI,CAACL,QAAL,GAAiB,IAAjB,GAAwBK,IAAI,CAACI,GALrC;AAMI,cAAA,KAAK,EAAEJ,IAAI,CAACK,KANhB;AAOI,+BAAeL,IAAI,CAACM,GAPxB;AAQI,cAAA,OAAO,EAAGd,CAAD,IAAY;AACjBD,gBAAAA,eAAe,CAACC,CAAD,EAAIQ,IAAJ,CAAf;AACH,eAVL;AAAA,qCAYI;AAAG,gBAAA,SAAS,EAAEA,IAAI,CAACO;AAAnB;AAAA;AAAA;AAAA;AAAA;AAZJ,eACSN,KADT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAgBH,WArBA;AADL;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAsCH,CA/CD;;KAAMd,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// components\nimport Scrollbar from '../../components/Scrollbar';\n\n// images\nimport logo from '../../assets/images/logo-sm.png';\n\n/**\n * Renders the application menu\n */\ninterface Item {\n    key: string;\n    label: string;\n    isTitle?: boolean;\n    icon?: string;\n    url?: string;\n    badge?: {\n        variant: string;\n        text: string;\n    };\n    parentKey?: string;\n    target?: string;\n    children?: Item[];\n}\n\ninterface AppMenuProps {\n    menuItems: Item[];\n    toggleMenu: (item: Item, show: boolean) => void;\n    activeMenuItems: string[];\n}\n\nconst IconMenu = ({ menuItems, toggleMenu, activeMenuItems }: AppMenuProps) => {\n    const onMenuItemClick = (e: any, menuItem: Item) => {\n        const hasChildren = menuItem.children! && menuItem.children.length;\n        if (hasChildren) {\n            e.preventDefault();\n        }\n        toggleMenu(menuItem, true);\n    };\n\n    return (\n        <>\n            <div className=\"sidebar-icon-menu h-100\">\n                <Scrollbar style={{ maxHeight: '100%' }} timeout={500} scrollbarMaxSize={320}>\n                    <Link to=\"/\" className=\"logo\">\n                        <span>\n                            <img src={logo} alt=\"\" height=\"28\" />\n                        </span>\n                    </Link>\n\n                    <nav className=\"nav flex-column\" id=\"two-col-sidenav-main\">\n                        {(menuItems || []).map((item, index) => {\n                            const activeParent =\n                                activeMenuItems &&\n                                activeMenuItems.length &&\n                                activeMenuItems[activeMenuItems.length - 1] === item['key'];\n                            return (\n                                <Link\n                                    key={index}\n                                    className={classNames('nav-link', 'nav-link-ref', {\n                                        active: activeParent,\n                                    })}\n                                    to={item.children! ? '/#' : item.url!}\n                                    title={item.label}\n                                    data-menu-key={item.key}\n                                    onClick={(e: any) => {\n                                        onMenuItemClick(e, item);\n                                    }}\n                                >\n                                    <i className={item.icon} />\n                                </Link>\n                            );\n                        })}\n                    </nav>\n                </Scrollbar>\n            </div>\n        </>\n    );\n};\n\nexport default IconMenu;\n"]},"metadata":{},"sourceType":"module"}