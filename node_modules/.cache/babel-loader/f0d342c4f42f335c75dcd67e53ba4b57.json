{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\components\\\\topbar\\\\LanguageDropdown\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\nimport classNames from 'classnames'; // flags\n\nimport enFlag from './flags/us.jpg';\nimport germanyFlag from './flags/germany.jpg';\nimport italyFlag from './flags/italy.jpg';\nimport spainFlag from './flags/spain.jpg';\nimport russiaFlag from './flags/russia.jpg'; // get the languages\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Languages = [{\n  name: 'German',\n  flag: germanyFlag\n}, {\n  name: 'Italian',\n  flag: italyFlag\n}, {\n  name: 'Spanish',\n  flag: spainFlag\n}, {\n  name: 'Russian',\n  flag: russiaFlag\n}];\n\nconst LanguageDropdown = () => {\n  _s();\n\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  /*\n   * toggle language-dropdown\n   */\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    show: dropdownOpen,\n    onToggle: toggleDropdown,\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      id: \"dropdown-languages\",\n      as: \"a\",\n      onClick: toggleDropdown,\n      className: classNames('nav-link', 'waves-effect', 'waves-light', {\n        show: dropdownOpen\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: enFlag,\n        alt: \"\",\n        height: \"14\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      className: \"dropdown-menu-end\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleDropdown,\n        children: (Languages || []).map((lang, i) => {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: \"dropdown-item notify-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: lang.flag,\n              alt: lang.name,\n              className: \"me-1\",\n              height: \"12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"align-middle\",\n              children: lang.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)]\n          }, i + '-lang', true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LanguageDropdown, \"z5Nkh6K+y+CV4vT0AOyJ2ID9tJg=\");\n\n_c = LanguageDropdown;\nexport default LanguageDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageDropdown\");","map":{"version":3,"sources":["C:/proyecto/practica/src/components/topbar/LanguageDropdown/index.tsx"],"names":["React","useState","Link","Dropdown","classNames","enFlag","germanyFlag","italyFlag","spainFlag","russiaFlag","Languages","name","flag","LanguageDropdown","dropdownOpen","setDropdownOpen","toggleDropdown","show","map","lang","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,UAAP,MAAuB,oBAAvB,C,CAEA;;;AACA,MAAMC,SAAS,GAAG,CACd;AACIC,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,IAAI,EAAEN;AAFV,CADc,EAKd;AACIK,EAAAA,IAAI,EAAE,SADV;AAEIC,EAAAA,IAAI,EAAEL;AAFV,CALc,EASd;AACII,EAAAA,IAAI,EAAE,SADV;AAEIC,EAAAA,IAAI,EAAEJ;AAFV,CATc,EAad;AACIG,EAAAA,IAAI,EAAE,SADV;AAEIC,EAAAA,IAAI,EAAEH;AAFV,CAbc,CAAlB;;AAmBA,MAAMI,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAU,KAAV,CAAhD;AAEA;AACJ;AACA;;AACI,QAAMe,cAAc,GAAG,MAAM;AACzBD,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACH,GAFD;;AAIA,sBACI,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,YAAhB;AAA8B,IAAA,QAAQ,EAAEE,cAAxC;AAAA,4BACI,QAAC,QAAD,CAAU,MAAV;AACI,MAAA,EAAE,EAAC,oBADP;AAEI,MAAA,EAAE,EAAC,GAFP;AAGI,MAAA,OAAO,EAAEA,cAHb;AAII,MAAA,SAAS,EAAEZ,UAAU,CAAC,UAAD,EAAa,cAAb,EAA6B,aAA7B,EAA4C;AAC7Da,QAAAA,IAAI,EAAEH;AADuD,OAA5C,CAJzB;AAAA,6BAQI;AAAK,QAAA,GAAG,EAAET,MAAV;AAAkB,QAAA,GAAG,EAAC,EAAtB;AAAyB,QAAA,MAAM,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,QAAD,CAAU,IAAV;AAAe,MAAA,SAAS,EAAC,mBAAzB;AAAA,6BACI;AAAK,QAAA,OAAO,EAAEW,cAAd;AAAA,kBACK,CAACN,SAAS,IAAI,EAAd,EAAkBQ,GAAlB,CAAsB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAChC,8BACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAa,YAAA,SAAS,EAAC,2BAAvB;AAAA,oCACI;AAAK,cAAA,GAAG,EAAED,IAAI,CAACP,IAAf;AAAqB,cAAA,GAAG,EAAEO,IAAI,CAACR,IAA/B;AAAqC,cAAA,SAAS,EAAC,MAA/C;AAAsD,cAAA,MAAM,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,oBADJ,EACyE,GADzE,eAEI;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA,wBAAgCQ,IAAI,CAACR;AAArC;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,aAAwDS,CAAC,GAAG,OAA5D;AAAA;AAAA;AAAA;AAAA,kBADJ;AAMH,SAPA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CApCD;;GAAMP,gB;;KAAAA,gB;AAsCN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// flags\nimport enFlag from './flags/us.jpg';\nimport germanyFlag from './flags/germany.jpg';\nimport italyFlag from './flags/italy.jpg';\nimport spainFlag from './flags/spain.jpg';\nimport russiaFlag from './flags/russia.jpg';\n\n// get the languages\nconst Languages = [\n    {\n        name: 'German',\n        flag: germanyFlag,\n    },\n    {\n        name: 'Italian',\n        flag: italyFlag,\n    },\n    {\n        name: 'Spanish',\n        flag: spainFlag,\n    },\n    {\n        name: 'Russian',\n        flag: russiaFlag,\n    },\n];\n\nconst LanguageDropdown = () => {\n    const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n    /*\n     * toggle language-dropdown\n     */\n    const toggleDropdown = () => {\n        setDropdownOpen(!dropdownOpen);\n    };\n\n    return (\n        <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n            <Dropdown.Toggle\n                id=\"dropdown-languages\"\n                as=\"a\"\n                onClick={toggleDropdown}\n                className={classNames('nav-link', 'waves-effect', 'waves-light', {\n                    show: dropdownOpen,\n                })}\n            >\n                <img src={enFlag} alt=\"\" height=\"14\" />\n            </Dropdown.Toggle>\n            <Dropdown.Menu className=\"dropdown-menu-end\">\n                <div onClick={toggleDropdown}>\n                    {(Languages || []).map((lang, i) => {\n                        return (\n                            <Link to=\"#\" className=\"dropdown-item notify-item\" key={i + '-lang'}>\n                                <img src={lang.flag} alt={lang.name} className=\"me-1\" height=\"12\" />{' '}\n                                <span className=\"align-middle\">{lang.name}</span>\n                            </Link>\n                        );\n                    })}\n                </div>\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n};\n\nexport default LanguageDropdown;\n"]},"metadata":{},"sourceType":"module"}