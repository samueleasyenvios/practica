{"ast":null,"code":"import { all, call, fork, takeEvery } from 'redux-saga/effects'; // constants\n\nimport { LayoutActionTypes } from './constants';\n/**\n * Toggle the class on body\n * @param {*} cssClass\n */\n\nfunction manageBodyClass(cssClass) {\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'toggle';\n\n  switch (action) {\n    case 'add':\n      if (document.body) document.body.classList.add(cssClass);\n      break;\n\n    case 'remove':\n      if (document.body) document.body.classList.remove(cssClass);\n      break;\n\n    default:\n      if (document.body) document.body.classList.toggle(cssClass);\n      break;\n  }\n\n  return true;\n}\n/**\n * ---------------------------------------------------------------------------------------------------------------------------\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\n * For now, we are just applying the required logic on frontend side\n * ----------------------------------------------------------------------------------------------------------------------------\n */\n\n/**\n * Show the rightsidebar\n */\n\n\nfunction* showRightSidebar() {\n  try {\n    yield call(manageBodyClass, 'right-bar-enabled', 'add');\n  } catch (error) {}\n}\n/**\n * Hides the rightsidebar\n */\n\n\nfunction* hideRightSidebar() {\n  try {\n    yield call(manageBodyClass, 'right-bar-enabled', 'remove');\n  } catch (error) {}\n}\n\nexport function* watchShowRightSidebar() {\n  yield takeEvery(LayoutActionTypes.SHOW_RIGHT_SIDEBAR, showRightSidebar);\n}\nexport function* watchHideRightSidebar() {\n  yield takeEvery(LayoutActionTypes.HIDE_RIGHT_SIDEBAR, hideRightSidebar);\n}\n\nfunction* LayoutSaga() {\n  yield all([fork(watchShowRightSidebar), fork(watchHideRightSidebar)]);\n}\n\n_c = LayoutSaga;\nexport default LayoutSaga;\n\nvar _c;\n\n$RefreshReg$(_c, \"LayoutSaga\");","map":{"version":3,"sources":["C:/proyecto/practica/src/redux/layout/saga.ts"],"names":["all","call","fork","takeEvery","LayoutActionTypes","manageBodyClass","cssClass","action","document","body","classList","add","remove","toggle","showRightSidebar","error","hideRightSidebar","watchShowRightSidebar","SHOW_RIGHT_SIDEBAR","watchHideRightSidebar","HIDE_RIGHT_SIDEBAR","LayoutSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,SAA1B,QAA2C,oBAA3C,C,CAEA;;AACA,SAASC,iBAAT,QAAkC,aAAlC;AAEA;AACA;AACA;AACA;;AACA,SAASC,eAAT,CAAyBC,QAAzB,EAA8D;AAAA,MAAnBC,MAAmB,uEAAV,QAAU;;AAC1D,UAAQA,MAAR;AACI,SAAK,KAAL;AACI,UAAIC,QAAQ,CAACC,IAAb,EAAmBD,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4BL,QAA5B;AACnB;;AACJ,SAAK,QAAL;AACI,UAAIE,QAAQ,CAACC,IAAb,EAAmBD,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+BN,QAA/B;AACnB;;AACJ;AACI,UAAIE,QAAQ,CAACC,IAAb,EAAmBD,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBG,MAAxB,CAA+BP,QAA/B;AACnB;AATR;;AAYA,SAAO,IAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACA,UAAUQ,gBAAV,GAA6B;AACzB,MAAI;AACA,UAAMb,IAAI,CAACI,eAAD,EAAkB,mBAAlB,EAAuC,KAAvC,CAAV;AACH,GAFD,CAEE,OAAOU,KAAP,EAAc,CAAE;AACrB;AAED;AACA;AACA;;;AACA,UAAUC,gBAAV,GAA6B;AACzB,MAAI;AACA,UAAMf,IAAI,CAACI,eAAD,EAAkB,mBAAlB,EAAuC,QAAvC,CAAV;AACH,GAFD,CAEE,OAAOU,KAAP,EAAc,CAAE;AACrB;;AAED,OAAO,UAAUE,qBAAV,GAAuC;AAC1C,QAAMd,SAAS,CAACC,iBAAiB,CAACc,kBAAnB,EAAuCJ,gBAAvC,CAAf;AACH;AAED,OAAO,UAAUK,qBAAV,GAAuC;AAC1C,QAAMhB,SAAS,CAACC,iBAAiB,CAACgB,kBAAnB,EAAuCJ,gBAAvC,CAAf;AACH;;AAED,UAAUK,UAAV,GAA4B;AACxB,QAAMrB,GAAG,CAAC,CAACE,IAAI,CAACe,qBAAD,CAAL,EAA8Bf,IAAI,CAACiB,qBAAD,CAAlC,CAAD,CAAT;AACH;;KAFSE,U;AAIV,eAAeA,UAAf","sourcesContent":["import { all, call, fork, takeEvery } from 'redux-saga/effects';\n\n// constants\nimport { LayoutActionTypes } from './constants';\n\n/**\n * Toggle the class on body\n * @param {*} cssClass\n */\nfunction manageBodyClass(cssClass: string, action = 'toggle') {\n    switch (action) {\n        case 'add':\n            if (document.body) document.body.classList.add(cssClass);\n            break;\n        case 'remove':\n            if (document.body) document.body.classList.remove(cssClass);\n            break;\n        default:\n            if (document.body) document.body.classList.toggle(cssClass);\n            break;\n    }\n\n    return true;\n}\n\n/**\n * ---------------------------------------------------------------------------------------------------------------------------\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\n * For now, we are just applying the required logic on frontend side\n * ----------------------------------------------------------------------------------------------------------------------------\n */\n\n/**\n * Show the rightsidebar\n */\nfunction* showRightSidebar() {\n    try {\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\n    } catch (error) {}\n}\n\n/**\n * Hides the rightsidebar\n */\nfunction* hideRightSidebar() {\n    try {\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\n    } catch (error) {}\n}\n\nexport function* watchShowRightSidebar(): any {\n    yield takeEvery(LayoutActionTypes.SHOW_RIGHT_SIDEBAR, showRightSidebar);\n}\n\nexport function* watchHideRightSidebar(): any {\n    yield takeEvery(LayoutActionTypes.HIDE_RIGHT_SIDEBAR, hideRightSidebar);\n}\n\nfunction* LayoutSaga(): any {\n    yield all([fork(watchShowRightSidebar), fork(watchHideRightSidebar)]);\n}\n\nexport default LayoutSaga;\n"]},"metadata":{},"sourceType":"module"}