{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\components\\\\Portlet.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Card, Collapse } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n/**\n * Portlet\n */\nconst BasicPortlet = props => {\n  _s();\n\n  const children = props['children'] || null;\n  const cardTitle = props['cardTitle'] || 'Card Title';\n  const [collapse, setCollapse] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [hidden, setHidden] = useState(false);\n  /**\n   * Toggle the body\n   */\n\n  const toggleContent = () => {\n    setCollapse(!collapse);\n  };\n  /**\n   * Reload the content\n   */\n\n\n  const reloadContent = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 500 + 300 * (Math.random() * 5));\n  };\n  /**\n   * remove the portlet\n   */\n\n\n  const remove = () => {\n    setHidden(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !hidden ? /*#__PURE__*/_jsxDEV(Card, {\n      className: classNames(props['className']),\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-disabled\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-portlets-loader\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border text-primary m-2\",\n            role: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-widgets\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            onClick: reloadContent,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            onClick: toggleContent,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: classNames('mdi', {\n                'mdi-minus': collapse,\n                'mdi-plus': !collapse\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            onClick: remove,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: classNames('mb-0', props['titleClass']),\n          children: cardTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: collapse,\n          className: \"pt-3\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(BasicPortlet, \"7rvhgBvjFUXNHN+39EYkVHbesKI=\");\n\n_c = BasicPortlet;\n\nconst PortletWithHeader = props => {\n  _s2();\n\n  const children = props['children'] || null;\n  const cardTitle = props['cardTitle'] || 'Card Title';\n  const [collapse, setCollapse] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [hidden, setHidden] = useState(false);\n  /**\n   * Toggle the body\n   */\n\n  const toggleContent = () => {\n    setCollapse(!collapse);\n  };\n  /**\n   * Reload the content\n   */\n\n\n  const reloadContent = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 500 + 300 * (Math.random() * 5));\n  };\n  /**\n   * remove the portlet\n   */\n\n\n  const remove = () => {\n    setHidden(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !hidden ? /*#__PURE__*/_jsxDEV(Card, {\n      className: classNames(props['className']),\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-disabled\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-portlets-loader\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border text-primary m-2\",\n            role: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n        className: classNames(props['headerClass']),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-widgets\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            onClick: reloadContent,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            onClick: toggleContent,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: classNames('mdi', {\n                'mdi-minus': collapse,\n                'mdi-plus': !collapse\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            onClick: remove,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: classNames('mb-0', props['titleClass']),\n          children: cardTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: collapse,\n        className: \"pt-3\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false);\n};\n\n_s2(PortletWithHeader, \"7rvhgBvjFUXNHN+39EYkVHbesKI=\");\n\n_c2 = PortletWithHeader;\nexport { BasicPortlet, PortletWithHeader };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BasicPortlet\");\n$RefreshReg$(_c2, \"PortletWithHeader\");","map":{"version":3,"sources":["C:/proyecto/practica/src/components/Portlet.tsx"],"names":["React","useState","Link","classNames","Card","Collapse","BasicPortlet","props","children","cardTitle","collapse","setCollapse","loading","setLoading","hidden","setHidden","toggleContent","reloadContent","setTimeout","Math","random","remove","PortletWithHeader"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Card, Collapse } from 'react-bootstrap';\n\ninterface PortletProps {\n    className?: string;\n    children?: any;\n    cardTitle?: string;\n    titleClass?: string;\n    headerClass?: string;\n}\n\n/**\n * Portlet\n */\nconst BasicPortlet = (props: PortletProps) => {\n    const children = props['children'] || null;\n    const cardTitle = props['cardTitle'] || 'Card Title';\n\n    const [collapse, setCollapse] = useState<boolean>(true);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [hidden, setHidden] = useState<boolean>(false);\n\n    /**\n     * Toggle the body\n     */\n    const toggleContent = () => {\n        setCollapse(!collapse);\n    };\n\n    /**\n     * Reload the content\n     */\n    const reloadContent = () => {\n        setLoading(true);\n        setTimeout(() => {\n            setLoading(false);\n        }, 500 + 300 * (Math.random() * 5));\n    };\n\n    /**\n     * remove the portlet\n     */\n    const remove = () => {\n        setHidden(true);\n    };\n\n    return (\n        <>\n            {!hidden ? (\n                <Card className={classNames(props['className'])}>\n                    {loading && (\n                        <div className=\"card-disabled\">\n                            <div className=\"card-portlets-loader\">\n                                <div className=\"spinner-border text-primary m-2\" role=\"status\"></div>\n                            </div>\n                        </div>\n                    )}\n\n                    <Card.Body>\n                        <div className=\"card-widgets\">\n                            <Link to=\"#\" onClick={reloadContent}>\n                                <i className=\"mdi mdi-refresh\"></i>\n                            </Link>\n                            <Link to=\"#\" onClick={toggleContent}>\n                                <i\n                                    className={classNames('mdi', {\n                                        'mdi-minus': collapse,\n                                        'mdi-plus': !collapse,\n                                    })}\n                                ></i>\n                            </Link>\n                            <Link to=\"#\" onClick={remove}>\n                                <i className=\"mdi mdi-close\"></i>\n                            </Link>\n                        </div>\n\n                        <h5 className={classNames('mb-0', props['titleClass'])}>{cardTitle}</h5>\n\n                        <Collapse in={collapse} className=\"pt-3\">\n                            {children}\n                        </Collapse>\n                    </Card.Body>\n                </Card>\n            ) : null}\n        </>\n    );\n};\n\nconst PortletWithHeader = (props: PortletProps) => {\n    const children = props['children'] || null;\n    const cardTitle = props['cardTitle'] || 'Card Title';\n\n    const [collapse, setCollapse] = useState<boolean>(true);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [hidden, setHidden] = useState<boolean>(false);\n\n    /**\n     * Toggle the body\n     */\n    const toggleContent = () => {\n        setCollapse(!collapse);\n    };\n\n    /**\n     * Reload the content\n     */\n    const reloadContent = () => {\n        setLoading(true);\n        setTimeout(() => {\n            setLoading(false);\n        }, 500 + 300 * (Math.random() * 5));\n    };\n\n    /**\n     * remove the portlet\n     */\n    const remove = () => {\n        setHidden(true);\n    };\n\n    return (\n        <>\n            {!hidden ? (\n                <Card className={classNames(props['className'])}>\n                    {loading && (\n                        <div className=\"card-disabled\">\n                            <div className=\"card-portlets-loader\">\n                                <div className=\"spinner-border text-primary m-2\" role=\"status\"></div>\n                            </div>\n                        </div>\n                    )}\n\n                    <Card.Header className={classNames(props['headerClass'])}>\n                        <div className=\"card-widgets\">\n                            <Link to=\"#\" onClick={reloadContent}>\n                                <i className=\"mdi mdi-refresh\"></i>\n                            </Link>\n                            <Link to=\"#\" onClick={toggleContent}>\n                                <i\n                                    className={classNames('mdi', {\n                                        'mdi-minus': collapse,\n                                        'mdi-plus': !collapse,\n                                    })}\n                                ></i>\n                            </Link>\n                            <Link to=\"#\" onClick={remove}>\n                                <i className=\"mdi mdi-close\"></i>\n                            </Link>\n                        </div>\n\n                        <h5 className={classNames('mb-0', props['titleClass'])}>{cardTitle}</h5>\n                    </Card.Header>\n                    <Collapse in={collapse} className=\"pt-3\">\n                        <Card.Body>{children}</Card.Body>\n                    </Collapse>\n                </Card>\n            ) : null}\n        </>\n    );\n};\n\nexport { BasicPortlet, PortletWithHeader };\n"]},"metadata":{},"sourceType":"module"}