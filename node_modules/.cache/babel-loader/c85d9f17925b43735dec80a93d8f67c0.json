{"ast":null,"code":"import { DOWN, UP } from '../constants';\n\nfunction skipDisabledOptions(currentIndex, keyCode, items) {\n  var newIndex = currentIndex;\n\n  while (items[newIndex] && items[newIndex].disabled) {\n    newIndex += keyCode === UP ? -1 : 1;\n  }\n\n  return newIndex;\n}\n\nexport default function getUpdatedActiveIndex(currentIndex, keyCode, items) {\n  var newIndex = currentIndex; // Increment or decrement index based on user keystroke.\n\n  newIndex += keyCode === UP ? -1 : 1; // Skip over any disabled options.\n\n  newIndex = skipDisabledOptions(newIndex, keyCode, items); // If we've reached the end, go back to the beginning or vice-versa.\n\n  if (newIndex === items.length) {\n    newIndex = -1;\n  } else if (newIndex === -2) {\n    newIndex = items.length - 1; // Skip over any disabled options.\n\n    newIndex = skipDisabledOptions(newIndex, keyCode, items);\n  }\n\n  return newIndex;\n}","map":{"version":3,"sources":["C:/proyecto/practica/node_modules/react-bootstrap-typeahead/es/utils/getUpdatedActiveIndex.js"],"names":["DOWN","UP","skipDisabledOptions","currentIndex","keyCode","items","newIndex","disabled","getUpdatedActiveIndex","length"],"mappings":"AAAA,SAASA,IAAT,EAAeC,EAAf,QAAyB,cAAzB;;AAEA,SAASC,mBAAT,CAA6BC,YAA7B,EAA2CC,OAA3C,EAAoDC,KAApD,EAA2D;AACzD,MAAIC,QAAQ,GAAGH,YAAf;;AAEA,SAAOE,KAAK,CAACC,QAAD,CAAL,IAAmBD,KAAK,CAACC,QAAD,CAAL,CAAgBC,QAA1C,EAAoD;AAClDD,IAAAA,QAAQ,IAAIF,OAAO,KAAKH,EAAZ,GAAiB,CAAC,CAAlB,GAAsB,CAAlC;AACD;;AAED,SAAOK,QAAP;AACD;;AAED,eAAe,SAASE,qBAAT,CAA+BL,YAA/B,EAA6CC,OAA7C,EAAsDC,KAAtD,EAA6D;AAC1E,MAAIC,QAAQ,GAAGH,YAAf,CAD0E,CAC7C;;AAE7BG,EAAAA,QAAQ,IAAIF,OAAO,KAAKH,EAAZ,GAAiB,CAAC,CAAlB,GAAsB,CAAlC,CAH0E,CAGrC;;AAErCK,EAAAA,QAAQ,GAAGJ,mBAAmB,CAACI,QAAD,EAAWF,OAAX,EAAoBC,KAApB,CAA9B,CAL0E,CAKhB;;AAE1D,MAAIC,QAAQ,KAAKD,KAAK,CAACI,MAAvB,EAA+B;AAC7BH,IAAAA,QAAQ,GAAG,CAAC,CAAZ;AACD,GAFD,MAEO,IAAIA,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AAC1BA,IAAAA,QAAQ,GAAGD,KAAK,CAACI,MAAN,GAAe,CAA1B,CAD0B,CACG;;AAE7BH,IAAAA,QAAQ,GAAGJ,mBAAmB,CAACI,QAAD,EAAWF,OAAX,EAAoBC,KAApB,CAA9B;AACD;;AAED,SAAOC,QAAP;AACD","sourcesContent":["import { DOWN, UP } from '../constants';\n\nfunction skipDisabledOptions(currentIndex, keyCode, items) {\n  var newIndex = currentIndex;\n\n  while (items[newIndex] && items[newIndex].disabled) {\n    newIndex += keyCode === UP ? -1 : 1;\n  }\n\n  return newIndex;\n}\n\nexport default function getUpdatedActiveIndex(currentIndex, keyCode, items) {\n  var newIndex = currentIndex; // Increment or decrement index based on user keystroke.\n\n  newIndex += keyCode === UP ? -1 : 1; // Skip over any disabled options.\n\n  newIndex = skipDisabledOptions(newIndex, keyCode, items); // If we've reached the end, go back to the beginning or vice-versa.\n\n  if (newIndex === items.length) {\n    newIndex = -1;\n  } else if (newIndex === -2) {\n    newIndex = items.length - 1; // Skip over any disabled options.\n\n    newIndex = skipDisabledOptions(newIndex, keyCode, items);\n  }\n\n  return newIndex;\n}"]},"metadata":{},"sourceType":"module"}