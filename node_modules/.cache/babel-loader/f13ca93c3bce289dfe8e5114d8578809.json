{"ast":null,"code":"import jwtDecode from 'jwt-decode';\nimport axios from 'axios';\nimport config from '../../config'; // content type\n\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.baseURL = config.API_URL; // intercepting to capture errors\n\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  let message;\n\n  if (error && error.response && error.response.status === 404) {// window.location.href = '/not-found';\n  } else if (error && error.response && error.response.status === 403) {\n    window.location.href = '/access-denied';\n  } else {\n    switch (error.response.status) {\n      case 401:\n        message = 'Invalid credentials';\n        break;\n\n      case 403:\n        message = 'Access Forbidden';\n        break;\n\n      case 404:\n        message = 'Sorry! the data you are looking for could not be found';\n        break;\n\n      default:\n        {\n          message = error.response && error.response.data ? error.response.data['message'] : error.message || error;\n        }\n    }\n\n    return Promise.reject(message);\n  }\n});\nconst AUTH_SESSION_KEY = 'minton_user';\n/**\n * Sets the default authorization\n * @param {*} token\n */\n\nconst setAuthorization = token => {\n  if (token) axios.defaults.headers.common['Authorization'] = 'JWT ' + token;else delete axios.defaults.headers.common['Authorization'];\n};\n\nconst getUserFromCookie = () => {\n  const user = sessionStorage.getItem(AUTH_SESSION_KEY);\n  return user ? typeof user == 'object' ? user : JSON.parse(user) : null;\n};\n\nclass APICore {\n  constructor() {\n    this.get = (url, params) => {\n      let response;\n\n      if (params) {\n        var queryString = params ? Object.keys(params).map(key => key + '=' + params[key]).join('&') : '';\n        response = axios.get(`${url}?${queryString}`, params);\n      } else {\n        response = axios.get(`${url}`, params);\n      }\n\n      return response;\n    };\n\n    this.getFile = (url, params) => {\n      let response;\n\n      if (params) {\n        var queryString = params ? Object.keys(params).map(key => key + '=' + params[key]).join('&') : '';\n        response = axios.get(`${url}?${queryString}`, {\n          responseType: 'blob'\n        });\n      } else {\n        response = axios.get(`${url}`, {\n          responseType: 'blob'\n        });\n      }\n\n      return response;\n    };\n\n    this.getMultiple = (urls, params) => {\n      const reqs = [];\n      let queryString = '';\n\n      if (params) {\n        queryString = params ? Object.keys(params).map(key => key + '=' + params[key]).join('&') : '';\n      }\n\n      for (const url of urls) {\n        reqs.push(axios.get(`${url}?${queryString}`));\n      }\n\n      return axios.all(reqs);\n    };\n\n    this.create = (url, data) => {\n      return axios.post(url, data);\n    };\n\n    this.updatePatch = (url, data) => {\n      return axios.patch(url, data);\n    };\n\n    this.update = (url, data) => {\n      return axios.put(url, data);\n    };\n\n    this.delete = url => {\n      return axios.delete(url);\n    };\n\n    this.createWithFile = (url, data) => {\n      const formData = new FormData();\n\n      for (const k in data) {\n        formData.append(k, data[k]);\n      }\n\n      const config = {\n        headers: { ...axios.defaults.headers,\n          'content-type': 'multipart/form-data'\n        }\n      };\n      return axios.post(url, formData, config);\n    };\n\n    this.updateWithFile = (url, data) => {\n      const formData = new FormData();\n\n      for (const k in data) {\n        formData.append(k, data[k]);\n      }\n\n      const config = {\n        headers: { ...axios.defaults.headers,\n          'content-type': 'multipart/form-data'\n        }\n      };\n      return axios.patch(url, formData, config);\n    };\n\n    this.isUserAuthenticated = () => {\n      const user = this.getLoggedInUser();\n\n      if (!user) {\n        return false;\n      }\n\n      const decoded = jwtDecode(user.token);\n      const currentTime = Date.now() / 1000;\n\n      if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.setLoggedInUser = session => {\n      if (session) sessionStorage.setItem(AUTH_SESSION_KEY, JSON.stringify(session));else {\n        sessionStorage.removeItem(AUTH_SESSION_KEY);\n      }\n    };\n\n    this.getLoggedInUser = () => {\n      return getUserFromCookie();\n    };\n\n    this.setUserInSession = modifiedUser => {\n      let userInfo = sessionStorage.getItem(AUTH_SESSION_KEY);\n\n      if (userInfo) {\n        const {\n          token,\n          user\n        } = JSON.parse(userInfo);\n        this.setLoggedInUser({\n          token,\n          ...user,\n          ...modifiedUser\n        });\n      }\n    };\n  }\n\n}\n/*\nCheck if token available in session\n*/\n\n\nlet user = getUserFromCookie();\n\nif (user) {\n  const {\n    token\n  } = user;\n\n  if (token) {\n    setAuthorization(token);\n  }\n}\n\nexport { APICore, setAuthorization };","map":{"version":3,"sources":["C:/proyecto/practica/src/helpers/api/apiCore.ts"],"names":["jwtDecode","axios","config","defaults","headers","post","baseURL","API_URL","interceptors","response","use","error","message","status","window","location","href","data","Promise","reject","AUTH_SESSION_KEY","setAuthorization","token","common","getUserFromCookie","user","sessionStorage","getItem","JSON","parse","APICore","get","url","params","queryString","Object","keys","map","key","join","getFile","responseType","getMultiple","urls","reqs","push","all","create","updatePatch","patch","update","put","delete","createWithFile","formData","FormData","k","append","updateWithFile","isUserAuthenticated","getLoggedInUser","decoded","currentTime","Date","now","exp","console","warn","setLoggedInUser","session","setItem","stringify","removeItem","setUserInSession","modifiedUser","userInfo"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;;AACAD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,kBAA9C;AACAJ,KAAK,CAACE,QAAN,CAAeG,OAAf,GAAyBJ,MAAM,CAACK,OAAhC,C,CAEA;;AACAN,KAAK,CAACO,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACKD,QAAD,IAAc;AACV,SAAOA,QAAP;AACH,CAHL,EAIKE,KAAD,IAAW;AACP;AACA,MAAIC,OAAJ;;AAEA,MAAID,KAAK,IAAIA,KAAK,CAACF,QAAf,IAA2BE,KAAK,CAACF,QAAN,CAAeI,MAAf,KAA0B,GAAzD,EAA8D,CAC1D;AACH,GAFD,MAEO,IAAIF,KAAK,IAAIA,KAAK,CAACF,QAAf,IAA2BE,KAAK,CAACF,QAAN,CAAeI,MAAf,KAA0B,GAAzD,EAA8D;AACjEC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,gBAAvB;AACH,GAFM,MAEA;AACH,YAAQL,KAAK,CAACF,QAAN,CAAeI,MAAvB;AACI,WAAK,GAAL;AACID,QAAAA,OAAO,GAAG,qBAAV;AACA;;AACJ,WAAK,GAAL;AACIA,QAAAA,OAAO,GAAG,kBAAV;AACA;;AACJ,WAAK,GAAL;AACIA,QAAAA,OAAO,GAAG,wDAAV;AACA;;AACJ;AAAS;AACLA,UAAAA,OAAO,GACHD,KAAK,CAACF,QAAN,IAAkBE,KAAK,CAACF,QAAN,CAAeQ,IAAjC,GAAwCN,KAAK,CAACF,QAAN,CAAeQ,IAAf,CAAoB,SAApB,CAAxC,GAAyEN,KAAK,CAACC,OAAN,IAAiBD,KAD9F;AAEH;AAbL;;AAeA,WAAOO,OAAO,CAACC,MAAR,CAAeP,OAAf,CAAP;AACH;AACJ,CA9BL;AAiCA,MAAMQ,gBAAgB,GAAG,aAAzB;AAEA;AACA;AACA;AACA;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAA0B;AAC/C,MAAIA,KAAJ,EAAWrB,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBmB,MAAvB,CAA8B,eAA9B,IAAiD,SAASD,KAA1D,CAAX,KACK,OAAOrB,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBmB,MAAvB,CAA8B,eAA9B,CAAP;AACR,CAHD;;AAKA,MAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAMC,IAAI,GAAGC,cAAc,CAACC,OAAf,CAAuBP,gBAAvB,CAAb;AACA,SAAOK,IAAI,GAAI,OAAOA,IAAP,IAAe,QAAf,GAA0BA,IAA1B,GAAiCG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAArC,GAAyD,IAApE;AACH,CAHD;;AAIA,MAAMK,OAAN,CAAc;AAAA;AAAA,SAIVC,GAJU,GAIJ,CAACC,GAAD,EAAcC,MAAd,KAA8B;AAChC,UAAIxB,QAAJ;;AACA,UAAIwB,MAAJ,EAAY;AACR,YAAIC,WAAW,GAAGD,MAAM,GAClBE,MAAM,CAACC,IAAP,CAAYH,MAAZ,EACKI,GADL,CACUC,GAAD,IAASA,GAAG,GAAG,GAAN,GAAYL,MAAM,CAACK,GAAD,CADpC,EAEKC,IAFL,CAEU,GAFV,CADkB,GAIlB,EAJN;AAKA9B,QAAAA,QAAQ,GAAGR,KAAK,CAAC8B,GAAN,CAAW,GAAEC,GAAI,IAAGE,WAAY,EAAhC,EAAmCD,MAAnC,CAAX;AACH,OAPD,MAOO;AACHxB,QAAAA,QAAQ,GAAGR,KAAK,CAAC8B,GAAN,CAAW,GAAEC,GAAI,EAAjB,EAAoBC,MAApB,CAAX;AACH;;AACD,aAAOxB,QAAP;AACH,KAjBS;;AAAA,SAmBV+B,OAnBU,GAmBA,CAACR,GAAD,EAAcC,MAAd,KAA8B;AACpC,UAAIxB,QAAJ;;AACA,UAAIwB,MAAJ,EAAY;AACR,YAAIC,WAAW,GAAGD,MAAM,GAClBE,MAAM,CAACC,IAAP,CAAYH,MAAZ,EACKI,GADL,CACUC,GAAD,IAASA,GAAG,GAAG,GAAN,GAAYL,MAAM,CAACK,GAAD,CADpC,EAEKC,IAFL,CAEU,GAFV,CADkB,GAIlB,EAJN;AAKA9B,QAAAA,QAAQ,GAAGR,KAAK,CAAC8B,GAAN,CAAW,GAAEC,GAAI,IAAGE,WAAY,EAAhC,EAAmC;AAAEO,UAAAA,YAAY,EAAE;AAAhB,SAAnC,CAAX;AACH,OAPD,MAOO;AACHhC,QAAAA,QAAQ,GAAGR,KAAK,CAAC8B,GAAN,CAAW,GAAEC,GAAI,EAAjB,EAAoB;AAAES,UAAAA,YAAY,EAAE;AAAhB,SAApB,CAAX;AACH;;AACD,aAAOhC,QAAP;AACH,KAhCS;;AAAA,SAkCViC,WAlCU,GAkCI,CAACC,IAAD,EAAeV,MAAf,KAA+B;AACzC,YAAMW,IAAI,GAAG,EAAb;AACA,UAAIV,WAAW,GAAG,EAAlB;;AACA,UAAID,MAAJ,EAAY;AACRC,QAAAA,WAAW,GAAGD,MAAM,GACdE,MAAM,CAACC,IAAP,CAAYH,MAAZ,EACKI,GADL,CACUC,GAAD,IAASA,GAAG,GAAG,GAAN,GAAYL,MAAM,CAACK,GAAD,CADpC,EAEKC,IAFL,CAEU,GAFV,CADc,GAId,EAJN;AAKH;;AAED,WAAK,MAAMP,GAAX,IAAkBW,IAAlB,EAAwB;AACpBC,QAAAA,IAAI,CAACC,IAAL,CAAU5C,KAAK,CAAC8B,GAAN,CAAW,GAAEC,GAAI,IAAGE,WAAY,EAAhC,CAAV;AACH;;AACD,aAAOjC,KAAK,CAAC6C,GAAN,CAAUF,IAAV,CAAP;AACH,KAjDS;;AAAA,SAsDVG,MAtDU,GAsDD,CAACf,GAAD,EAAcf,IAAd,KAA4B;AACjC,aAAOhB,KAAK,CAACI,IAAN,CAAW2B,GAAX,EAAgBf,IAAhB,CAAP;AACH,KAxDS;;AAAA,SA6DV+B,WA7DU,GA6DI,CAAChB,GAAD,EAAcf,IAAd,KAA4B;AACtC,aAAOhB,KAAK,CAACgD,KAAN,CAAYjB,GAAZ,EAAiBf,IAAjB,CAAP;AACH,KA/DS;;AAAA,SAoEViC,MApEU,GAoED,CAAClB,GAAD,EAAcf,IAAd,KAA4B;AACjC,aAAOhB,KAAK,CAACkD,GAAN,CAAUnB,GAAV,EAAef,IAAf,CAAP;AACH,KAtES;;AAAA,SA2EVmC,MA3EU,GA2EApB,GAAD,IAAiB;AACtB,aAAO/B,KAAK,CAACmD,MAAN,CAAapB,GAAb,CAAP;AACH,KA7ES;;AAAA,SAkFVqB,cAlFU,GAkFO,CAACrB,GAAD,EAAcf,IAAd,KAA4B;AACzC,YAAMqC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AACA,WAAK,MAAMC,CAAX,IAAgBvC,IAAhB,EAAsB;AAClBqC,QAAAA,QAAQ,CAACG,MAAT,CAAgBD,CAAhB,EAAmBvC,IAAI,CAACuC,CAAD,CAAvB;AACH;;AAED,YAAMtD,MAAW,GAAG;AAChBE,QAAAA,OAAO,EAAE,EACL,GAAGH,KAAK,CAACE,QAAN,CAAeC,OADb;AAEL,0BAAgB;AAFX;AADO,OAApB;AAMA,aAAOH,KAAK,CAACI,IAAN,CAAW2B,GAAX,EAAgBsB,QAAhB,EAA0BpD,MAA1B,CAAP;AACH,KA/FS;;AAAA,SAoGVwD,cApGU,GAoGO,CAAC1B,GAAD,EAAcf,IAAd,KAA4B;AACzC,YAAMqC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AACA,WAAK,MAAMC,CAAX,IAAgBvC,IAAhB,EAAsB;AAClBqC,QAAAA,QAAQ,CAACG,MAAT,CAAgBD,CAAhB,EAAmBvC,IAAI,CAACuC,CAAD,CAAvB;AACH;;AAED,YAAMtD,MAAW,GAAG;AAChBE,QAAAA,OAAO,EAAE,EACL,GAAGH,KAAK,CAACE,QAAN,CAAeC,OADb;AAEL,0BAAgB;AAFX;AADO,OAApB;AAMA,aAAOH,KAAK,CAACgD,KAAN,CAAYjB,GAAZ,EAAiBsB,QAAjB,EAA2BpD,MAA3B,CAAP;AACH,KAjHS;;AAAA,SAmHVyD,mBAnHU,GAmHY,MAAM;AACxB,YAAMlC,IAAI,GAAG,KAAKmC,eAAL,EAAb;;AAEA,UAAI,CAACnC,IAAL,EAAW;AACP,eAAO,KAAP;AACH;;AACD,YAAMoC,OAAY,GAAG7D,SAAS,CAACyB,IAAI,CAACH,KAAN,CAA9B;AACA,YAAMwC,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC;;AACA,UAAIH,OAAO,CAACI,GAAR,GAAcH,WAAlB,EAA+B;AAC3BI,QAAAA,OAAO,CAACC,IAAR,CAAa,sBAAb;AACA,eAAO,KAAP;AACH,OAHD,MAGO;AACH,eAAO,IAAP;AACH;AACJ,KAjIS;;AAAA,SAmIVC,eAnIU,GAmISC,OAAD,IAAkB;AAChC,UAAIA,OAAJ,EAAa3C,cAAc,CAAC4C,OAAf,CAAuBlD,gBAAvB,EAAyCQ,IAAI,CAAC2C,SAAL,CAAeF,OAAf,CAAzC,EAAb,KACK;AACD3C,QAAAA,cAAc,CAAC8C,UAAf,CAA0BpD,gBAA1B;AACH;AACJ,KAxIS;;AAAA,SA4IVwC,eA5IU,GA4IQ,MAAM;AACpB,aAAOpC,iBAAiB,EAAxB;AACH,KA9IS;;AAAA,SAgJViD,gBAhJU,GAgJUC,YAAD,IAAuB;AACtC,UAAIC,QAAQ,GAAGjD,cAAc,CAACC,OAAf,CAAuBP,gBAAvB,CAAf;;AACA,UAAIuD,QAAJ,EAAc;AACV,cAAM;AAAErD,UAAAA,KAAF;AAASG,UAAAA;AAAT,YAAkBG,IAAI,CAACC,KAAL,CAAW8C,QAAX,CAAxB;AACA,aAAKP,eAAL,CAAqB;AAAE9C,UAAAA,KAAF;AAAS,aAAGG,IAAZ;AAAkB,aAAGiD;AAArB,SAArB;AACH;AACJ,KAtJS;AAAA;;AAAA;AAyJd;AACA;AACA;;;AACA,IAAIjD,IAAI,GAAGD,iBAAiB,EAA5B;;AACA,IAAIC,IAAJ,EAAU;AACN,QAAM;AAAEH,IAAAA;AAAF,MAAYG,IAAlB;;AACA,MAAIH,KAAJ,EAAW;AACPD,IAAAA,gBAAgB,CAACC,KAAD,CAAhB;AACH;AACJ;;AAED,SAASQ,OAAT,EAAkBT,gBAAlB","sourcesContent":["import jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n\nimport config from '../../config';\n\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.baseURL = config.API_URL;\n\n// intercepting to capture errors\naxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        let message;\n\n        if (error && error.response && error.response.status === 404) {\n            // window.location.href = '/not-found';\n        } else if (error && error.response && error.response.status === 403) {\n            window.location.href = '/access-denied';\n        } else {\n            switch (error.response.status) {\n                case 401:\n                    message = 'Invalid credentials';\n                    break;\n                case 403:\n                    message = 'Access Forbidden';\n                    break;\n                case 404:\n                    message = 'Sorry! the data you are looking for could not be found';\n                    break;\n                default: {\n                    message =\n                        error.response && error.response.data ? error.response.data['message'] : error.message || error;\n                }\n            }\n            return Promise.reject(message);\n        }\n    }\n);\n\nconst AUTH_SESSION_KEY = 'minton_user';\n\n/**\n * Sets the default authorization\n * @param {*} token\n */\nconst setAuthorization = (token: string | null) => {\n    if (token) axios.defaults.headers.common['Authorization'] = 'JWT ' + token;\n    else delete axios.defaults.headers.common['Authorization'];\n};\n\nconst getUserFromCookie = () => {\n    const user = sessionStorage.getItem(AUTH_SESSION_KEY);\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\nclass APICore {\n    /**\n     * Fetches data from given url\n     */\n    get = (url: string, params: any) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, params);\n        } else {\n            response = axios.get(`${url}`, params);\n        }\n        return response;\n    };\n\n    getFile = (url: string, params: any) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, { responseType: 'blob' });\n        } else {\n            response = axios.get(`${url}`, { responseType: 'blob' });\n        }\n        return response;\n    };\n\n    getMultiple = (urls: string, params: any) => {\n        const reqs = [];\n        let queryString = '';\n        if (params) {\n            queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n        }\n\n        for (const url of urls) {\n            reqs.push(axios.get(`${url}?${queryString}`));\n        }\n        return axios.all(reqs);\n    };\n\n    /**\n     * post given data to url\n     */\n    create = (url: string, data: any) => {\n        return axios.post(url, data);\n    };\n\n    /**\n     * Updates patch data\n     */\n    updatePatch = (url: string, data: any) => {\n        return axios.patch(url, data);\n    };\n\n    /**\n     * Updates data\n     */\n    update = (url: string, data: any) => {\n        return axios.put(url, data);\n    };\n\n    /**\n     * Deletes data\n     */\n    delete = (url: string) => {\n        return axios.delete(url);\n    };\n\n    /**\n     * post given data to url with file\n     */\n    createWithFile = (url: string, data: any) => {\n        const formData = new FormData();\n        for (const k in data) {\n            formData.append(k, data[k]);\n        }\n\n        const config: any = {\n            headers: {\n                ...axios.defaults.headers,\n                'content-type': 'multipart/form-data',\n            },\n        };\n        return axios.post(url, formData, config);\n    };\n\n    /**\n     * post given data to url with file\n     */\n    updateWithFile = (url: string, data: any) => {\n        const formData = new FormData();\n        for (const k in data) {\n            formData.append(k, data[k]);\n        }\n\n        const config: any = {\n            headers: {\n                ...axios.defaults.headers,\n                'content-type': 'multipart/form-data',\n            },\n        };\n        return axios.patch(url, formData, config);\n    };\n\n    isUserAuthenticated = () => {\n        const user = this.getLoggedInUser();\n\n        if (!user) {\n            return false;\n        }\n        const decoded: any = jwtDecode(user.token);\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n            console.warn('access token expired');\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    setLoggedInUser = (session: any) => {\n        if (session) sessionStorage.setItem(AUTH_SESSION_KEY, JSON.stringify(session));\n        else {\n            sessionStorage.removeItem(AUTH_SESSION_KEY);\n        }\n    };\n    /**\n     * Returns the logged in user\n     */\n    getLoggedInUser = () => {\n        return getUserFromCookie();\n    };\n\n    setUserInSession = (modifiedUser: any) => {\n        let userInfo = sessionStorage.getItem(AUTH_SESSION_KEY);\n        if (userInfo) {\n            const { token, user } = JSON.parse(userInfo);\n            this.setLoggedInUser({ token, ...user, ...modifiedUser });\n        }\n    };\n}\n\n/*\nCheck if token available in session\n*/\nlet user = getUserFromCookie();\nif (user) {\n    const { token } = user;\n    if (token) {\n        setAuthorization(token);\n    }\n}\n\nexport { APICore, setAuthorization };\n"]},"metadata":{},"sourceType":"module"}