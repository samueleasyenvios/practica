{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\components\\\\ThemeCustomizer\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react'; // actions\n\nimport { changeLayout, changeLayoutWidth, changeMenuPositions, changeSidebarTheme, changeSidebarType, toggleSidebarUserInfo, changeTopbarTheme } from '../../redux/actions'; // constants\n\nimport * as layoutConstants from '../../constants/layout'; // custom hook\n\nimport { useViewport, useRedux } from '../../hooks/'; // components\n\nimport LayoutTypes from './LayoutTypes';\nimport LayoutWidth from './LayoutWidth';\nimport MenuPositions from './MenuPositions';\nimport LeftSideBarTheme from './LeftSideBarTheme';\nimport LeftSideBarType from './LeftSideBarType';\nimport SidebarUserInfo from './SidebarUserInfo';\nimport TopbarTheme from './TopbarTheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeCustomizer = () => {\n  _s();\n\n  const {\n    dispatch,\n    appSelector\n  } = useRedux();\n  const {\n    width\n  } = useViewport();\n  const {\n    layoutType,\n    layoutWidth,\n    menuPosition,\n    leftSideBarType,\n    leftSideBarTheme,\n    showSidebarUserInfo,\n    topbarTheme\n  } = appSelector(state => ({\n    layoutType: state.Layout.layoutType,\n    layoutWidth: state.Layout.layoutWidth,\n    menuPosition: state.Layout.menuPosition,\n    leftSideBarTheme: state.Layout.leftSideBarTheme,\n    leftSideBarType: state.Layout.leftSideBarType,\n    showSidebarUserInfo: state.Layout.showSidebarUserInfo,\n    topbarTheme: state.Layout.topbarTheme\n  }));\n  const [disableLayoutWidth, setDisableLayoutWidth] = useState(false);\n  const [disableMenuPositions, setDisableMenuPositions] = useState(false);\n  const [disableSidebarTheme, setDisableSidebarTheme] = useState(false);\n  const [disableSidebarType, setDisableSidebarType] = useState(false);\n  const [disableSidebarUser, setDisableSidebarUser] = useState(false);\n  /**\n   * change state based on props changes\n   */\n\n  const _loadStateFromProps = useCallback(() => {\n    setDisableLayoutWidth(layoutType !== layoutConstants.LayoutTypes.LAYOUT_DETACHED);\n    setDisableMenuPositions(layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN && layoutType !== layoutConstants.LayoutTypes.LAYOUT_DETACHED);\n    setDisableSidebarTheme(layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL);\n    setDisableSidebarType(layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL && layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN && width > 991);\n    setDisableSidebarUser(layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL && layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN);\n  }, [layoutType, width]);\n\n  useEffect(() => {\n    _loadStateFromProps();\n  }, [_loadStateFromProps]);\n  /**\n   * On layout change\n   */\n\n  const changeLayoutType = value => {\n    var layout = value;\n\n    switch (layout) {\n      case 'horizontal':\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL));\n        break;\n\n      case 'detached':\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_DETACHED));\n        break;\n\n      case 'vertical':\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_VERTICAL));\n        break;\n\n      default:\n        dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN));\n        break;\n    }\n  };\n  /**\n   * Change the width mode\n   */\n\n\n  const changeWidthMode = value => {\n    var mode = value;\n\n    switch (mode) {\n      case 'boxed':\n        dispatch(changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_BOXED));\n        break;\n\n      default:\n        dispatch(changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID));\n        break;\n    }\n  };\n  /*\n   * Change menus position\n   */\n\n\n  const changeMenuPosition = value => {\n    var position = value;\n\n    switch (position) {\n      case 'scrollable':\n        dispatch(changeMenuPositions(layoutConstants.MenuPositions.MENU_POSITION_SCROLLABLE));\n        break;\n\n      default:\n        dispatch(changeMenuPositions(layoutConstants.MenuPositions.MENU_POSITION_FIXED));\n        break;\n    }\n  };\n  /**\n   * Changes the theme\n   */\n\n\n  const changeLeftSidebarTheme = value => {\n    var theme = value;\n\n    switch (theme) {\n      case 'dark':\n        dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_DARK));\n        break;\n\n      case 'brand':\n        dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_BRAND));\n        break;\n\n      case 'gradient':\n        dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_GRADIENT));\n        break;\n\n      default:\n        dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT));\n        break;\n    }\n  };\n  /**\n   * Change the leftsiderbar type\n   */\n\n\n  const changeLeftSiderbarType = value => {\n    var type = value;\n\n    switch (type) {\n      case 'condensed':\n        dispatch(changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n        break;\n\n      case 'compact':\n        dispatch(changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_COMPACT));\n        break;\n\n      default:\n        dispatch(changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n        break;\n    }\n  };\n  /*\n   * Toggle the leftsidebar use info\n   */\n\n\n  const toggleLeftSidebarUserInfo = value => {\n    var checked = value;\n    dispatch(toggleSidebarUserInfo(checked));\n  };\n  /*\n   * Change topbar theme\n   */\n\n\n  const changeTopBarTheme = value => {\n    var theme = value;\n\n    switch (theme) {\n      case 'light':\n        dispatch(changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_LIGHT));\n        break;\n\n      default:\n        dispatch(changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_DARK));\n        break;\n    }\n  };\n  /**\n   * Reset everything\n   */\n\n\n  const reset = () => {\n    changeLayoutType(layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN);\n    changeWidthMode(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID);\n    changeMenuPosition(layoutConstants.MenuPositions.MENU_POSITION_FIXED);\n    changeLeftSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT);\n    toggleLeftSidebarUserInfo(false);\n    changeTopBarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_LIGHT);\n    changeLeftSiderbarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"fw-medium px-3 m-0 py-2 font-13 text-uppercase bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-block py-1\",\n        children: \"Theme Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Customize \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), \" the overall color scheme, sidebar menu, etc.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LayoutTypes, {\n        changeLayoutType: changeLayoutType,\n        layoutType: layoutType,\n        layoutConstants: layoutConstants.LayoutTypes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), disableLayoutWidth && /*#__PURE__*/_jsxDEV(LayoutWidth, {\n        changeWidthMode: changeWidthMode,\n        layoutWidth: layoutWidth,\n        layoutConstants: layoutConstants.LayoutWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(TopbarTheme, {\n        changeTopBarTheme: changeTopBarTheme,\n        topbarTheme: topbarTheme,\n        layoutConstants: layoutConstants.TopbarTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), disableMenuPositions && /*#__PURE__*/_jsxDEV(MenuPositions, {\n        menuPosition: menuPosition,\n        changeMenuPosition: changeMenuPosition,\n        layoutConstants: layoutConstants.MenuPositions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this), disableSidebarTheme && /*#__PURE__*/_jsxDEV(LeftSideBarTheme, {\n        changeLeftSidebarTheme: changeLeftSidebarTheme,\n        leftSideBarTheme: leftSideBarTheme,\n        layoutConstants: layoutConstants.SideBarTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this), disableSidebarType && /*#__PURE__*/_jsxDEV(LeftSideBarType, {\n        changeLeftSiderbarType: changeLeftSiderbarType,\n        leftSideBarType: leftSideBarType,\n        layoutConstants: layoutConstants.SideBarTypes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }, this), disableSidebarUser && /*#__PURE__*/_jsxDEV(SidebarUserInfo, {\n        toggleLeftSidebarUserInfo: toggleLeftSidebarUserInfo,\n        showSidebarUserInfo: showSidebarUserInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          id: \"resetBtn\",\n          onClick: () => reset(),\n          children: \"Reset to Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ThemeCustomizer, \"FRcWR3YetxvOjUXISYOKbM5P+3A=\", false, function () {\n  return [useRedux, useViewport];\n});\n\n_c = ThemeCustomizer;\nexport default ThemeCustomizer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeCustomizer\");","map":{"version":3,"sources":["C:/proyecto/practica/src/components/ThemeCustomizer/index.tsx"],"names":["React","useState","useEffect","useCallback","changeLayout","changeLayoutWidth","changeMenuPositions","changeSidebarTheme","changeSidebarType","toggleSidebarUserInfo","changeTopbarTheme","layoutConstants","useViewport","useRedux","LayoutTypes","LayoutWidth","MenuPositions","LeftSideBarTheme","LeftSideBarType","SidebarUserInfo","TopbarTheme","ThemeCustomizer","dispatch","appSelector","width","layoutType","layoutWidth","menuPosition","leftSideBarType","leftSideBarTheme","showSidebarUserInfo","topbarTheme","state","Layout","disableLayoutWidth","setDisableLayoutWidth","disableMenuPositions","setDisableMenuPositions","disableSidebarTheme","setDisableSidebarTheme","disableSidebarType","setDisableSidebarType","disableSidebarUser","setDisableSidebarUser","_loadStateFromProps","LAYOUT_DETACHED","LAYOUT_TWO_COLUMN","LAYOUT_HORIZONTAL","changeLayoutType","value","layout","LAYOUT_VERTICAL","changeWidthMode","mode","LAYOUT_WIDTH_BOXED","LAYOUT_WIDTH_FLUID","changeMenuPosition","position","MENU_POSITION_SCROLLABLE","MENU_POSITION_FIXED","changeLeftSidebarTheme","theme","SideBarTheme","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_THEME_BRAND","LEFT_SIDEBAR_THEME_GRADIENT","LEFT_SIDEBAR_THEME_LIGHT","changeLeftSiderbarType","type","SideBarTypes","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_COMPACT","LEFT_SIDEBAR_TYPE_DEFAULT","toggleLeftSidebarUserInfo","checked","changeTopBarTheme","TOPBAR_THEME_LIGHT","TOPBAR_THEME_DARK","reset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\n// actions\nimport {\n    changeLayout,\n    changeLayoutWidth,\n    changeMenuPositions,\n    changeSidebarTheme,\n    changeSidebarType,\n    toggleSidebarUserInfo,\n    changeTopbarTheme,\n} from '../../redux/actions';\n\n// constants\nimport * as layoutConstants from '../../constants/layout';\n\n// custom hook\nimport { useViewport, useRedux } from '../../hooks/';\n\n// components\nimport LayoutTypes from './LayoutTypes';\nimport LayoutWidth from './LayoutWidth';\nimport MenuPositions from './MenuPositions';\nimport LeftSideBarTheme from './LeftSideBarTheme';\nimport LeftSideBarType from './LeftSideBarType';\nimport SidebarUserInfo from './SidebarUserInfo';\nimport TopbarTheme from './TopbarTheme';\n\nconst ThemeCustomizer = () => {\n    const { dispatch, appSelector } = useRedux();\n    const { width } = useViewport();\n\n    const {\n        layoutType,\n        layoutWidth,\n        menuPosition,\n        leftSideBarType,\n        leftSideBarTheme,\n        showSidebarUserInfo,\n        topbarTheme,\n    } = appSelector((state) => ({\n        layoutType: state.Layout.layoutType,\n        layoutWidth: state.Layout.layoutWidth,\n        menuPosition: state.Layout.menuPosition,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n        showSidebarUserInfo: state.Layout.showSidebarUserInfo,\n        topbarTheme: state.Layout.topbarTheme,\n    }));\n\n    const [disableLayoutWidth, setDisableLayoutWidth] = useState<boolean>(false);\n    const [disableMenuPositions, setDisableMenuPositions] = useState<boolean>(false);\n    const [disableSidebarTheme, setDisableSidebarTheme] = useState<boolean>(false);\n    const [disableSidebarType, setDisableSidebarType] = useState<boolean>(false);\n    const [disableSidebarUser, setDisableSidebarUser] = useState<boolean>(false);\n\n\n    /**\n     * change state based on props changes\n     */\n    const _loadStateFromProps = useCallback(() => {\n        setDisableLayoutWidth(layoutType !== layoutConstants.LayoutTypes.LAYOUT_DETACHED);\n        setDisableMenuPositions(\n            layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN &&\n            layoutType !== layoutConstants.LayoutTypes.LAYOUT_DETACHED\n\n        );\n        setDisableSidebarTheme(layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL);\n        setDisableSidebarType(\n            layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL &&\n            layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN &&\n            width > 991\n        );\n        setDisableSidebarUser(\n            layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL &&\n            layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN\n        );\n    }, [layoutType, width]);\n\n    useEffect(() => {\n        _loadStateFromProps();\n    }, [_loadStateFromProps]);\n\n    /**\n     * On layout change\n     */\n    const changeLayoutType = (value: any) => {\n        var layout = value;\n        switch (layout) {\n            case 'horizontal':\n                dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL));\n                break;\n            case 'detached':\n                dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_DETACHED));\n                break;\n            case 'vertical':\n                dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_VERTICAL));\n                break;\n            default:\n                dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN));\n                break;\n        }\n    };\n\n    /**\n     * Change the width mode\n     */\n    const changeWidthMode = (value: any) => {\n        var mode = value;\n\n        switch (mode) {\n            case 'boxed':\n                dispatch(changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_BOXED));\n                break;\n            default:\n                dispatch(changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID));\n                break;\n        }\n    };\n\n    /*\n     * Change menus position\n     */\n    const changeMenuPosition = (value: any) => {\n        var position = value;\n\n        switch (position) {\n            case 'scrollable':\n                dispatch(changeMenuPositions(layoutConstants.MenuPositions.MENU_POSITION_SCROLLABLE));\n                break;\n            default:\n                dispatch(changeMenuPositions(layoutConstants.MenuPositions.MENU_POSITION_FIXED));\n                break;\n        }\n    };\n\n    /**\n     * Changes the theme\n     */\n    const changeLeftSidebarTheme = (value: any) => {\n        var theme = value;\n        switch (theme) {\n            case 'dark':\n                dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_DARK));\n                break;\n            case 'brand':\n                dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_BRAND));\n                break;\n            case 'gradient':\n                dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_GRADIENT));\n                break;\n            default:\n                dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT));\n                break;\n        }\n    };\n\n    /**\n     * Change the leftsiderbar type\n     */\n    const changeLeftSiderbarType = (value: any) => {\n        var type = value;\n        switch (type) {\n            case 'condensed':\n                dispatch(changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n                break;\n            case 'compact':\n                dispatch(changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_COMPACT));\n                break;\n            default:\n                dispatch(changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n                break;\n        }\n    };\n\n    /*\n     * Toggle the leftsidebar use info\n     */\n    const toggleLeftSidebarUserInfo = (value: any) => {\n        var checked = value;\n        dispatch(toggleSidebarUserInfo(checked));\n    };\n\n    /*\n     * Change topbar theme\n     */\n    const changeTopBarTheme = (value: any) => {\n        var theme = value;\n        switch (theme) {\n            case 'light':\n                dispatch(changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_LIGHT));\n                break;\n            default:\n                dispatch(changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_DARK));\n                break;\n        }\n    };\n\n    /**\n     * Reset everything\n     */\n    const reset = () => {\n        changeLayoutType(layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN);\n        changeWidthMode(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID);\n        changeMenuPosition(layoutConstants.MenuPositions.MENU_POSITION_FIXED);\n        changeLeftSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT);\n        toggleLeftSidebarUserInfo(false);\n        changeTopBarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_LIGHT);\n        changeLeftSiderbarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT);\n    };\n\n    return (\n        <React.Fragment>\n            <h6 className=\"fw-medium px-3 m-0 py-2 font-13 text-uppercase bg-light\">\n                <span className=\"d-block py-1\">Theme Settings</span>\n            </h6>\n            <div className=\"p-3\">\n                <div className=\"alert alert-warning\" role=\"alert\">\n                    <strong>Customize </strong> the overall color scheme, sidebar menu, etc.\n                </div>\n\n                {/* Layouts */}\n                <LayoutTypes\n                    changeLayoutType={changeLayoutType}\n                    layoutType={layoutType}\n                    layoutConstants={layoutConstants.LayoutTypes}\n                />\n\n                {/* Width */}\n                {disableLayoutWidth && (<LayoutWidth\n                    changeWidthMode={changeWidthMode}\n                    layoutWidth={layoutWidth}\n                    layoutConstants={layoutConstants.LayoutWidth}\n                />)}\n\n                {/* Topbar */}\n                <TopbarTheme\n                    changeTopBarTheme={changeTopBarTheme}\n                    topbarTheme={topbarTheme}\n                    layoutConstants={layoutConstants.TopbarTheme}\n                />\n\n                {/* Menu Posiotions */}\n                {disableMenuPositions && (\n                    <MenuPositions\n                        menuPosition={menuPosition}\n                        changeMenuPosition={changeMenuPosition}\n                        layoutConstants={layoutConstants.MenuPositions}\n                    />\n                )}\n\n                {/* Left Sidebar */}\n                {disableSidebarTheme && (\n                    <LeftSideBarTheme\n                        changeLeftSidebarTheme={changeLeftSidebarTheme}\n                        leftSideBarTheme={leftSideBarTheme}\n                        layoutConstants={layoutConstants.SideBarTheme}\n                    />\n                )}\n\n                {/* Left Sidebar Size */}\n                {disableSidebarType && (\n                    <LeftSideBarType\n                        changeLeftSiderbarType={changeLeftSiderbarType}\n                        leftSideBarType={leftSideBarType}\n                        layoutConstants={layoutConstants.SideBarTypes}\n                    />\n                )}\n\n                {/* User Info */}\n                {disableSidebarUser && (\n                    <SidebarUserInfo\n                        toggleLeftSidebarUserInfo={toggleLeftSidebarUserInfo}\n                        showSidebarUserInfo={showSidebarUserInfo}\n                    />\n                )}\n\n                <div className=\"d-grid mt-4\">\n                    <button className=\"btn btn-primary\" id=\"resetBtn\" onClick={() => reset()}>\n                        Reset to Default\n                    </button>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default ThemeCustomizer;\n"]},"metadata":{},"sourceType":"module"}