{"ast":null,"code":"import * as equal from 'fast-deep-equal';\nimport is from 'is-lite';\nexport function canHaveLength() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return args.every(function (d) {\n    return is.string(d) || is.array(d) || is.plainObject(d);\n  });\n}\nexport function checkEquality(left, right, value) {\n  if (!isSameType(left, right)) {\n    return false;\n  }\n\n  if ([left, right].every(is.array)) {\n    return !left.some(hasValue(value)) && right.some(hasValue(value));\n  }\n  /* istanbul ignore else */\n\n\n  if ([left, right].every(is.plainObject)) {\n    return !Object.entries(left).some(hasEntry(value)) && Object.entries(right).some(hasEntry(value));\n  }\n\n  return right === value;\n}\nexport function compareNumbers(previousData, data, options) {\n  var actual = options.actual,\n      key = options.key,\n      previous = options.previous,\n      type = options.type;\n  var left = nested(previousData, key);\n  var right = nested(data, key);\n  var changed = [left, right].every(is.number) && (type === 'increased' ? left < right : left > right);\n\n  if (!is.undefined(actual)) {\n    changed = changed && right === actual;\n  }\n\n  if (!is.undefined(previous)) {\n    changed = changed && left === previous;\n  }\n\n  return changed;\n}\nexport function compareValues(previousData, data, options) {\n  var key = options.key,\n      type = options.type,\n      value = options.value;\n  var left = nested(previousData, key);\n  var right = nested(data, key);\n  var primary = type === 'added' ? left : right;\n  var secondary = type === 'added' ? right : left; // console.log({ primary, secondary });\n\n  if (!is.nullOrUndefined(value)) {\n    if (is.defined(primary)) {\n      // check if nested data matches\n      if (is.array(primary) || is.plainObject(primary)) {\n        return checkEquality(primary, secondary, value);\n      }\n    } else {\n      return equal(secondary, value);\n    }\n\n    return false;\n  }\n\n  if ([left, right].every(is.array)) {\n    return !secondary.every(isEqualPredicate(primary));\n  }\n\n  if ([left, right].every(is.plainObject)) {\n    return hasExtraKeys(Object.keys(primary), Object.keys(secondary));\n  }\n\n  return ![left, right].every(function (d) {\n    return is.primitive(d) && is.defined(d);\n  }) && (type === 'added' ? !is.defined(left) && is.defined(right) : is.defined(left) && !is.defined(right));\n}\nexport function getIterables(previousData, data, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      key = _b.key;\n\n  var left = nested(previousData, key);\n  var right = nested(data, key);\n\n  if (!isSameType(left, right)) {\n    throw new TypeError('Inputs have different types');\n  }\n\n  if (!canHaveLength(left, right)) {\n    throw new TypeError(\"Inputs don't have length\");\n  }\n\n  if ([left, right].every(is.plainObject)) {\n    left = Object.keys(left);\n    right = Object.keys(right);\n  }\n\n  return [left, right];\n}\nexport function hasEntry(input) {\n  return function (_a) {\n    var key = _a[0],\n        value = _a[1];\n\n    if (is.array(input)) {\n      return equal(input, value) || input.some(function (d) {\n        return equal(d, value) || is.array(value) && isEqualPredicate(value)(d);\n      });\n    }\n    /* istanbul ignore else */\n\n\n    if (is.plainObject(input) && input[key]) {\n      return !!input[key] && equal(input[key], value);\n    }\n\n    return equal(input, value);\n  };\n}\nexport function hasExtraKeys(left, right) {\n  return right.some(function (d) {\n    return left.indexOf(d) < 0;\n  });\n}\nexport function hasValue(input) {\n  return function (value) {\n    if (is.array(input)) {\n      return input.some(function (d) {\n        return equal(d, value) || is.array(value) && isEqualPredicate(value)(d);\n      });\n    }\n\n    return equal(input, value);\n  };\n}\nexport function includesOrEqualsTo(previousValue, value) {\n  return is.array(previousValue) ? previousValue.some(function (d) {\n    return equal(d, value);\n  }) : equal(previousValue, value);\n}\nexport function isEqualPredicate(data) {\n  return function (value) {\n    return !!data.find(function (d) {\n      return equal(d, value);\n    });\n  };\n}\nexport function isSameType() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return args.every(is.array) || args.every(is.number) || args.every(is.plainObject) || args.every(is.string);\n}\nexport function nested(data, property) {\n  /* istanbul ignore else */\n  if (is.plainObject(data) || is.array(data)) {\n    /* istanbul ignore else */\n    if (is.string(property)) {\n      var props = property.split('.');\n      return props.reduce(function (acc, d) {\n        return acc && acc[d];\n      }, data);\n    }\n    /* istanbul ignore else */\n\n\n    if (is.number(property)) {\n      return data[property];\n    }\n\n    return data;\n  }\n\n  return data;\n}","map":{"version":3,"sources":["../src/helpers.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as equal from 'fast-deep-equal';\nimport is from 'is-lite';\nexport function canHaveLength() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.every(function (d) { return is.string(d) || is.array(d) || is.plainObject(d); });\n}\nexport function checkEquality(left, right, value) {\n    if (!isSameType(left, right)) {\n        return false;\n    }\n    if ([left, right].every(is.array)) {\n        return !left.some(hasValue(value)) && right.some(hasValue(value));\n    }\n    /* istanbul ignore else */\n    if ([left, right].every(is.plainObject)) {\n        return (!Object.entries(left).some(hasEntry(value)) && Object.entries(right).some(hasEntry(value)));\n    }\n    return right === value;\n}\nexport function compareNumbers(previousData, data, options) {\n    var actual = options.actual, key = options.key, previous = options.previous, type = options.type;\n    var left = nested(previousData, key);\n    var right = nested(data, key);\n    var changed = [left, right].every(is.number) && (type === 'increased' ? left < right : left > right);\n    if (!is.undefined(actual)) {\n        changed = changed && right === actual;\n    }\n    if (!is.undefined(previous)) {\n        changed = changed && left === previous;\n    }\n    return changed;\n}\nexport function compareValues(previousData, data, options) {\n    var key = options.key, type = options.type, value = options.value;\n    var left = nested(previousData, key);\n    var right = nested(data, key);\n    var primary = type === 'added' ? left : right;\n    var secondary = type === 'added' ? right : left;\n    // console.log({ primary, secondary });\n    if (!is.nullOrUndefined(value)) {\n        if (is.defined(primary)) {\n            // check if nested data matches\n            if (is.array(primary) || is.plainObject(primary)) {\n                return checkEquality(primary, secondary, value);\n            }\n        }\n        else {\n            return equal(secondary, value);\n        }\n        return false;\n    }\n    if ([left, right].every(is.array)) {\n        return !secondary.every(isEqualPredicate(primary));\n    }\n    if ([left, right].every(is.plainObject)) {\n        return hasExtraKeys(Object.keys(primary), Object.keys(secondary));\n    }\n    return (![left, right].every(function (d) { return is.primitive(d) && is.defined(d); }) &&\n        (type === 'added'\n            ? !is.defined(left) && is.defined(right)\n            : is.defined(left) && !is.defined(right)));\n}\nexport function getIterables(previousData, data, _a) {\n    var _b = _a === void 0 ? {} : _a, key = _b.key;\n    var left = nested(previousData, key);\n    var right = nested(data, key);\n    if (!isSameType(left, right)) {\n        throw new TypeError('Inputs have different types');\n    }\n    if (!canHaveLength(left, right)) {\n        throw new TypeError(\"Inputs don't have length\");\n    }\n    if ([left, right].every(is.plainObject)) {\n        left = Object.keys(left);\n        right = Object.keys(right);\n    }\n    return [left, right];\n}\nexport function hasEntry(input) {\n    return function (_a) {\n        var key = _a[0], value = _a[1];\n        if (is.array(input)) {\n            return (equal(input, value) ||\n                input.some(function (d) { return equal(d, value) || (is.array(value) && isEqualPredicate(value)(d)); }));\n        }\n        /* istanbul ignore else */\n        if (is.plainObject(input) && input[key]) {\n            return !!input[key] && equal(input[key], value);\n        }\n        return equal(input, value);\n    };\n}\nexport function hasExtraKeys(left, right) {\n    return right.some(function (d) { return left.indexOf(d) < 0; });\n}\nexport function hasValue(input) {\n    return function (value) {\n        if (is.array(input)) {\n            return input.some(function (d) { return equal(d, value) || (is.array(value) && isEqualPredicate(value)(d)); });\n        }\n        return equal(input, value);\n    };\n}\nexport function includesOrEqualsTo(previousValue, value) {\n    return is.array(previousValue)\n        ? previousValue.some(function (d) { return equal(d, value); })\n        : equal(previousValue, value);\n}\nexport function isEqualPredicate(data) {\n    return function (value) { return !!data.find(function (d) { return equal(d, value); }); };\n}\nexport function isSameType() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return (args.every(is.array) ||\n        args.every(is.number) ||\n        args.every(is.plainObject) ||\n        args.every(is.string));\n}\nexport function nested(data, property) {\n    /* istanbul ignore else */\n    if (is.plainObject(data) || is.array(data)) {\n        /* istanbul ignore else */\n        if (is.string(property)) {\n            var props = property.split('.');\n            return props.reduce(function (acc, d) { return acc && acc[d]; }, data);\n        }\n        /* istanbul ignore else */\n        if (is.number(property)) {\n            return data[property];\n        }\n        return data;\n    }\n    return data;\n}\n//# sourceMappingURL=helpers.js.map"]},"metadata":{},"sourceType":"module"}