{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\pages\\\\auth\\\\LockScreen.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup'; // components\n\nimport { VerticalForm, FormInput } from '../../components/form/';\nimport AuthLayout from './AuthLayout'; // images\n\nimport userImg from '../../assets/images/users/avatar-1.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n/* bottom link */\nconst BottomLink = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"mt-3\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      xs: 12,\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: [t('Not you? return'), ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: '/auth/login',\n          className: \"text-primary fw-medium ms-1\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: t('Sign In')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BottomLink, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = BottomLink;\n\nconst LockScreen = () => {\n  _s2();\n\n  const {\n    t\n  } = useTranslation();\n  /*\n   * form validation schema\n   */\n\n  const schemaResolver = yupResolver(yup.object().shape({\n    password: yup.string().required(t('Please enter Password'))\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthLayout, {\n      bottomLinks: /*#__PURE__*/_jsxDEV(BottomLink, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 38\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center w-75 m-auto mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userImg,\n          alt: \"\",\n          height: \"88\",\n          className: \"rounded-circle avatar-lg img-thumbnail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-dark-50 text-center mt-3\",\n          children: t('Hi ! Nik Patel ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted mb-4\",\n          children: t('Enter your password to access the admin.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VerticalForm, {\n        onSubmit: () => {},\n        resolver: schemaResolver,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          label: t('Password'),\n          type: \"password\",\n          name: \"password\",\n          placeholder: t('Enter your password'),\n          containerClass: 'mb-3'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid text-center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: t('Log In')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(LockScreen, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = LockScreen;\nexport default LockScreen;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BottomLink\");\n$RefreshReg$(_c2, \"LockScreen\");","map":{"version":3,"sources":["C:/proyecto/practica/src/pages/auth/LockScreen.tsx"],"names":["React","Button","Row","Col","Link","useTranslation","yup","yupResolver","VerticalForm","FormInput","AuthLayout","userImg","BottomLink","t","LockScreen","schemaResolver","object","shape","password","string","required"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\n// components\nimport { VerticalForm, FormInput } from '../../components/form/';\n\nimport AuthLayout from './AuthLayout';\n\n// images\nimport userImg from '../../assets/images/users/avatar-1.jpg';\n\ninterface UserData {\n    password: string;\n}\n\n/* bottom link */\nconst BottomLink = () => {\n    const { t } = useTranslation();\n    return (\n        <Row className=\"mt-3\">\n            <Col xs={12} className=\"text-center\">\n                <p className=\"text-muted\">\n                    {t('Not you? return')}{' '}\n                    <Link to={'/auth/login'} className=\"text-primary fw-medium ms-1\">\n                        <b>{t('Sign In')}</b>\n                    </Link>\n                </p>\n            </Col>\n        </Row>\n    );\n};\n\nconst LockScreen = () => {\n    const { t } = useTranslation();\n\n    /*\n     * form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            password: yup.string().required(t('Please enter Password')),\n        })\n    );\n\n    return (\n        <>\n            <AuthLayout bottomLinks={<BottomLink />}>\n                <div className=\"text-center w-75 m-auto mt-4\">\n                    <img src={userImg} alt=\"\" height=\"88\" className=\"rounded-circle avatar-lg img-thumbnail\" />\n                    <h4 className=\"text-dark-50 text-center mt-3\">{t('Hi ! Nik Patel ')}</h4>\n                    <p className=\"text-muted mb-4\">{t('Enter your password to access the admin.')}</p>\n                </div>\n                <VerticalForm<UserData> onSubmit={() => {}} resolver={schemaResolver}>\n                    <FormInput\n                        label={t('Password')}\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder={t('Enter your password')}\n                        containerClass={'mb-3'}\n                    />\n\n                    <div className=\"d-grid text-center\">\n                        <Button variant=\"primary\" type=\"submit\">\n                            {t('Log In')}\n                        </Button>\n                    </div>\n                </VerticalForm>\n            </AuthLayout>\n        </>\n    );\n};\n\nexport default LockScreen;\n"]},"metadata":{},"sourceType":"module"}