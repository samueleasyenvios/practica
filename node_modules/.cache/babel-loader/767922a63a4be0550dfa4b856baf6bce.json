{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\pages\\\\forms\\\\Validation.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Row, Col, Card, Button, InputGroup, Form } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup'; // components\n\nimport PageTitle from '../../components/PageTitle';\nimport { FormInput, VerticalForm } from '../../components/form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NormalFormValidation = () => {\n  _s();\n\n  const [validated, setValidated] = useState(false);\n  /*\n   * handle form submission\n   */\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"header-title\",\n          children: \"Bootstrap Validation - Normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-header\",\n          children: \"Provide valuable, actionable feedback to your users with HTML5 form validation\\u2013available in all our supported browsers.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          validated: validated,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"validationCustom01\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"First name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              type: \"text\",\n              placeholder: \"First name\",\n              defaultValue: \"Mark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              children: \"Looks good!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"validationCustom02\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Last name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              type: \"text\",\n              placeholder: \"Last name\",\n              defaultValue: \"Otto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              children: \"Looks good!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"validationCustomUsername\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                id: \"inputGroupPrepend\",\n                children: \"@\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Username\",\n                \"aria-describedby\": \"inputGroupPrepend\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please choose a username.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"validationCustom03\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"City\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please provide a valid city.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"validationCustom04\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"State\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please provide a valid state.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"validationCustom05\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Zip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Zip\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please provide a valid zip.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              id: \"validation-check\",\n              required: true,\n              label: \"Agree to terms and conditions\",\n              feedback: \"You must agree before submitting.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Submit form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(NormalFormValidation, \"otD17mARj5mKZHrEMvBAd47slX0=\");\n\n_c = NormalFormValidation;\n\nconst FormValidationWithTooltip = () => {\n  _s2();\n\n  const [validated, setValidated] = useState(false);\n  /*\n   * handle form submission\n   */\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"header-title\",\n          children: \"Bootstrap Validation (Tooltips)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-header\",\n          children: [\"If your form layout allows it, you can swap the \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \".valid | invalid-feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 73\n          }, this), \" classes for \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \".valid | invalid-tooltip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this), \" classes to display validation feedback in a styled tooltip.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          validated: validated,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"position-relative mb-3\",\n            controlId: \"validationTooltip01\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"First name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              type: \"text\",\n              placeholder: \"First name\",\n              defaultValue: \"Mark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              tooltip: true,\n              children: \"Looks good!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"position-relative mb-3\",\n            controlId: \"validationTooltip02\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Last name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              type: \"text\",\n              placeholder: \"Last name\",\n              defaultValue: \"Otto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              tooltip: true,\n              children: \"Looks good!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"position-relative mb-3\",\n            controlId: \"validationCustonTooltipme\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                id: \"inputGroupPrepend\",\n                children: \"@\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Username\",\n                \"aria-describedby\": \"inputGroupPrepend\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                tooltip: true,\n                children: \"Please choose a username.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"position-relative mb-3\",\n            controlId: \"validationTooltip03\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"City\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              tooltip: true,\n              children: \"Please provide a valid city.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"position-relative mb-3\",\n            controlId: \"validationTooltip04\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"State\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              tooltip: true,\n              children: \"Please provide a valid state.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"position-relative mb-3\",\n            controlId: \"validationTooltip05\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Zip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Zip\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              tooltip: true,\n              children: \"Please provide a valid zip.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Submit form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(FormValidationWithTooltip, \"otD17mARj5mKZHrEMvBAd47slX0=\");\n\n_c2 = FormValidationWithTooltip;\n\nconst BasicForm = () => {\n  /*\n  form validation schema\n  */\n  const schemaResolver = yupResolver(yup.object().shape({\n    username: yup.string().required('Please enter Username'),\n    email: yup.string().required('Please enter Email address'),\n    password: yup.string().required('Please enter Password'),\n    confirmpassword: yup.string().oneOf([yup.ref('password'), null], \"Passwords don't match\").required('This value is required.'),\n    checkbox: yup.bool().oneOf([true], 'Must accept Terms and Conditions')\n  }));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mt-0 mb-1\",\n        children: \"Basic Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: \"React validation with react-hook-form library.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VerticalForm, {\n        onSubmit: () => {},\n        resolver: schemaResolver,\n        defaultValues: {\n          username: 'test'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Username',\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Enter your name\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Email address',\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter email\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Password',\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          endIcon: false,\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Confirm Password',\n          type: \"password\",\n          name: \"confirmpassword\",\n          placeholder: \"Password\",\n          endIcon: false,\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Remember me',\n          type: \"checkbox\",\n          name: \"checkbox\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-md-end mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"me-1\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            type: \"reset\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = BasicForm;\n\nconst HorizontalForm = () => {\n  _s3();\n\n  /*\n  form validation schema\n  */\n  const schemaResolver2 = yupResolver(yup.object().shape({\n    email2: yup.string().required('Please enter Email address'),\n    password2: yup.string().required('Please enter Password'),\n    confirmPassword2: yup.string().oneOf([yup.ref('password'), null], \"Passwords don't match\").required('This value is required.'),\n    webSite: yup.string().required('Please enter URL'),\n    horizontalCheck: yup.bool().oneOf([true], 'Must accept Terms and Conditions')\n  }));\n  const methods = useForm({\n    defaultValues: {\n      email2: 'minton@coderthemes.com'\n    },\n    resolver: schemaResolver2\n  });\n  const {\n    handleSubmit,\n    register,\n    control,\n    formState: {\n      errors\n    }\n  } = methods;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mt-0 mb-1\",\n        children: \"Horizontal Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: \"React validation with react-hook-form library.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        name: \"chat-form\",\n        id: \"chat-form\",\n        onSubmit: handleSubmit(() => {}),\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            md: 4,\n            children: [\"Email\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 7,\n            children: /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"email\",\n              name: \"email2\",\n              placeholder: \"Email\",\n              register: register,\n              errors: errors,\n              control: control\n            }, \"email2\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            md: 4,\n            children: [\"Password\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 7,\n            children: /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"password\",\n              name: \"password2\",\n              placeholder: \"Password\",\n              register: register,\n              endIcon: false,\n              errors: errors,\n              control: control\n            }, \"password2\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            md: 4,\n            children: [\"Confirm Password\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 7,\n            children: /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"password\",\n              name: \"confirmPassword2\",\n              placeholder: \"Password\",\n              register: register,\n              endIcon: false,\n              errors: errors,\n              control: control\n            }, \"confirmPassword2\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            md: 4,\n            children: [\"Web Site\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 7,\n            children: /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"url\",\n              name: \"webSite\",\n              placeholder: \"URL\",\n              register: register,\n              errors: errors,\n              control: control\n            }, \"webSite\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mb-2\",\n          controlId: \"horizontalCheck\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: {\n              span: 8,\n              offset: 4\n            },\n            children: /*#__PURE__*/_jsxDEV(FormInput, {\n              label: 'Remember me',\n              type: \"checkbox\",\n              name: \"horizontalCheck\",\n              register: register,\n              errors: errors,\n              control: control\n            }, \"horizontalCheck\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: {\n              span: 8,\n              offset: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              className: \"me-1\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              type: \"reset\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(HorizontalForm, \"cLnp+zYVfnD49CnXGGXF3NvR6q8=\", false, function () {\n  return [useForm];\n});\n\n_c4 = HorizontalForm;\n\nconst ValidationTypes = () => {\n  /*\n     form validation schema\n     */\n  const schemaResolver3 = yupResolver(yup.object().shape({\n    requiredInput: yup.string().required('This value is required.'),\n    email: yup.string().required('This value is required.').email('This value should be a valid email.'),\n    equalTo1: yup.string().required('This value is required.'),\n    equalTo2: yup.string().oneOf([yup.ref('equalTo1'), null], 'This value should be the same.').required('This value is required.'),\n    url: yup.string().required('This value is required.').url('This value should be a valid url.'),\n    digits: yup.number().typeError('This value should be digits.').required('This value is required.').integer('This value should be digits').positive(),\n    numberInput: yup.number().typeError('This value should be digits.').required('This value is required.'),\n    alphaNumeric: yup.string().required('This value is required.').matches(/^[a-zA-Z0-9]+$/, 'This value should be a valid alphanumeric.'),\n    textAreaInput: yup.string().required('This value is required.')\n  }));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mt-0 mb-1\",\n        children: \"Validation type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: \"React validation with react-hook-form library.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VerticalForm, {\n        onSubmit: () => {},\n        resolver: schemaResolver3,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Required',\n          type: \"text\",\n          name: \"requiredInput\",\n          placeholder: \"Type Something\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Equal To',\n          type: \"password\",\n          name: \"equalTo1\",\n          placeholder: \"Password\",\n          endIcon: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"equalTo2\",\n          placeholder: \"Re-Type Password\",\n          endIcon: false,\n          containerClass: 'mt-1 mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'E-Mail',\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter a valid e-mail\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'URL',\n          type: \"url\",\n          name: \"url\",\n          placeholder: \"URL\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Digits',\n          type: \"text\",\n          name: \"digits\",\n          placeholder: \"Enter only digits\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Number',\n          type: \"text\",\n          name: \"numberInput\",\n          placeholder: \"Enter only numbers\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Alphanumeric',\n          type: \"text\",\n          name: \"alphaNumeric\",\n          containerClass: 'mb-2',\n          placeholder: \"Enter alphanumeric value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Textarea',\n          type: \"textarea\",\n          name: \"textAreaInput\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              className: \"waves-effect waves-light me-1\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              type: \"reset\",\n              className: \" waves-effect\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 440,\n    columnNumber: 9\n  }, this);\n};\n\n_c5 = ValidationTypes;\n\nconst RangeValidation = () => {\n  /*\n   form validation schema\n   */\n  const schemaResolver4 = yupResolver(yup.object().shape({\n    minLenInput: yup.string().required('This value is required.').min(6, 'This value is too short. It should have 6 characters or more.'),\n    maxLenInput: yup.string().required('This value is required.').max(6, 'This value is too long. It should have 6 characters or fewer.'),\n    rangeLenInput: yup.string().min(5, 'This value length is invalid. It should be between 5 and 10 characters long.').max(10, 'This value length is invalid. It should be between 5 and 10 characters long.').required('This value is required.'),\n    minValueInput: yup.number().min(6, 'This value should be greater than or equal to 6.').required('This value is required.'),\n    maxValueInput: yup.number().max(6, 'This value should be less than or equal to 6.').required('This value is required.'),\n    rangeValueInput: yup.number().min(6, 'This value should be between 6 and 100.').max(100, 'This value should be between 6 and 100.').required('This value is required.'),\n    regEx: yup.string().required('This value is required.').matches(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/, 'This value seems to be invalid.')\n  }));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"header-title mt-0 mb-1\",\n        children: \"Range validation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: \"React validation with react-hook-form library.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VerticalForm, {\n        onSubmit: () => {},\n        resolver: schemaResolver4,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Min Length',\n          type: \"text\",\n          name: \"minLenInput\",\n          placeholder: \"Min 6 chars.\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Max Length',\n          type: \"text\",\n          name: \"maxLenInput\",\n          placeholder: \"Max 6 chars\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Range Length',\n          type: \"text\",\n          name: \"rangeLenInput\",\n          placeholder: \"Text between 5 - 10 chars length\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Min Value',\n          type: \"text\",\n          name: \"minValueInput\",\n          placeholder: \"Min value is 6\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Max Value',\n          type: \"text\",\n          name: \"maxValueInput\",\n          placeholder: \"Max value is 6\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Range Value',\n          type: \"text\",\n          name: \"rangeValueInput\",\n          placeholder: \"Number between 6 - 100\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: 'Regular Exp',\n          type: \"text\",\n          name: \"regEx\",\n          placeholder: \"Hex. Color\",\n          containerClass: 'mb-2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              className: \"me-1 waves-effect waves-light\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              type: \"reset\",\n              className: \"waves-effect\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 553,\n    columnNumber: 9\n  }, this);\n};\n\n_c6 = RangeValidation;\n\nconst FormValidation = () => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      breadCrumbItems: [{\n        label: 'Forms',\n        path: '/forms/validation'\n      }, {\n        label: 'Form Validation',\n        path: '/forms/validation',\n        active: true\n      }],\n      title: 'Form Validation'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(NormalFormValidation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(FormValidationWithTooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(BasicForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(HorizontalForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(ValidationTypes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(RangeValidation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 626,\n    columnNumber: 9\n  }, this);\n};\n\n_c7 = FormValidation;\nexport default FormValidation;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"NormalFormValidation\");\n$RefreshReg$(_c2, \"FormValidationWithTooltip\");\n$RefreshReg$(_c3, \"BasicForm\");\n$RefreshReg$(_c4, \"HorizontalForm\");\n$RefreshReg$(_c5, \"ValidationTypes\");\n$RefreshReg$(_c6, \"RangeValidation\");\n$RefreshReg$(_c7, \"FormValidation\");","map":{"version":3,"sources":["C:/proyecto/practica/src/pages/forms/Validation.tsx"],"names":["React","useState","useForm","Row","Col","Card","Button","InputGroup","Form","yup","yupResolver","PageTitle","FormInput","VerticalForm","NormalFormValidation","validated","setValidated","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","FormValidationWithTooltip","BasicForm","schemaResolver","object","shape","username","string","required","email","password","confirmpassword","oneOf","ref","checkbox","bool","HorizontalForm","schemaResolver2","email2","password2","confirmPassword2","webSite","horizontalCheck","methods","defaultValues","resolver","register","control","formState","errors","span","offset","ValidationTypes","schemaResolver3","requiredInput","equalTo1","equalTo2","url","digits","number","typeError","integer","positive","numberInput","alphaNumeric","matches","textAreaInput","RangeValidation","schemaResolver4","minLenInput","min","maxLenInput","max","rangeLenInput","minValueInput","maxValueInput","rangeValueInput","regEx","FormValidation","label","path","active"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Row, Col, Card, Button, InputGroup, Form } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\n// components\nimport PageTitle from '../../components/PageTitle';\nimport { FormInput, VerticalForm } from '../../components/form';\n\ninterface UserData {\n    username: string;\n    email: string;\n    password: string;\n    confirmpassword: string;\n    checkbox: boolean;\n}\n\ninterface UserData2 {\n    webSite: string;\n    email2: string;\n    password2: string;\n    confirmpassword2: string;\n    horizontalCheck: boolean;\n}\n\ninterface FormData1 {\n    requiredInput: string;\n    email: string;\n    equalTo1: string;\n    equalTo2: string;\n    url: string;\n    digits: string;\n    numberInput: string;\n    alphaNumeric: string;\n    textAreaInput: string;\n}\n\ninterface FormData2 {\n    minLenInput: string;\n    maxLenInput: string;\n    rangeLenInput: string;\n    minValueInput: string;\n    maxValueInput: string;\n    rangeValueInput: string;\n    regEx: string;\n}\n\nconst NormalFormValidation = () => {\n    const [validated, setValidated] = useState<boolean>(false);\n\n    /*\n     * handle form submission\n     */\n    const handleSubmit = (event: any) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        setValidated(true);\n    };\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Bootstrap Validation - Normal</h4>\n                    <p className=\"sub-header\">\n                        Provide valuable, actionable feedback to your users with HTML5 form validation–available in all\n                        our supported browsers.\n                    </p>\n\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                        <Form.Group className=\"mb-3\" controlId=\"validationCustom01\">\n                            <Form.Label>First name</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"First name\" defaultValue=\"Mark\" />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"validationCustom02\">\n                            <Form.Label>Last name</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"Last name\" defaultValue=\"Otto\" />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"validationCustomUsername\">\n                            <Form.Label>Username</Form.Label>\n                            <InputGroup hasValidation>\n                                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Username\"\n                                    aria-describedby=\"inputGroupPrepend\"\n                                    required\n                                />\n                                <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback>\n                            </InputGroup>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"validationCustom03\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"City\" required />\n                            <Form.Control.Feedback type=\"invalid\">Please provide a valid city.</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"validationCustom04\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"State\" required />\n                            <Form.Control.Feedback type=\"invalid\">Please provide a valid state.</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"validationCustom05\">\n                            <Form.Label>Zip</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Zip\" required />\n                            <Form.Control.Feedback type=\"invalid\">Please provide a valid zip.</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Check\n                                id=\"validation-check\"\n                                required\n                                label=\"Agree to terms and conditions\"\n                                feedback=\"You must agree before submitting.\"\n                            />\n                        </Form.Group>\n                        <Button type=\"submit\">Submit form</Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst FormValidationWithTooltip = () => {\n    const [validated, setValidated] = useState<boolean>(false);\n\n    /*\n     * handle form submission\n     */\n    const handleSubmit = (event: any) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        setValidated(true);\n    };\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h4 className=\"header-title\">Bootstrap Validation (Tooltips)</h4>\n                    <p className=\"sub-header\">\n                        If your form layout allows it, you can swap the <code>.valid | invalid-feedback</code> classes\n                        for <code>.valid | invalid-tooltip</code> classes to display validation feedback in a styled\n                        tooltip.\n                    </p>\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                        <Form.Group className=\"position-relative mb-3\" controlId=\"validationTooltip01\">\n                            <Form.Label>First name</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"First name\" defaultValue=\"Mark\" />\n                            <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"position-relative mb-3\" controlId=\"validationTooltip02\">\n                            <Form.Label>Last name</Form.Label>\n                            <Form.Control required type=\"text\" placeholder=\"Last name\" defaultValue=\"Otto\" />\n                            <Form.Control.Feedback tooltip>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"position-relative mb-3\" controlId=\"validationCustonTooltipme\">\n                            <Form.Label>Username</Form.Label>\n                            <InputGroup hasValidation>\n                                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Username\"\n                                    aria-describedby=\"inputGroupPrepend\"\n                                    required\n                                />\n                                <Form.Control.Feedback type=\"invalid\" tooltip>\n                                    Please choose a username.\n                                </Form.Control.Feedback>\n                            </InputGroup>\n                        </Form.Group>\n                        <Form.Group className=\"position-relative mb-3\" controlId=\"validationTooltip03\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"City\" required />\n                            <Form.Control.Feedback type=\"invalid\" tooltip>\n                                Please provide a valid city.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"position-relative mb-3\" controlId=\"validationTooltip04\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"State\" required />\n                            <Form.Control.Feedback type=\"invalid\" tooltip>\n                                Please provide a valid state.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"position-relative mb-3\" controlId=\"validationTooltip05\">\n                            <Form.Label>Zip</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Zip\" required />\n                            <Form.Control.Feedback type=\"invalid\" tooltip>\n                                Please provide a valid zip.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Button type=\"submit\">Submit form</Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nconst BasicForm = () => {\n    /*\n    form validation schema\n    */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            username: yup.string().required('Please enter Username'),\n            email: yup.string().required('Please enter Email address'),\n            password: yup.string().required('Please enter Password'),\n            confirmpassword: yup\n                .string()\n                .oneOf([yup.ref('password'), null], \"Passwords don't match\")\n                .required('This value is required.'),\n            checkbox: yup.bool().oneOf([true], 'Must accept Terms and Conditions'),\n        })\n    );\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-1\">Basic Form</h4>\n                <p className=\"sub-header\">React validation with react-hook-form library.</p>\n                <VerticalForm<UserData>\n                    onSubmit={() => {}}\n                    resolver={schemaResolver}\n                    defaultValues={{ username: 'test' }}\n                >\n                    <FormInput\n                        label={'Username'}\n                        type=\"text\"\n                        name=\"username\"\n                        placeholder=\"Enter your name\"\n                        containerClass={'mb-2'}\n                    />\n                    <FormInput\n                        label={'Email address'}\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                        containerClass={'mb-2'}\n                    />\n                    <FormInput\n                        label={'Password'}\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        endIcon={false}\n                        containerClass={'mb-2'}\n                    />\n                    <FormInput\n                        label={'Confirm Password'}\n                        type=\"password\"\n                        name=\"confirmpassword\"\n                        placeholder=\"Password\"\n                        endIcon={false}\n                        containerClass={'mb-2'}\n                    />\n                    <FormInput label={'Remember me'} type=\"checkbox\" name=\"checkbox\" containerClass={'mb-2'} />\n\n                    <div className=\"text-md-end mb-0\">\n                        <Button variant=\"primary\" className=\"me-1\" type=\"submit\">\n                            Submit\n                        </Button>\n                        <Button variant=\"secondary\" type=\"reset\">\n                            Cancel\n                        </Button>\n                    </div>\n                </VerticalForm>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst HorizontalForm = () => {\n    /*\n    form validation schema\n    */\n    const schemaResolver2 = yupResolver(\n        yup.object().shape({\n            email2: yup.string().required('Please enter Email address'),\n            password2: yup.string().required('Please enter Password'),\n            confirmPassword2: yup\n                .string()\n                .oneOf([yup.ref('password'), null], \"Passwords don't match\")\n                .required('This value is required.'),\n            webSite: yup.string().required('Please enter URL'),\n            horizontalCheck: yup.bool().oneOf([true], 'Must accept Terms and Conditions'),\n        })\n    );\n\n    const methods = useForm<UserData2>({\n        defaultValues: { email2: 'minton@coderthemes.com' },\n        resolver: schemaResolver2,\n    });\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-1\">Horizontal Form</h4>\n                <p className=\"sub-header\">React validation with react-hook-form library.</p>\n                <form name=\"chat-form\" id=\"chat-form\" onSubmit={handleSubmit(() => {})}>\n                    <Form.Group as={Row} className=\"mb-2\">\n                        <Form.Label column md={4}>\n                            Email<span className=\"text-danger\">*</span>\n                        </Form.Label>\n                        <Col md={7}>\n                            <FormInput\n                                type=\"email\"\n                                name=\"email2\"\n                                placeholder=\"Email\"\n                                register={register}\n                                key=\"email2\"\n                                errors={errors}\n                                control={control}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-2\">\n                        <Form.Label column md={4}>\n                            Password<span className=\"text-danger\">*</span>\n                        </Form.Label>\n                        <Col md={7}>\n                            <FormInput\n                                type=\"password\"\n                                name=\"password2\"\n                                placeholder=\"Password\"\n                                register={register}\n                                key=\"password2\"\n                                endIcon={false}\n                                errors={errors}\n                                control={control}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-2\">\n                        <Form.Label column md={4}>\n                            Confirm Password<span className=\"text-danger\">*</span>\n                        </Form.Label>\n                        <Col md={7}>\n                            <FormInput\n                                type=\"password\"\n                                name=\"confirmPassword2\"\n                                placeholder=\"Password\"\n                                register={register}\n                                key=\"confirmPassword2\"\n                                endIcon={false}\n                                errors={errors}\n                                control={control}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-2\">\n                        <Form.Label column md={4}>\n                            Web Site<span className=\"text-danger\">*</span>\n                        </Form.Label>\n                        <Col md={7}>\n                            <FormInput\n                                type=\"url\"\n                                name=\"webSite\"\n                                placeholder=\"URL\"\n                                register={register}\n                                key=\"webSite\"\n                                errors={errors}\n                                control={control}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-2\" controlId=\"horizontalCheck\">\n                        <Col md={{ span: 8, offset: 4 }}>\n                            <FormInput\n                                label={'Remember me'}\n                                type=\"checkbox\"\n                                name=\"horizontalCheck\"\n                                register={register}\n                                key=\"horizontalCheck\"\n                                errors={errors}\n                                control={control}\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-2\">\n                        <Col sm={{ span: 8, offset: 4 }}>\n                            <Button variant=\"primary\" className=\"me-1\" type=\"submit\">\n                                Submit\n                            </Button>\n                            <Button variant=\"secondary\" type=\"reset\">\n                                Cancel\n                            </Button>\n                        </Col>\n                    </Form.Group>\n                </form>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst ValidationTypes = () => {\n    /*\n       form validation schema\n       */\n    const schemaResolver3 = yupResolver(\n        yup.object().shape({\n            requiredInput: yup.string().required('This value is required.'),\n            email: yup.string().required('This value is required.').email('This value should be a valid email.'),\n            equalTo1: yup.string().required('This value is required.'),\n            equalTo2: yup\n                .string()\n                .oneOf([yup.ref('equalTo1'), null], 'This value should be the same.')\n                .required('This value is required.'),\n            url: yup.string().required('This value is required.').url('This value should be a valid url.'),\n            digits: yup\n                .number()\n                .typeError('This value should be digits.')\n                .required('This value is required.')\n                .integer('This value should be digits')\n                .positive(),\n            numberInput: yup.number().typeError('This value should be digits.').required('This value is required.'),\n            alphaNumeric: yup\n                .string()\n                .required('This value is required.')\n                .matches(/^[a-zA-Z0-9]+$/, 'This value should be a valid alphanumeric.'),\n            textAreaInput: yup.string().required('This value is required.'),\n        })\n    );\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-1\">Validation type</h4>\n                <p className=\"sub-header\">React validation with react-hook-form library.</p>\n                <VerticalForm<FormData1> onSubmit={() => {}} resolver={schemaResolver3}>\n                    <FormInput\n                        label={'Required'}\n                        type=\"text\"\n                        name=\"requiredInput\"\n                        placeholder=\"Type Something\"\n                        containerClass={'mb-2'}\n                    />\n                    <FormInput\n                        label={'Equal To'}\n                        type=\"password\"\n                        name=\"equalTo1\"\n                        placeholder=\"Password\"\n                        endIcon={false}\n                    />\n                    <FormInput\n                        type=\"password\"\n                        name=\"equalTo2\"\n                        placeholder=\"Re-Type Password\"\n                        endIcon={false}\n                        containerClass={'mt-1 mb-2'}\n                    />\n\n                    <FormInput\n                        label={'E-Mail'}\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Enter a valid e-mail\"\n                        containerClass={'mb-2'}\n                    />\n                    <FormInput label={'URL'} type=\"url\" name=\"url\" placeholder=\"URL\" containerClass={'mb-2'} />\n                    <FormInput\n                        label={'Digits'}\n                        type=\"text\"\n                        name=\"digits\"\n                        placeholder=\"Enter only digits\"\n                        containerClass={'mb-2'}\n                    />\n                    <FormInput\n                        label={'Number'}\n                        type=\"text\"\n                        name=\"numberInput\"\n                        placeholder=\"Enter only numbers\"\n                        containerClass={'mb-2'}\n                    />\n                    <FormInput\n                        label={'Alphanumeric'}\n                        type=\"text\"\n                        name=\"alphaNumeric\"\n                        containerClass={'mb-2'}\n                        placeholder=\"Enter alphanumeric value\"\n                    />\n                    <FormInput label={'Textarea'} type=\"textarea\" name=\"textAreaInput\" containerClass={'mb-2'} />\n                    <div>\n                        <div>\n                            <Button variant=\"primary\" className=\"waves-effect waves-light me-1\" type=\"submit\">\n                                Submit\n                            </Button>\n                            <Button variant=\"secondary\" type=\"reset\" className=\" waves-effect\">\n                                Cancel\n                            </Button>\n                        </div>\n                    </div>\n                </VerticalForm>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst RangeValidation = () => {\n    /*\n     form validation schema\n     */\n    const schemaResolver4 = yupResolver(\n        yup.object().shape({\n            minLenInput: yup\n                .string()\n                .required('This value is required.')\n                .min(6, 'This value is too short. It should have 6 characters or more.'),\n            maxLenInput: yup\n                .string()\n                .required('This value is required.')\n                .max(6, 'This value is too long. It should have 6 characters or fewer.'),\n            rangeLenInput: yup\n                .string()\n                .min(5, 'This value length is invalid. It should be between 5 and 10 characters long.')\n                .max(10, 'This value length is invalid. It should be between 5 and 10 characters long.')\n                .required('This value is required.'),\n            minValueInput: yup\n                .number()\n                .min(6, 'This value should be greater than or equal to 6.')\n                .required('This value is required.'),\n            maxValueInput: yup\n                .number()\n                .max(6, 'This value should be less than or equal to 6.')\n                .required('This value is required.'),\n            rangeValueInput: yup\n                .number()\n                .min(6, 'This value should be between 6 and 100.')\n                .max(100, 'This value should be between 6 and 100.')\n                .required('This value is required.'),\n            regEx: yup\n                .string()\n                .required('This value is required.')\n                .matches(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/, 'This value seems to be invalid.'),\n        })\n    );\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-1\">Range validation</h4>\n                <p className=\"sub-header\">React validation with react-hook-form library.</p>\n                <VerticalForm<FormData2> onSubmit={() => {}} resolver={schemaResolver4}>\n                    <FormInput\n                        label={'Min Length'}\n                        type=\"text\"\n                        name=\"minLenInput\"\n                        placeholder=\"Min 6 chars.\"\n                        containerClass={'mb-2'}\n                    />\n                    <FormInput\n                        label={'Max Length'}\n                        type=\"text\"\n                        name=\"maxLenInput\"\n                        placeholder=\"Max 6 chars\"\n                        containerClass={'mb-2'}\n                    />\n                    <FormInput\n                        label={'Range Length'}\n                        type=\"text\"\n                        name=\"rangeLenInput\"\n                        placeholder=\"Text between 5 - 10 chars length\"\n                        containerClass={'mb-2'}\n                    />\n                    <FormInput\n                        label={'Min Value'}\n                        type=\"text\"\n                        name=\"minValueInput\"\n                        placeholder=\"Min value is 6\"\n                        containerClass={'mb-2'}\n                    />\n                    <FormInput\n                        label={'Max Value'}\n                        type=\"text\"\n                        name=\"maxValueInput\"\n                        placeholder=\"Max value is 6\"\n                        containerClass={'mb-2'}\n                    />\n                    <FormInput\n                        label={'Range Value'}\n                        type=\"text\"\n                        name=\"rangeValueInput\"\n                        placeholder=\"Number between 6 - 100\"\n                        containerClass={'mb-2'}\n                    />\n                    <FormInput\n                        label={'Regular Exp'}\n                        type=\"text\"\n                        name=\"regEx\"\n                        placeholder=\"Hex. Color\"\n                        containerClass={'mb-2'}\n                    />\n\n                    <div>\n                        <div>\n                            <Button variant=\"primary\" className=\"me-1 waves-effect waves-light\" type=\"submit\">\n                                Submit\n                            </Button>\n                            <Button variant=\"secondary\" type=\"reset\" className=\"waves-effect\">\n                                Cancel\n                            </Button>\n                        </div>\n                    </div>\n                </VerticalForm>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst FormValidation = () => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Forms', path: '/forms/validation' },\n                    { label: 'Form Validation', path: '/forms/validation', active: true },\n                ]}\n                title={'Form Validation'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <NormalFormValidation />\n                </Col>\n\n                <Col lg={6}>\n                    <FormValidationWithTooltip />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <BasicForm />\n                </Col>\n                <Col lg={6}>\n                    <HorizontalForm />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <ValidationTypes />\n                </Col>\n                <Col lg={6}>\n                    <RangeValidation />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default FormValidation;\n"]},"metadata":{},"sourceType":"module"}