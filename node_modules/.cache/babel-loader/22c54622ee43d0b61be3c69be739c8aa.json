{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyecto\\\\practica\\\\src\\\\pages\\\\dashboard\\\\Analytics\\\\Statistics.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = _ref => {\n  _s();\n\n  let {\n    title,\n    stats,\n    trend\n  } = _ref;\n  const [updatedStats, setUpdatedStats] = useState(stats);\n  useEffect(() => {\n    const interval = setInterval(function () {\n      let ac = Math.floor(Math.random() * 352 + 142);\n      setUpdatedStats(ac); // var ac2 = Math.floor(Math.random() * ac + 86);\n      // setStats2(ac2);\n    }, 2000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n        placement: \"bottom\",\n        delay: {\n          show: 250,\n          hide: 100\n        },\n        overlay: props => /*#__PURE__*/_jsxDEV(Tooltip, {\n          id: \"overlay-example\",\n          ...props,\n          children: \"More Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-info-circle text-muted float-end\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"m-0 font-16\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"my-3 text-center\",\n        children: updatedStats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted m-0\",\n        children: [trend.title, \": \", trend.stats, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"float-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: classNames('mdi', {\n              'mdi-arrow-down-bold text-danger': trend.direction === 'down'\n            }, {\n              'mdi-arrow-up-bold text-success': trend.direction === 'up'\n            }, 'me-1')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), trend.rate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Statistics, \"COlE+bTGVELFyIKfyo4cmbERJCE=\");\n\n_c = Statistics;\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["C:/proyecto/practica/src/pages/dashboard/Analytics/Statistics.tsx"],"names":["React","useState","useEffect","Card","OverlayTrigger","Tooltip","classNames","Statistics","title","stats","trend","updatedStats","setUpdatedStats","interval","setInterval","ac","Math","floor","random","clearInterval","show","hide","props","direction","rate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,OAA/B,QAA8C,iBAA9C;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAaA,MAAMC,UAAU,GAAG,QAAkD;AAAA;;AAAA,MAAjD;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAAiD;AACjE,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAASQ,KAAT,CAAhD;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACrC,UAAIC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAAhB,GAAsB,GAAjC,CAAT;AACAN,MAAAA,eAAe,CAACG,EAAD,CAAf,CAFqC,CAIrC;AACA;AACH,KAN2B,EAMzB,IANyB,CAA5B;AAOA,WAAO,MAAM;AACTI,MAAAA,aAAa,CAACN,QAAD,CAAb;AACH,KAFD;AAGH,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,cAAD;AACI,QAAA,SAAS,EAAC,QADd;AAEI,QAAA,KAAK,EAAE;AAAEO,UAAAA,IAAI,EAAE,GAAR;AAAaC,UAAAA,IAAI,EAAE;AAAnB,SAFX;AAGI,QAAA,OAAO,EAAGC,KAAD,iBACL,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,iBAAZ;AAAA,aAAkCA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJR;AAAA,+BASI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,kBAA6Bd;AAA7B;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA,kBAAkCG;AAAlC;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcI;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA,mBACKD,KAAK,CAACF,KADX,QACoBE,KAAK,CAACD,KAD1B,eAEI;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,kCACI;AACI,YAAA,SAAS,EAAEH,UAAU,CACjB,KADiB,EAEjB;AAAE,iDAAmCI,KAAK,CAACa,SAAN,KAAoB;AAAzD,aAFiB,EAGjB;AAAE,gDAAkCb,KAAK,CAACa,SAAN,KAAoB;AAAxD,aAHiB,EAIjB,MAJiB;AADzB;AAAA;AAAA;AAAA;AAAA,kBADJ,EASKb,KAAK,CAACc,IATX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CAjDD;;GAAMjB,U;;KAAAA,U;AAmDN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport classNames from 'classnames';\n\ninterface StatisticsCardProps {\n    title: string;\n    stats: number;\n    trend: {\n        title: string;\n        stats: string;\n        direction: string;\n        rate: string;\n    };\n}\n\nconst Statistics = ({ title, stats, trend }: StatisticsCardProps) => {\n    const [updatedStats, setUpdatedStats] = useState<number>(stats);\n\n    useEffect(() => {\n        const interval = setInterval(function () {\n            let ac = Math.floor(Math.random() * 352 + 142);\n            setUpdatedStats(ac);\n\n            // var ac2 = Math.floor(Math.random() * ac + 86);\n            // setStats2(ac2);\n        }, 2000);\n        return () => {\n            clearInterval(interval);\n        };\n    }, []);\n\n    return (\n        <Card>\n            <Card.Body>\n                <OverlayTrigger\n                    placement=\"bottom\"\n                    delay={{ show: 250, hide: 100 }}\n                    overlay={(props: any) => (\n                        <Tooltip id=\"overlay-example\" {...props}>\n                            More Info\n                        </Tooltip>\n                    )}\n                >\n                    <i className=\"fa fa-info-circle text-muted float-end\"></i>\n                </OverlayTrigger>\n                <h4 className=\"m-0 font-16\">{title}</h4>\n                <h2 className=\"my-3 text-center\">{updatedStats}</h2>\n                <p className=\"text-muted m-0\">\n                    {trend.title}: {trend.stats}\n                    <span className=\"float-end\">\n                        <i\n                            className={classNames(\n                                'mdi',\n                                { 'mdi-arrow-down-bold text-danger': trend.direction === 'down' },\n                                { 'mdi-arrow-up-bold text-success': trend.direction === 'up' },\n                                'me-1'\n                            )}\n                        ></i>\n                        {trend.rate}\n                    </span>\n                </p>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}